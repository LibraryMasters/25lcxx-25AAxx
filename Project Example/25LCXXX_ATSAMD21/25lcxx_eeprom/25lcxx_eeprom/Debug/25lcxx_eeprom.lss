
25lcxx_eeprom.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000a2a8  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0000a2a8  0000a2a8  0001a2a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009b8  20000000  0000a2b0  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000001a8  200009b8  0000ac68  000209b8  2**2
                  ALLOC
  4 .stack        00002000  20000b60  0000ae10  000209b8  2**0
                  ALLOC
  5 .ARM.attributes 00000028  00000000  00000000  000209b8  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000209e0  2**0
                  CONTENTS, READONLY
  7 .debug_info   00025109  00000000  00000000  00020a39  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00002fe5  00000000  00000000  00045b42  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000de63  00000000  00000000  00048b27  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000be8  00000000  00000000  0005698a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000ca0  00000000  00000000  00057572  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00019213  00000000  00000000  00058212  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000e616  00000000  00000000  00071425  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000871b4  00000000  00000000  0007fa3b  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002da0  00000000  00000000  00106bf0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	60 2b 00 20 71 12 00 00 6d 12 00 00 6d 12 00 00     `+. q...m...m...
	...
      2c:	6d 12 00 00 00 00 00 00 00 00 00 00 6d 12 00 00     m...........m...
      3c:	6d 12 00 00 6d 12 00 00 6d 12 00 00 6d 12 00 00     m...m...m...m...
      4c:	6d 12 00 00 6d 12 00 00 6d 12 00 00 6d 12 00 00     m...m...m...m...
      5c:	6d 12 00 00 6d 12 00 00 6d 12 00 00 6d 12 00 00     m...m...m...m...
      6c:	6d 12 00 00 6d 12 00 00 6d 12 00 00 0d 1e 00 00     m...m...m.......
      7c:	6d 12 00 00 6d 12 00 00 6d 12 00 00 6d 12 00 00     m...m...m...m...
      8c:	6d 12 00 00 6d 12 00 00 00 00 00 00 00 00 00 00     m...m...........
      9c:	6d 12 00 00 6d 12 00 00 6d 12 00 00 6d 12 00 00     m...m...m...m...
      ac:	6d 12 00 00 00 00 00 00                             m.......

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	200009b8 	.word	0x200009b8
      d4:	00000000 	.word	0x00000000
      d8:	0000a2b0 	.word	0x0000a2b0

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	200009bc 	.word	0x200009bc
     108:	0000a2b0 	.word	0x0000a2b0
     10c:	0000a2b0 	.word	0x0000a2b0
     110:	00000000 	.word	0x00000000

00000114 <a_e25lcxx_spi_write>:
 * @return status code
 *          - 0 success
 *          - 1 failed write
 * @note
 */
uint8_t a_e25lcxx_spi_write(E_25LCxx_handle_t *pHandler, uint16_t u16Address, uint32_t *pBuffer, size_t iLength) {
     114:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     116:	0005      	movs	r5, r0
     118:	000c      	movs	r4, r1
     11a:	0016      	movs	r6, r2
     11c:	001f      	movs	r7, r3
    pHandler->pGpio_write(E_25LCxx_BOOL_TRUE); /**< disable write protect before attempt writing */
     11e:	2001      	movs	r0, #1
     120:	692b      	ldr	r3, [r5, #16]
     122:	4798      	blx	r3
    if (pHandler->pSpi_write(u16Address, pBuffer, iLength) != 0) {
     124:	003a      	movs	r2, r7
     126:	0031      	movs	r1, r6
     128:	0020      	movs	r0, r4
     12a:	68ab      	ldr	r3, [r5, #8]
     12c:	4798      	blx	r3
     12e:	1e04      	subs	r4, r0, #0
     130:	d002      	beq.n	138 <a_e25lcxx_spi_write+0x24>
        return 1; /**< error error */
     132:	2401      	movs	r4, #1
    }
    pHandler->pGpio_write(E_25LCxx_BOOL_FALSE); /**< enable write protect pin after writing */
    return 0; /**<success error */

}
     134:	0020      	movs	r0, r4
     136:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    pHandler->pGpio_write(E_25LCxx_BOOL_FALSE); /**< enable write protect pin after writing */
     138:	692b      	ldr	r3, [r5, #16]
     13a:	2000      	movs	r0, #0
     13c:	4798      	blx	r3
    return 0; /**<success error */
     13e:	e7f9      	b.n	134 <a_e25lcxx_spi_write+0x20>

00000140 <a_e25lcxx_spi_read>:
 * @return status code
 *          - 0 success
 *          - 1 failed read
 * @note
 */
uint8_t a_e25lcxx_spi_read(E_25LCxx_handle_t *pHandler, uint16_t u16Address, uint32_t *pBuffer, size_t iLength) {
     140:	b570      	push	{r4, r5, r6, lr}
     142:	000d      	movs	r5, r1
     144:	0011      	movs	r1, r2

    if (pHandler->pSpi_read(u16Address, pBuffer, iLength) != 0) {
     146:	68c4      	ldr	r4, [r0, #12]
     148:	001a      	movs	r2, r3
     14a:	0028      	movs	r0, r5
     14c:	47a0      	blx	r4
     14e:	2800      	cmp	r0, #0
     150:	d100      	bne.n	154 <a_e25lcxx_spi_read+0x14>
        return 1; /**< failed error */
    }
    return 0; /**< success error */
}
     152:	bd70      	pop	{r4, r5, r6, pc}
        return 1; /**< failed error */
     154:	2001      	movs	r0, #1
     156:	e7fc      	b.n	152 <a_e25lcxx_spi_read+0x12>

00000158 <E_25LCxx_init>:
 *            - 1 spi initialization failed
 *            - 2 handle is NULL
 *            - 3 linked functions is NULL
 * @note      none
 */
uint8_t E_25LCxx_init(E_25LCxx_handle_t *pHandle) {
     158:	b510      	push	{r4, lr}
     15a:	1e04      	subs	r4, r0, #0

    if (pHandle == NULL)
     15c:	d03f      	beq.n	1de <E_25LCxx_init+0x86>
        return 2; /**< return failed error  */
    if (pHandle->pDebug_print == NULL)
     15e:	69c3      	ldr	r3, [r0, #28]
     160:	2b00      	cmp	r3, #0
     162:	d03e      	beq.n	1e2 <E_25LCxx_init+0x8a>
        return 3; /**< return failed error  */

    if (pHandle->pDelay_ms == NULL) {
     164:	6982      	ldr	r2, [r0, #24]
     166:	2a00      	cmp	r2, #0
     168:	d018      	beq.n	19c <E_25LCxx_init+0x44>
        pHandle->pDebug_print("25LCxx: delay_ms is null\r\n");
#endif // E_25LCXX_DEBUG_MODE
        return 3;
    }

    if (pHandle->pSpi_init == NULL) {
     16a:	6802      	ldr	r2, [r0, #0]
     16c:	2a00      	cmp	r2, #0
     16e:	d019      	beq.n	1a4 <E_25LCxx_init+0x4c>
        pHandle->pDebug_print("25LCxx: initialize is null\r\n");
#endif // E_25LCXX_DEBUG_MODE
        return 3;
    }

    if (pHandle->pSpi_deinit == NULL) {
     170:	6841      	ldr	r1, [r0, #4]
     172:	2900      	cmp	r1, #0
     174:	d01a      	beq.n	1ac <E_25LCxx_init+0x54>
#endif // E_25LCXX_DEBUG_MODE
        return 3;
    }


    if (pHandle->pSpi_read == NULL) {
     176:	68c1      	ldr	r1, [r0, #12]
     178:	2900      	cmp	r1, #0
     17a:	d01b      	beq.n	1b4 <E_25LCxx_init+0x5c>
#endif // E_25LCXX_DEBUG_MODE
        return 3;
    }


    if (pHandle->pSpi_write == NULL) {
     17c:	6881      	ldr	r1, [r0, #8]
     17e:	2900      	cmp	r1, #0
     180:	d01c      	beq.n	1bc <E_25LCxx_init+0x64>
#endif // E_25LCXX_DEBUG_MODE
        return 3;
    }


    if (pHandle->pChip_select == NULL) {
     182:	6941      	ldr	r1, [r0, #20]
     184:	2900      	cmp	r1, #0
     186:	d01d      	beq.n	1c4 <E_25LCxx_init+0x6c>
#endif // E_25LCXX_DEBUG_MODE
        return 3;
    }


    if (pHandle->pGpio_write == NULL) {
     188:	6901      	ldr	r1, [r0, #16]
     18a:	2900      	cmp	r1, #0
     18c:	d01e      	beq.n	1cc <E_25LCxx_init+0x74>
        pHandle->pDebug_print("25LCxx: gpio write is null\r\n");
#endif // E_25LCXX_DEBUG_MODE
        return 3;
    }

    if (pHandle->pSpi_init()) {
     18e:	4790      	blx	r2
     190:	2800      	cmp	r0, #0
     192:	d11f      	bne.n	1d4 <E_25LCxx_init+0x7c>
        pHandle->pDebug_print("25LCxx: failed to initialize spi\r\n");
#endif // E_25LCXX_DEBUG_MODE
        return 1;
    }

    pHandle->u8Inited = 1;
     194:	2201      	movs	r2, #1
     196:	2322      	movs	r3, #34	; 0x22
     198:	54e2      	strb	r2, [r4, r3]
    return 0; /**< return success */
     19a:	e021      	b.n	1e0 <E_25LCxx_init+0x88>
        pHandle->pDebug_print("25LCxx: delay_ms is null\r\n");
     19c:	4812      	ldr	r0, [pc, #72]	; (1e8 <E_25LCxx_init+0x90>)
     19e:	4798      	blx	r3
        return 3;
     1a0:	2003      	movs	r0, #3
     1a2:	e01d      	b.n	1e0 <E_25LCxx_init+0x88>
        pHandle->pDebug_print("25LCxx: initialize is null\r\n");
     1a4:	4811      	ldr	r0, [pc, #68]	; (1ec <E_25LCxx_init+0x94>)
     1a6:	4798      	blx	r3
        return 3;
     1a8:	2003      	movs	r0, #3
     1aa:	e019      	b.n	1e0 <E_25LCxx_init+0x88>
        pHandle->pDebug_print("25LCxx: de-initialize is null\r\n");
     1ac:	4810      	ldr	r0, [pc, #64]	; (1f0 <E_25LCxx_init+0x98>)
     1ae:	4798      	blx	r3
        return 3;
     1b0:	2003      	movs	r0, #3
     1b2:	e015      	b.n	1e0 <E_25LCxx_init+0x88>
        pHandle->pDebug_print("25LCxx: spi read is null\r\n");
     1b4:	480f      	ldr	r0, [pc, #60]	; (1f4 <E_25LCxx_init+0x9c>)
     1b6:	4798      	blx	r3
        return 3;
     1b8:	2003      	movs	r0, #3
     1ba:	e011      	b.n	1e0 <E_25LCxx_init+0x88>
        pHandle->pDebug_print("25LCxx: spi write is null\r\n");
     1bc:	480e      	ldr	r0, [pc, #56]	; (1f8 <E_25LCxx_init+0xa0>)
     1be:	4798      	blx	r3
        return 3;
     1c0:	2003      	movs	r0, #3
     1c2:	e00d      	b.n	1e0 <E_25LCxx_init+0x88>
        pHandle->pDebug_print("25LCxx: chip select is null\r\n");
     1c4:	480d      	ldr	r0, [pc, #52]	; (1fc <E_25LCxx_init+0xa4>)
     1c6:	4798      	blx	r3
        return 3;
     1c8:	2003      	movs	r0, #3
     1ca:	e009      	b.n	1e0 <E_25LCxx_init+0x88>
        pHandle->pDebug_print("25LCxx: gpio write is null\r\n");
     1cc:	480c      	ldr	r0, [pc, #48]	; (200 <E_25LCxx_init+0xa8>)
     1ce:	4798      	blx	r3
        return 3;
     1d0:	2003      	movs	r0, #3
     1d2:	e005      	b.n	1e0 <E_25LCxx_init+0x88>
        pHandle->pDebug_print("25LCxx: failed to initialize spi\r\n");
     1d4:	69e3      	ldr	r3, [r4, #28]
     1d6:	480b      	ldr	r0, [pc, #44]	; (204 <E_25LCxx_init+0xac>)
     1d8:	4798      	blx	r3
        return 1;
     1da:	2001      	movs	r0, #1
     1dc:	e000      	b.n	1e0 <E_25LCxx_init+0x88>
        return 2; /**< return failed error  */
     1de:	2002      	movs	r0, #2
}
     1e0:	bd10      	pop	{r4, pc}
        return 3; /**< return failed error  */
     1e2:	2003      	movs	r0, #3
     1e4:	e7fc      	b.n	1e0 <E_25LCxx_init+0x88>
     1e6:	46c0      	nop			; (mov r8, r8)
     1e8:	00009160 	.word	0x00009160
     1ec:	0000917c 	.word	0x0000917c
     1f0:	0000919c 	.word	0x0000919c
     1f4:	000091bc 	.word	0x000091bc
     1f8:	000091d8 	.word	0x000091d8
     1fc:	000091f4 	.word	0x000091f4
     200:	00009214 	.word	0x00009214
     204:	00009234 	.word	0x00009234

00000208 <E_25LCxx_set_variant>:
 *            - 2 handle is NULL
 *            - 3 handle is not initialized
 * @note      none
 */
uint8_t E_25LCxx_set_variant(E_25LCxx_handle_t *pHandle, E_25LCxx_variant_t variant) {
    if (pHandle == NULL)
     208:	2800      	cmp	r0, #0
     20a:	d009      	beq.n	220 <E_25LCxx_set_variant+0x18>
        return 2; /**< return failed error */
    if (pHandle->u8Inited != 1)
     20c:	2322      	movs	r3, #34	; 0x22
     20e:	5cc3      	ldrb	r3, [r0, r3]
     210:	2b01      	cmp	r3, #1
     212:	d001      	beq.n	218 <E_25LCxx_set_variant+0x10>
        return 3; /**< return failed error */
     214:	2003      	movs	r0, #3
        pHandle->pDebug_print("25LCxx: failed to set variant\r\n");
#endif // E_25LCXX_DEBUG_MODE
        return 1; /**< return failed error*/
    }
    return 0; /**< return success */
}
     216:	4770      	bx	lr
    pHandle->u8Device_type = variant;
     218:	331f      	adds	r3, #31
     21a:	54c1      	strb	r1, [r0, r3]
    return 0; /**< return success */
     21c:	2000      	movs	r0, #0
     21e:	e7fa      	b.n	216 <E_25LCxx_set_variant+0xe>
        return 2; /**< return failed error */
     220:	2002      	movs	r0, #2
     222:	e7f8      	b.n	216 <E_25LCxx_set_variant+0xe>

00000224 <E_25LCxx_set_page_size>:
 *            - 2 handle is NULL
 *            - 3 handle is not initialized
 * @note      none
 */
uint8_t E_25LCxx_set_page_size(E_25LCxx_handle_t *pHandle, E_25LCxx_page_size_t iSize) {
    if (pHandle == NULL)
     224:	2800      	cmp	r0, #0
     226:	d009      	beq.n	23c <E_25LCxx_set_page_size+0x18>
        return 2; /**< return failed error */
    if (pHandle->u8Inited != 1)
     228:	2322      	movs	r3, #34	; 0x22
     22a:	5cc3      	ldrb	r3, [r0, r3]
     22c:	2b01      	cmp	r3, #1
     22e:	d001      	beq.n	234 <E_25LCxx_set_page_size+0x10>
        return 3; /**< return failed error */
     230:	2003      	movs	r0, #3
#endif // E_25LCXX_DEBUG_MODE
        return 1; /**< return failed error */
    }

    return 0; /**< return success */
}
     232:	4770      	bx	lr
    pHandle->iPage_size = iSize;
     234:	3320      	adds	r3, #32
     236:	54c1      	strb	r1, [r0, r3]
    return 0; /**< return success */
     238:	2000      	movs	r0, #0
     23a:	e7fa      	b.n	232 <E_25LCxx_set_page_size+0xe>
        return 2; /**< return failed error */
     23c:	2002      	movs	r0, #2
     23e:	e7f8      	b.n	232 <E_25LCxx_set_page_size+0xe>

00000240 <E_25LCxx_get_wip_status>:
 *            - 1 get status failed
 *            - 2 handle is NULL
 *            - 3 handle is not initialized
 * @note      none
 */
uint8_t E_25LCxx_get_wip_status(E_25LCxx_handle_t *pHandle, E_25LCxx_write_in_process_status_t *pStatus) {
     240:	b5f0      	push	{r4, r5, r6, r7, lr}
     242:	b083      	sub	sp, #12
     244:	0004      	movs	r4, r0
     246:	000f      	movs	r7, r1
    uint8_t res;
    uint8_t status;

    if (pHandle == NULL)
     248:	2800      	cmp	r0, #0
     24a:	d022      	beq.n	292 <E_25LCxx_get_wip_status+0x52>
        return 2; /**< return failed error */
    if (pHandle->u8Inited != 1)
     24c:	2322      	movs	r3, #34	; 0x22
     24e:	5cc6      	ldrb	r6, [r0, r3]
     250:	2e01      	cmp	r6, #1
     252:	d003      	beq.n	25c <E_25LCxx_get_wip_status+0x1c>
        return 3; /**< return failed error */
     254:	2503      	movs	r5, #3
    }

    *pStatus = (E_25LCxx_write_in_process_status_t) (status & E_25LCXXX_WIP_MASK);

    return 0; /**< return success */
}
     256:	0028      	movs	r0, r5
     258:	b003      	add	sp, #12
     25a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    pHandle->pChip_select(SLAVE_SELECT); /**< chip select */
     25c:	2000      	movs	r0, #0
     25e:	6963      	ldr	r3, [r4, #20]
     260:	4798      	blx	r3
    res = a_e25lcxx_spi_read(pHandle, E_25LCXXX_RDSR_REG, (uint8_t *) & status, 1);
     262:	2301      	movs	r3, #1
     264:	466a      	mov	r2, sp
     266:	3207      	adds	r2, #7
     268:	2105      	movs	r1, #5
     26a:	0020      	movs	r0, r4
     26c:	4d0a      	ldr	r5, [pc, #40]	; (298 <E_25LCxx_get_wip_status+0x58>)
     26e:	47a8      	blx	r5
     270:	0005      	movs	r5, r0
    pHandle->pChip_select(SLAVE_ASSERT); /**< chip assert */
     272:	2001      	movs	r0, #1
     274:	6963      	ldr	r3, [r4, #20]
     276:	4798      	blx	r3
    if (res) {
     278:	2d00      	cmp	r5, #0
     27a:	d105      	bne.n	288 <E_25LCxx_get_wip_status+0x48>
    *pStatus = (E_25LCxx_write_in_process_status_t) (status & E_25LCXXX_WIP_MASK);
     27c:	466b      	mov	r3, sp
     27e:	79da      	ldrb	r2, [r3, #7]
     280:	2301      	movs	r3, #1
     282:	4013      	ands	r3, r2
     284:	703b      	strb	r3, [r7, #0]
    return 0; /**< return success */
     286:	e7e6      	b.n	256 <E_25LCxx_get_wip_status+0x16>
        pHandle->pDebug_print("25LCxx:failed to read status reg\r\n");
     288:	69e3      	ldr	r3, [r4, #28]
     28a:	4804      	ldr	r0, [pc, #16]	; (29c <E_25LCxx_get_wip_status+0x5c>)
     28c:	4798      	blx	r3
        return 1; /**< return failed error **/
     28e:	0035      	movs	r5, r6
     290:	e7e1      	b.n	256 <E_25LCxx_get_wip_status+0x16>
        return 2; /**< return failed error */
     292:	2502      	movs	r5, #2
     294:	e7df      	b.n	256 <E_25LCxx_get_wip_status+0x16>
     296:	46c0      	nop			; (mov r8, r8)
     298:	00000141 	.word	0x00000141
     29c:	000092c0 	.word	0x000092c0

000002a0 <E_25LCxx_set_bp_status>:
 *            - 1 set bp failed
 *            - 2 handle is NULL
 *            - 3 handle is not initialized
 * @note      none
 */
uint8_t E_25LCxx_set_bp_status(E_25LCxx_handle_t *pHandle, E_25LCxx_block_protection_status_t status) {
     2a0:	b5f0      	push	{r4, r5, r6, r7, lr}
     2a2:	b083      	sub	sp, #12
     2a4:	0005      	movs	r5, r0
     2a6:	000e      	movs	r6, r1
    uint8_t res;
    uint8_t stat;

    if (pHandle == NULL)
     2a8:	2800      	cmp	r0, #0
     2aa:	d04b      	beq.n	344 <E_25LCxx_set_bp_status+0xa4>
        return 2; /**< return failed error */
    if (pHandle->u8Inited != 1)
     2ac:	2322      	movs	r3, #34	; 0x22
     2ae:	5cc4      	ldrb	r4, [r0, r3]
     2b0:	2c01      	cmp	r4, #1
     2b2:	d003      	beq.n	2bc <E_25LCxx_set_bp_status+0x1c>
        return 3; /**< return failed error */
     2b4:	2403      	movs	r4, #3
#endif // E_25LCXX_DEBUG_MODE
        return 1; /**< return failed error **/
    }
    return 0; /**< return success */

}
     2b6:	0020      	movs	r0, r4
     2b8:	b003      	add	sp, #12
     2ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
    pHandle->pChip_select(SLAVE_SELECT); /**< chip select */
     2bc:	2000      	movs	r0, #0
     2be:	696b      	ldr	r3, [r5, #20]
     2c0:	4798      	blx	r3
    res = a_e25lcxx_spi_read(pHandle, E_25LCXXX_RDSR_REG, (uint8_t *) & stat, 1);
     2c2:	2301      	movs	r3, #1
     2c4:	466a      	mov	r2, sp
     2c6:	3207      	adds	r2, #7
     2c8:	2105      	movs	r1, #5
     2ca:	0028      	movs	r0, r5
     2cc:	4f1e      	ldr	r7, [pc, #120]	; (348 <E_25LCxx_set_bp_status+0xa8>)
     2ce:	47b8      	blx	r7
     2d0:	0007      	movs	r7, r0
    pHandle->pChip_select(SLAVE_ASSERT); /**< chip assert */
     2d2:	2001      	movs	r0, #1
     2d4:	696b      	ldr	r3, [r5, #20]
     2d6:	4798      	blx	r3
    if (res) {
     2d8:	2f00      	cmp	r7, #0
     2da:	d127      	bne.n	32c <E_25LCxx_set_bp_status+0x8c>
    pHandle->pChip_select(SLAVE_SELECT); /**< chip select */
     2dc:	2000      	movs	r0, #0
     2de:	696b      	ldr	r3, [r5, #20]
     2e0:	4798      	blx	r3
    res = a_e25lcxx_spi_write(pHandle, E_25LCXXX_WREN_REG, NULL, 0); /**< enable write operation */
     2e2:	2300      	movs	r3, #0
     2e4:	2200      	movs	r2, #0
     2e6:	2106      	movs	r1, #6
     2e8:	0028      	movs	r0, r5
     2ea:	4f18      	ldr	r7, [pc, #96]	; (34c <E_25LCxx_set_bp_status+0xac>)
     2ec:	47b8      	blx	r7
     2ee:	0007      	movs	r7, r0
    pHandle->pChip_select(SLAVE_ASSERT); /**< chip assert */
     2f0:	2001      	movs	r0, #1
     2f2:	696b      	ldr	r3, [r5, #20]
     2f4:	4798      	blx	r3
    if (res) {
     2f6:	2f00      	cmp	r7, #0
     2f8:	d11c      	bne.n	334 <E_25LCxx_set_bp_status+0x94>
    stat &= ~(0x03 << 2);
     2fa:	466b      	mov	r3, sp
     2fc:	1ddf      	adds	r7, r3, #7
     2fe:	79db      	ldrb	r3, [r3, #7]
     300:	220c      	movs	r2, #12
     302:	4393      	bics	r3, r2
    stat |= (status << 2);
     304:	00b6      	lsls	r6, r6, #2
     306:	431e      	orrs	r6, r3
     308:	703e      	strb	r6, [r7, #0]
    pHandle->pChip_select(SLAVE_SELECT); /**< chip select */
     30a:	2000      	movs	r0, #0
     30c:	696b      	ldr	r3, [r5, #20]
     30e:	4798      	blx	r3
    res = a_e25lcxx_spi_write(pHandle, E_25LCXXX_WRSR_REG, (uint8_t*) & stat, 1);
     310:	2301      	movs	r3, #1
     312:	003a      	movs	r2, r7
     314:	2101      	movs	r1, #1
     316:	0028      	movs	r0, r5
     318:	4e0c      	ldr	r6, [pc, #48]	; (34c <E_25LCxx_set_bp_status+0xac>)
     31a:	47b0      	blx	r6
     31c:	0006      	movs	r6, r0
    pHandle->pChip_select(SLAVE_ASSERT); /**< chip assert */
     31e:	2001      	movs	r0, #1
     320:	696b      	ldr	r3, [r5, #20]
     322:	4798      	blx	r3
    if (res) {
     324:	2e00      	cmp	r6, #0
     326:	d109      	bne.n	33c <E_25LCxx_set_bp_status+0x9c>
    return 0; /**< return success */
     328:	0034      	movs	r4, r6
     32a:	e7c4      	b.n	2b6 <E_25LCxx_set_bp_status+0x16>
        pHandle->pDebug_print("25LCxx:failed to read status reg\r\n");
     32c:	69eb      	ldr	r3, [r5, #28]
     32e:	4808      	ldr	r0, [pc, #32]	; (350 <E_25LCxx_set_bp_status+0xb0>)
     330:	4798      	blx	r3
        return 1; /**< return failed error **/
     332:	e7c0      	b.n	2b6 <E_25LCxx_set_bp_status+0x16>
        pHandle->pDebug_print("25LCxx: failed to enable write operation \r\n");
     334:	69eb      	ldr	r3, [r5, #28]
     336:	4807      	ldr	r0, [pc, #28]	; (354 <E_25LCxx_set_bp_status+0xb4>)
     338:	4798      	blx	r3
        return 1; /**< return fail error */
     33a:	e7bc      	b.n	2b6 <E_25LCxx_set_bp_status+0x16>
        pHandle->pDebug_print("25LCxx:failed to write status reg\r\n");
     33c:	69eb      	ldr	r3, [r5, #28]
     33e:	4806      	ldr	r0, [pc, #24]	; (358 <E_25LCxx_set_bp_status+0xb8>)
     340:	4798      	blx	r3
        return 1; /**< return failed error **/
     342:	e7b8      	b.n	2b6 <E_25LCxx_set_bp_status+0x16>
        return 2; /**< return failed error */
     344:	2402      	movs	r4, #2
     346:	e7b6      	b.n	2b6 <E_25LCxx_set_bp_status+0x16>
     348:	00000141 	.word	0x00000141
     34c:	00000115 	.word	0x00000115
     350:	000092c0 	.word	0x000092c0
     354:	000092e4 	.word	0x000092e4
     358:	00009310 	.word	0x00009310

0000035c <E_25LCxx_get_bp_status>:
 *            - 1 get bp failed
 *            - 2 handle is NULL
 *            - 3 handle is not initialized
 * @note      none
 */
uint8_t E_25LCxx_get_bp_status(E_25LCxx_handle_t *pHandle, E_25LCxx_block_protection_status_t *pStatus) {
     35c:	b5f0      	push	{r4, r5, r6, r7, lr}
     35e:	b083      	sub	sp, #12
     360:	0004      	movs	r4, r0
     362:	000f      	movs	r7, r1
    uint8_t res;
    uint8_t status;

    if (pHandle == NULL)
     364:	2800      	cmp	r0, #0
     366:	d023      	beq.n	3b0 <E_25LCxx_get_bp_status+0x54>
        return 2; /**< return failed error */
    if (pHandle->u8Inited != 1)
     368:	2322      	movs	r3, #34	; 0x22
     36a:	5cc6      	ldrb	r6, [r0, r3]
     36c:	2e01      	cmp	r6, #1
     36e:	d003      	beq.n	378 <E_25LCxx_get_bp_status+0x1c>
        return 3; /**< return failed error */
     370:	2503      	movs	r5, #3
        return 1; /**< return failed error **/
    }

    *pStatus = (E_25LCxx_block_protection_status_t) ((status & E_25LCXXX_BP_MASK) >> 2);
    return 0; /**< return success */
}
     372:	0028      	movs	r0, r5
     374:	b003      	add	sp, #12
     376:	bdf0      	pop	{r4, r5, r6, r7, pc}
    pHandle->pChip_select(SLAVE_SELECT); /**< chip select */
     378:	2000      	movs	r0, #0
     37a:	6963      	ldr	r3, [r4, #20]
     37c:	4798      	blx	r3
    res = a_e25lcxx_spi_read(pHandle, E_25LCXXX_RDSR_REG, (uint8_t *) & status, 1);
     37e:	2301      	movs	r3, #1
     380:	466a      	mov	r2, sp
     382:	3207      	adds	r2, #7
     384:	2105      	movs	r1, #5
     386:	0020      	movs	r0, r4
     388:	4d0a      	ldr	r5, [pc, #40]	; (3b4 <E_25LCxx_get_bp_status+0x58>)
     38a:	47a8      	blx	r5
     38c:	0005      	movs	r5, r0
    pHandle->pChip_select(SLAVE_ASSERT); /**< chip assert */
     38e:	2001      	movs	r0, #1
     390:	6963      	ldr	r3, [r4, #20]
     392:	4798      	blx	r3
    if (res) {
     394:	2d00      	cmp	r5, #0
     396:	d106      	bne.n	3a6 <E_25LCxx_get_bp_status+0x4a>
    *pStatus = (E_25LCxx_block_protection_status_t) ((status & E_25LCXXX_BP_MASK) >> 2);
     398:	466b      	mov	r3, sp
     39a:	79da      	ldrb	r2, [r3, #7]
     39c:	1092      	asrs	r2, r2, #2
     39e:	2303      	movs	r3, #3
     3a0:	4013      	ands	r3, r2
     3a2:	703b      	strb	r3, [r7, #0]
    return 0; /**< return success */
     3a4:	e7e5      	b.n	372 <E_25LCxx_get_bp_status+0x16>
        pHandle->pDebug_print("25LCxx:failed to read status reg\r\n");
     3a6:	69e3      	ldr	r3, [r4, #28]
     3a8:	4803      	ldr	r0, [pc, #12]	; (3b8 <E_25LCxx_get_bp_status+0x5c>)
     3aa:	4798      	blx	r3
        return 1; /**< return failed error **/
     3ac:	0035      	movs	r5, r6
     3ae:	e7e0      	b.n	372 <E_25LCxx_get_bp_status+0x16>
        return 2; /**< return failed error */
     3b0:	2502      	movs	r5, #2
     3b2:	e7de      	b.n	372 <E_25LCxx_get_bp_status+0x16>
     3b4:	00000141 	.word	0x00000141
     3b8:	000092c0 	.word	0x000092c0

000003bc <E_25LCxx_set_write_protect_enable>:
 *            - 1 set wpen failed
 *            - 2 handle is NULL
 *            - 3 handle is not initialized
 * @note      none
 */
uint8_t E_25LCxx_set_write_protect_enable(E_25LCxx_handle_t *pHandle, E_25LCxx_bool_t enable) {
     3bc:	b5f0      	push	{r4, r5, r6, r7, lr}
     3be:	b083      	sub	sp, #12
     3c0:	0005      	movs	r5, r0
     3c2:	000e      	movs	r6, r1
    uint8_t res;
    uint8_t status;

    if (pHandle == NULL)
     3c4:	2800      	cmp	r0, #0
     3c6:	d04b      	beq.n	460 <E_25LCxx_set_write_protect_enable+0xa4>
        return 2; /**< return failed error */
    if (pHandle->u8Inited != 1)
     3c8:	2322      	movs	r3, #34	; 0x22
     3ca:	5cc4      	ldrb	r4, [r0, r3]
     3cc:	2c01      	cmp	r4, #1
     3ce:	d003      	beq.n	3d8 <E_25LCxx_set_write_protect_enable+0x1c>
        return 3; /**< return failed error */
     3d0:	2403      	movs	r4, #3
        return 1; /**< return failed error **/
    }

    return 0; /**< return success */

}
     3d2:	0020      	movs	r0, r4
     3d4:	b003      	add	sp, #12
     3d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    pHandle->pChip_select(SLAVE_SELECT); /**< chip select */
     3d8:	2000      	movs	r0, #0
     3da:	696b      	ldr	r3, [r5, #20]
     3dc:	4798      	blx	r3
    res = a_e25lcxx_spi_read(pHandle, E_25LCXXX_RDSR_REG, (uint8_t *) & status, 1);
     3de:	2301      	movs	r3, #1
     3e0:	466a      	mov	r2, sp
     3e2:	3207      	adds	r2, #7
     3e4:	2105      	movs	r1, #5
     3e6:	0028      	movs	r0, r5
     3e8:	4f1e      	ldr	r7, [pc, #120]	; (464 <E_25LCxx_set_write_protect_enable+0xa8>)
     3ea:	47b8      	blx	r7
     3ec:	0007      	movs	r7, r0
    pHandle->pChip_select(SLAVE_ASSERT); /**< chip assert */
     3ee:	2001      	movs	r0, #1
     3f0:	696b      	ldr	r3, [r5, #20]
     3f2:	4798      	blx	r3
    if (res) {
     3f4:	2f00      	cmp	r7, #0
     3f6:	d127      	bne.n	448 <E_25LCxx_set_write_protect_enable+0x8c>
    pHandle->pChip_select(SLAVE_SELECT); /**< chip select */
     3f8:	2000      	movs	r0, #0
     3fa:	696b      	ldr	r3, [r5, #20]
     3fc:	4798      	blx	r3
    res = a_e25lcxx_spi_write(pHandle, E_25LCXXX_WREN_REG, NULL, 0);
     3fe:	2300      	movs	r3, #0
     400:	2200      	movs	r2, #0
     402:	2106      	movs	r1, #6
     404:	0028      	movs	r0, r5
     406:	4f18      	ldr	r7, [pc, #96]	; (468 <E_25LCxx_set_write_protect_enable+0xac>)
     408:	47b8      	blx	r7
     40a:	0007      	movs	r7, r0
    pHandle->pChip_select(SLAVE_ASSERT); /**< chip assert */
     40c:	2001      	movs	r0, #1
     40e:	696b      	ldr	r3, [r5, #20]
     410:	4798      	blx	r3
    if (res) {
     412:	2f00      	cmp	r7, #0
     414:	d11c      	bne.n	450 <E_25LCxx_set_write_protect_enable+0x94>
    status &= ~(1 << 7);
     416:	466b      	mov	r3, sp
     418:	1ddf      	adds	r7, r3, #7
     41a:	79da      	ldrb	r2, [r3, #7]
     41c:	237f      	movs	r3, #127	; 0x7f
     41e:	4013      	ands	r3, r2
    status |= (enable << 7);
     420:	01f6      	lsls	r6, r6, #7
     422:	431e      	orrs	r6, r3
     424:	703e      	strb	r6, [r7, #0]
    pHandle->pChip_select(SLAVE_SELECT); /**< chip select */
     426:	2000      	movs	r0, #0
     428:	696b      	ldr	r3, [r5, #20]
     42a:	4798      	blx	r3
    res = a_e25lcxx_spi_write(pHandle, E_25LCXXX_WRSR_REG, (uint8_t *) & status, 1);
     42c:	2301      	movs	r3, #1
     42e:	003a      	movs	r2, r7
     430:	2101      	movs	r1, #1
     432:	0028      	movs	r0, r5
     434:	4e0c      	ldr	r6, [pc, #48]	; (468 <E_25LCxx_set_write_protect_enable+0xac>)
     436:	47b0      	blx	r6
     438:	0006      	movs	r6, r0
    pHandle->pChip_select(SLAVE_ASSERT); /**< chip assert */
     43a:	2001      	movs	r0, #1
     43c:	696b      	ldr	r3, [r5, #20]
     43e:	4798      	blx	r3
    if (res) {
     440:	2e00      	cmp	r6, #0
     442:	d109      	bne.n	458 <E_25LCxx_set_write_protect_enable+0x9c>
    return 0; /**< return success */
     444:	0034      	movs	r4, r6
     446:	e7c4      	b.n	3d2 <E_25LCxx_set_write_protect_enable+0x16>
        pHandle->pDebug_print("25LCxx:failed to read status reg\r\n");
     448:	69eb      	ldr	r3, [r5, #28]
     44a:	4808      	ldr	r0, [pc, #32]	; (46c <E_25LCxx_set_write_protect_enable+0xb0>)
     44c:	4798      	blx	r3
        return 1; /**< return failed error **/
     44e:	e7c0      	b.n	3d2 <E_25LCxx_set_write_protect_enable+0x16>
        pHandle->pDebug_print("25LCxx: failed to enable write operation \r\n");
     450:	69eb      	ldr	r3, [r5, #28]
     452:	4807      	ldr	r0, [pc, #28]	; (470 <E_25LCxx_set_write_protect_enable+0xb4>)
     454:	4798      	blx	r3
        return 1; /**< return fail error */
     456:	e7bc      	b.n	3d2 <E_25LCxx_set_write_protect_enable+0x16>
        pHandle->pDebug_print("25LCxx:failed to write status reg\r\n");
     458:	69eb      	ldr	r3, [r5, #28]
     45a:	4806      	ldr	r0, [pc, #24]	; (474 <E_25LCxx_set_write_protect_enable+0xb8>)
     45c:	4798      	blx	r3
        return 1; /**< return failed error **/
     45e:	e7b8      	b.n	3d2 <E_25LCxx_set_write_protect_enable+0x16>
        return 2; /**< return failed error */
     460:	2402      	movs	r4, #2
     462:	e7b6      	b.n	3d2 <E_25LCxx_set_write_protect_enable+0x16>
     464:	00000141 	.word	0x00000141
     468:	00000115 	.word	0x00000115
     46c:	000092c0 	.word	0x000092c0
     470:	000092e4 	.word	0x000092e4
     474:	00009310 	.word	0x00009310

00000478 <E_25LCxxx_validate_address>:
 *          - 1 failed validate
 *          - 2 handle is NULL
 *          - 3 handle is not initialized
 * @note    none
 */
uint8_t E_25LCxxx_validate_address(E_25LCxx_handle_t *pHandle, E_25LCxx_max_addr_t u16Address) {
     478:	b510      	push	{r4, lr}

    if (pHandle == NULL)
     47a:	2800      	cmp	r0, #0
     47c:	d04e      	beq.n	51c <E_25LCxxx_validate_address+0xa4>
        return 2; /**< return failed error */
    if (pHandle->u8Inited != 1)
     47e:	2322      	movs	r3, #34	; 0x22
     480:	5cc4      	ldrb	r4, [r0, r3]
     482:	2c01      	cmp	r4, #1
     484:	d002      	beq.n	48c <E_25LCxxx_validate_address+0x14>
        return 3; /**< return failed error */
     486:	2403      	movs	r4, #3
            break;
    }

    return 0; /**< address validated */

}
     488:	0020      	movs	r0, r4
     48a:	bd10      	pop	{r4, pc}
    switch (pHandle->u8Device_type) {
     48c:	3b02      	subs	r3, #2
     48e:	5cc3      	ldrb	r3, [r0, r3]
     490:	2b07      	cmp	r3, #7
     492:	d83f      	bhi.n	514 <E_25LCxxx_validate_address+0x9c>
     494:	009b      	lsls	r3, r3, #2
     496:	4a23      	ldr	r2, [pc, #140]	; (524 <E_25LCxxx_validate_address+0xac>)
     498:	58d3      	ldr	r3, [r2, r3]
     49a:	469f      	mov	pc, r3
            if (address > E_25LC080x_MAX_ADD) {
     49c:	4b22      	ldr	r3, [pc, #136]	; (528 <E_25LCxxx_validate_address+0xb0>)
     49e:	4299      	cmp	r1, r3
     4a0:	d801      	bhi.n	4a6 <E_25LCxxx_validate_address+0x2e>
    return 0; /**< address validated */
     4a2:	2400      	movs	r4, #0
     4a4:	e7f0      	b.n	488 <E_25LCxxx_validate_address+0x10>
                pHandle->pDebug_print("25LC080x: address %d is greater than max allowed %d\r\n", address, E_25LC080x_MAX_ADD);
     4a6:	69c3      	ldr	r3, [r0, #28]
     4a8:	4a1f      	ldr	r2, [pc, #124]	; (528 <E_25LCxxx_validate_address+0xb0>)
     4aa:	4820      	ldr	r0, [pc, #128]	; (52c <E_25LCxxx_validate_address+0xb4>)
     4ac:	4798      	blx	r3
                return 1; /**< return failed error **/
     4ae:	e7eb      	b.n	488 <E_25LCxxx_validate_address+0x10>
            if (address > E_25LC160x_MAX_ADD) {
     4b0:	4b1f      	ldr	r3, [pc, #124]	; (530 <E_25LCxxx_validate_address+0xb8>)
     4b2:	4299      	cmp	r1, r3
     4b4:	d801      	bhi.n	4ba <E_25LCxxx_validate_address+0x42>
    return 0; /**< address validated */
     4b6:	2400      	movs	r4, #0
     4b8:	e7e6      	b.n	488 <E_25LCxxx_validate_address+0x10>
                pHandle->pDebug_print("25LC160x: address %d is greater than max allowed %d\r\n", address, E_25LC160x_MAX_ADD);
     4ba:	69c3      	ldr	r3, [r0, #28]
     4bc:	4a1c      	ldr	r2, [pc, #112]	; (530 <E_25LCxxx_validate_address+0xb8>)
     4be:	481d      	ldr	r0, [pc, #116]	; (534 <E_25LCxxx_validate_address+0xbc>)
     4c0:	4798      	blx	r3
                return 1; /**< return failed error **/
     4c2:	e7e1      	b.n	488 <E_25LCxxx_validate_address+0x10>
            if (address > E_25LC320x_MAX_ADD) {
     4c4:	4b1c      	ldr	r3, [pc, #112]	; (538 <E_25LCxxx_validate_address+0xc0>)
     4c6:	4299      	cmp	r1, r3
     4c8:	d801      	bhi.n	4ce <E_25LCxxx_validate_address+0x56>
    return 0; /**< address validated */
     4ca:	2400      	movs	r4, #0
     4cc:	e7dc      	b.n	488 <E_25LCxxx_validate_address+0x10>
                pHandle->pDebug_print("25LC320x: address %d is greater than max allowed %d\r\n", address, E_25LC320x_MAX_ADD);
     4ce:	69c3      	ldr	r3, [r0, #28]
     4d0:	4a19      	ldr	r2, [pc, #100]	; (538 <E_25LCxxx_validate_address+0xc0>)
     4d2:	481a      	ldr	r0, [pc, #104]	; (53c <E_25LCxxx_validate_address+0xc4>)
     4d4:	4798      	blx	r3
                return 1; /**< return failed error **/
     4d6:	e7d7      	b.n	488 <E_25LCxxx_validate_address+0x10>
            if (address > E_25LC640x_MAX_ADD) {
     4d8:	4b19      	ldr	r3, [pc, #100]	; (540 <E_25LCxxx_validate_address+0xc8>)
     4da:	4299      	cmp	r1, r3
     4dc:	d801      	bhi.n	4e2 <E_25LCxxx_validate_address+0x6a>
    return 0; /**< address validated */
     4de:	2400      	movs	r4, #0
     4e0:	e7d2      	b.n	488 <E_25LCxxx_validate_address+0x10>
                pHandle->pDebug_print("25LC640x: address %d is greater than max allowed %d\r\n", address, E_25LC640x_MAX_ADD);
     4e2:	69c3      	ldr	r3, [r0, #28]
     4e4:	4a16      	ldr	r2, [pc, #88]	; (540 <E_25LCxxx_validate_address+0xc8>)
     4e6:	4817      	ldr	r0, [pc, #92]	; (544 <E_25LCxxx_validate_address+0xcc>)
     4e8:	4798      	blx	r3
                return 1; /**< return failed error **/
     4ea:	e7cd      	b.n	488 <E_25LCxxx_validate_address+0x10>
            if (address > E_25LC128_MAX_ADD) {
     4ec:	4b16      	ldr	r3, [pc, #88]	; (548 <E_25LCxxx_validate_address+0xd0>)
     4ee:	4299      	cmp	r1, r3
     4f0:	d801      	bhi.n	4f6 <E_25LCxxx_validate_address+0x7e>
    return 0; /**< address validated */
     4f2:	2400      	movs	r4, #0
     4f4:	e7c8      	b.n	488 <E_25LCxxx_validate_address+0x10>
                pHandle->pDebug_print("25LC128: address %d is greater than max allowed %d\r\n", address, E_25LC128_MAX_ADD);
     4f6:	69c3      	ldr	r3, [r0, #28]
     4f8:	4a13      	ldr	r2, [pc, #76]	; (548 <E_25LCxxx_validate_address+0xd0>)
     4fa:	4814      	ldr	r0, [pc, #80]	; (54c <E_25LCxxx_validate_address+0xd4>)
     4fc:	4798      	blx	r3
                return 1; /**< return failed error **/
     4fe:	e7c3      	b.n	488 <E_25LCxxx_validate_address+0x10>
            if (address > E_25LC256_MAX_ADD) {
     500:	b20b      	sxth	r3, r1
     502:	2b00      	cmp	r3, #0
     504:	db01      	blt.n	50a <E_25LCxxx_validate_address+0x92>
    return 0; /**< address validated */
     506:	2400      	movs	r4, #0
     508:	e7be      	b.n	488 <E_25LCxxx_validate_address+0x10>
                pHandle->pDebug_print("25LC256: address %d is greater than max allowed %d\r\n", address, E_25LC256_MAX_ADD);
     50a:	69c3      	ldr	r3, [r0, #28]
     50c:	4a10      	ldr	r2, [pc, #64]	; (550 <E_25LCxxx_validate_address+0xd8>)
     50e:	4811      	ldr	r0, [pc, #68]	; (554 <E_25LCxxx_validate_address+0xdc>)
     510:	4798      	blx	r3
                return 1; /**< return failed error **/
     512:	e7b9      	b.n	488 <E_25LCxxx_validate_address+0x10>
            pHandle->pDebug_print("25LCxx:failed to validate address eeprom type unknown\r\n");
     514:	69c3      	ldr	r3, [r0, #28]
     516:	4810      	ldr	r0, [pc, #64]	; (558 <E_25LCxxx_validate_address+0xe0>)
     518:	4798      	blx	r3
            return 1; /**< return failed error **/
     51a:	e7b5      	b.n	488 <E_25LCxxx_validate_address+0x10>
        return 2; /**< return failed error */
     51c:	2402      	movs	r4, #2
     51e:	e7b3      	b.n	488 <E_25LCxxx_validate_address+0x10>
    return 0; /**< address validated */
     520:	2400      	movs	r4, #0
     522:	e7b1      	b.n	488 <E_25LCxxx_validate_address+0x10>
     524:	00009100 	.word	0x00009100
     528:	000003ff 	.word	0x000003ff
     52c:	000093b0 	.word	0x000093b0
     530:	000007ff 	.word	0x000007ff
     534:	000093e8 	.word	0x000093e8
     538:	00000fff 	.word	0x00000fff
     53c:	00009420 	.word	0x00009420
     540:	00001fff 	.word	0x00001fff
     544:	00009458 	.word	0x00009458
     548:	00003fff 	.word	0x00003fff
     54c:	00009490 	.word	0x00009490
     550:	00007fff 	.word	0x00007fff
     554:	000094c8 	.word	0x000094c8
     558:	00009500 	.word	0x00009500

0000055c <E_25LCxx_read_byte>:
uint8_t E_25LCxx_read_byte(E_25LCxx_handle_t *pHandle, uint16_t u16Addr, uint8_t *pBuf, uint16_t u16Length) {
     55c:	b5f0      	push	{r4, r5, r6, r7, lr}
     55e:	46ce      	mov	lr, r9
     560:	b500      	push	{lr}
     562:	b082      	sub	sp, #8
     564:	0006      	movs	r6, r0
     566:	000d      	movs	r5, r1
     568:	9200      	str	r2, [sp, #0]
     56a:	9301      	str	r3, [sp, #4]
    if (pHandle == NULL)
     56c:	2800      	cmp	r0, #0
     56e:	d035      	beq.n	5dc <E_25LCxx_read_byte+0x80>
    if (pHandle->u8Inited != 1)
     570:	2322      	movs	r3, #34	; 0x22
     572:	5cc4      	ldrb	r4, [r0, r3]
     574:	2c01      	cmp	r4, #1
     576:	d005      	beq.n	584 <E_25LCxx_read_byte+0x28>
        return 3; /**< return failed error */
     578:	2403      	movs	r4, #3
}
     57a:	0020      	movs	r0, r4
     57c:	b002      	add	sp, #8
     57e:	bc04      	pop	{r2}
     580:	4691      	mov	r9, r2
     582:	bdf0      	pop	{r4, r5, r6, r7, pc}
    if (E_25LCxxx_validate_address(pHandle, u16Addr) != 0)
     584:	4b16      	ldr	r3, [pc, #88]	; (5e0 <E_25LCxx_read_byte+0x84>)
     586:	4798      	blx	r3
     588:	2800      	cmp	r0, #0
     58a:	d001      	beq.n	590 <E_25LCxx_read_byte+0x34>
        return 4; /**< return failed error */
     58c:	2404      	movs	r4, #4
     58e:	e7f4      	b.n	57a <E_25LCxx_read_byte+0x1e>
    pHandle->pChip_select(SLAVE_SELECT); /**< chip select */
     590:	6973      	ldr	r3, [r6, #20]
     592:	4798      	blx	r3
    res = a_e25lcxx_spi_write(pHandle, E_25LCXXX_READ_REG, NULL, 0); /**< send a read command */
     594:	2300      	movs	r3, #0
     596:	2200      	movs	r2, #0
     598:	2103      	movs	r1, #3
     59a:	0030      	movs	r0, r6
     59c:	4f11      	ldr	r7, [pc, #68]	; (5e4 <E_25LCxx_read_byte+0x88>)
     59e:	47b8      	blx	r7
    if (res) {
     5a0:	2800      	cmp	r0, #0
     5a2:	d113      	bne.n	5cc <E_25LCxx_read_byte+0x70>
    res = a_e25lcxx_spi_write(pHandle, (u16Addr >> 8), NULL, 0); /**< write MSb address */
     5a4:	0a29      	lsrs	r1, r5, #8
     5a6:	2300      	movs	r3, #0
     5a8:	2200      	movs	r2, #0
     5aa:	0030      	movs	r0, r6
     5ac:	4f0d      	ldr	r7, [pc, #52]	; (5e4 <E_25LCxx_read_byte+0x88>)
     5ae:	47b8      	blx	r7
    res = a_e25lcxx_spi_read(pHandle, (uint8_t) u16Addr, (uint8_t *) pBuf, u16Length); /**< read data off the buffer */
     5b0:	21ff      	movs	r1, #255	; 0xff
     5b2:	4029      	ands	r1, r5
     5b4:	9b01      	ldr	r3, [sp, #4]
     5b6:	9a00      	ldr	r2, [sp, #0]
     5b8:	0030      	movs	r0, r6
     5ba:	4d0b      	ldr	r5, [pc, #44]	; (5e8 <E_25LCxx_read_byte+0x8c>)
     5bc:	47a8      	blx	r5
     5be:	1e05      	subs	r5, r0, #0
    if (res) {
     5c0:	d108      	bne.n	5d4 <E_25LCxx_read_byte+0x78>
    pHandle->pChip_select(SLAVE_ASSERT); /**< chip assert */
     5c2:	6973      	ldr	r3, [r6, #20]
     5c4:	2001      	movs	r0, #1
     5c6:	4798      	blx	r3
    return 0; /**< return success */
     5c8:	002c      	movs	r4, r5
     5ca:	e7d6      	b.n	57a <E_25LCxx_read_byte+0x1e>
        pHandle->pDebug_print("25LCxx: failed to issue read command \r\n");
     5cc:	69f3      	ldr	r3, [r6, #28]
     5ce:	4807      	ldr	r0, [pc, #28]	; (5ec <E_25LCxx_read_byte+0x90>)
     5d0:	4798      	blx	r3
        return 1;
     5d2:	e7d2      	b.n	57a <E_25LCxx_read_byte+0x1e>
        pHandle->pDebug_print("25LCxx: failed read byte \r\n");
     5d4:	69f3      	ldr	r3, [r6, #28]
     5d6:	4806      	ldr	r0, [pc, #24]	; (5f0 <E_25LCxx_read_byte+0x94>)
     5d8:	4798      	blx	r3
        return 1;
     5da:	e7ce      	b.n	57a <E_25LCxx_read_byte+0x1e>
        return 2; /**< return failed error */
     5dc:	2402      	movs	r4, #2
     5de:	e7cc      	b.n	57a <E_25LCxx_read_byte+0x1e>
     5e0:	00000479 	.word	0x00000479
     5e4:	00000115 	.word	0x00000115
     5e8:	00000141 	.word	0x00000141
     5ec:	00009538 	.word	0x00009538
     5f0:	00009560 	.word	0x00009560

000005f4 <E_25LCXX_get_byte>:
uint8_t E_25LCXX_get_byte(E_25LCxx_handle_t *pHandle, uint16_t u16Addr, uint32_t *pBuf, uint8_t u16Length) {
     5f4:	b5f0      	push	{r4, r5, r6, r7, lr}
     5f6:	46de      	mov	lr, fp
     5f8:	464f      	mov	r7, r9
     5fa:	4646      	mov	r6, r8
     5fc:	b5c0      	push	{r6, r7, lr}
     5fe:	b082      	sub	sp, #8
     600:	af00      	add	r7, sp, #0
     602:	4681      	mov	r9, r0
     604:	603a      	str	r2, [r7, #0]
     606:	001c      	movs	r4, r3
    uint8_t tempBuffer[u16Length];
     608:	607b      	str	r3, [r7, #4]
     60a:	3307      	adds	r3, #7
     60c:	08db      	lsrs	r3, r3, #3
     60e:	00db      	lsls	r3, r3, #3
     610:	466a      	mov	r2, sp
     612:	1ad3      	subs	r3, r2, r3
     614:	469d      	mov	sp, r3
     616:	46e8      	mov	r8, sp
    if (pHandle == NULL)
     618:	2800      	cmp	r0, #0
     61a:	d03a      	beq.n	692 <E_25LCXX_get_byte+0x9e>
    if (pHandle->u8Inited != 1)
     61c:	2322      	movs	r3, #34	; 0x22
     61e:	5cc6      	ldrb	r6, [r0, r3]
     620:	2e01      	cmp	r6, #1
     622:	d008      	beq.n	636 <E_25LCXX_get_byte+0x42>
        return 3; /**< return failed error */
     624:	2603      	movs	r6, #3
}
     626:	0030      	movs	r0, r6
     628:	46bd      	mov	sp, r7
     62a:	b002      	add	sp, #8
     62c:	bc1c      	pop	{r2, r3, r4}
     62e:	4690      	mov	r8, r2
     630:	4699      	mov	r9, r3
     632:	46a3      	mov	fp, r4
     634:	bdf0      	pop	{r4, r5, r6, r7, pc}
    res = (E_25LCxx_read_byte(pHandle, u16Addr, (uint8_t*) tempBuffer, u16Length));
     636:	b2a3      	uxth	r3, r4
     638:	466a      	mov	r2, sp
     63a:	4d17      	ldr	r5, [pc, #92]	; (698 <E_25LCXX_get_byte+0xa4>)
     63c:	47a8      	blx	r5
    if (res != NULL) {
     63e:	2800      	cmp	r0, #0
     640:	d004      	beq.n	64c <E_25LCXX_get_byte+0x58>
        pHandle->pDebug_print("25LCxx: failed to get bytes\r\n");
     642:	464b      	mov	r3, r9
     644:	69db      	ldr	r3, [r3, #28]
     646:	4815      	ldr	r0, [pc, #84]	; (69c <E_25LCXX_get_byte+0xa8>)
     648:	4798      	blx	r3
        return 1; /**< return error code */
     64a:	e7ec      	b.n	626 <E_25LCXX_get_byte+0x32>
    for (index = 0; index < u16Length / 2; index++) {
     64c:	2200      	movs	r2, #0
     64e:	4b14      	ldr	r3, [pc, #80]	; (6a0 <E_25LCXX_get_byte+0xac>)
     650:	701a      	strb	r2, [r3, #0]
     652:	e00c      	b.n	66e <E_25LCXX_get_byte+0x7a>
        dataOut = tempBuffer[index];
     654:	4642      	mov	r2, r8
     656:	5cd1      	ldrb	r1, [r2, r3]
        tempBuffer[index] = tempBuffer[u16Length - index - 1];
     658:	687a      	ldr	r2, [r7, #4]
     65a:	1ad2      	subs	r2, r2, r3
     65c:	3a01      	subs	r2, #1
     65e:	4640      	mov	r0, r8
     660:	5c80      	ldrb	r0, [r0, r2]
     662:	4645      	mov	r5, r8
     664:	54e8      	strb	r0, [r5, r3]
        tempBuffer[u16Length - index - 1] = dataOut;
     666:	54a9      	strb	r1, [r5, r2]
    for (index = 0; index < u16Length / 2; index++) {
     668:	3301      	adds	r3, #1
     66a:	4a0d      	ldr	r2, [pc, #52]	; (6a0 <E_25LCXX_get_byte+0xac>)
     66c:	7013      	strb	r3, [r2, #0]
     66e:	0862      	lsrs	r2, r4, #1
     670:	4b0b      	ldr	r3, [pc, #44]	; (6a0 <E_25LCXX_get_byte+0xac>)
     672:	781b      	ldrb	r3, [r3, #0]
     674:	429a      	cmp	r2, r3
     676:	d8ed      	bhi.n	654 <E_25LCXX_get_byte+0x60>
    memcpy(dataReadOut.buffer, tempBuffer, u16Length);
     678:	4d09      	ldr	r5, [pc, #36]	; (6a0 <E_25LCXX_get_byte+0xac>)
     67a:	1d28      	adds	r0, r5, #4
     67c:	0022      	movs	r2, r4
     67e:	4641      	mov	r1, r8
     680:	4b08      	ldr	r3, [pc, #32]	; (6a4 <E_25LCXX_get_byte+0xb0>)
     682:	4798      	blx	r3
    *pBuf = (uint32_t) dataReadOut.data;
     684:	686b      	ldr	r3, [r5, #4]
     686:	607b      	str	r3, [r7, #4]
     688:	683b      	ldr	r3, [r7, #0]
     68a:	687a      	ldr	r2, [r7, #4]
     68c:	601a      	str	r2, [r3, #0]
    return 0;
     68e:	2600      	movs	r6, #0
     690:	e7c9      	b.n	626 <E_25LCXX_get_byte+0x32>
        return 2; /**< return failed error */
     692:	2602      	movs	r6, #2
     694:	e7c7      	b.n	626 <E_25LCXX_get_byte+0x32>
     696:	46c0      	nop			; (mov r8, r8)
     698:	0000055d 	.word	0x0000055d
     69c:	0000957c 	.word	0x0000957c
     6a0:	200009d4 	.word	0x200009d4
     6a4:	000050ed 	.word	0x000050ed

000006a8 <E_25LCxx_erase_sector>:
uint8_t E_25LCxx_erase_sector(E_25LCxx_handle_t *pHandle, uint16_t *pSector_addr) {
     6a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     6aa:	0004      	movs	r4, r0
     6ac:	000e      	movs	r6, r1
    if (pHandle == NULL)
     6ae:	2800      	cmp	r0, #0
     6b0:	d04b      	beq.n	74a <E_25LCxx_erase_sector+0xa2>
    if (pHandle->u8Inited != 1)
     6b2:	2322      	movs	r3, #34	; 0x22
     6b4:	5cc5      	ldrb	r5, [r0, r3]
     6b6:	2d01      	cmp	r5, #1
     6b8:	d002      	beq.n	6c0 <E_25LCxx_erase_sector+0x18>
        return 3; /**< return failed error */
     6ba:	2503      	movs	r5, #3
}
     6bc:	0028      	movs	r0, r5
     6be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     6c0:	2700      	movs	r7, #0
     6c2:	e001      	b.n	6c8 <E_25LCxx_erase_sector+0x20>
    for (index = 0; index < 2; index++) {
     6c4:	3701      	adds	r7, #1
     6c6:	b2ff      	uxtb	r7, r7
     6c8:	2f01      	cmp	r7, #1
     6ca:	d80b      	bhi.n	6e4 <E_25LCxx_erase_sector+0x3c>
        if (E_25LCxxx_validate_address(pHandle, pSector_addr[index]) != NULL) /**< check if the address to erase is valid or not */ {
     6cc:	007b      	lsls	r3, r7, #1
     6ce:	5af1      	ldrh	r1, [r6, r3]
     6d0:	0020      	movs	r0, r4
     6d2:	4b1f      	ldr	r3, [pc, #124]	; (750 <E_25LCxx_erase_sector+0xa8>)
     6d4:	4798      	blx	r3
     6d6:	2800      	cmp	r0, #0
     6d8:	d0f4      	beq.n	6c4 <E_25LCxx_erase_sector+0x1c>
            pHandle->pDebug_print("25LCxx: failed to write, invalid address \r\n");
     6da:	69e3      	ldr	r3, [r4, #28]
     6dc:	481d      	ldr	r0, [pc, #116]	; (754 <E_25LCxx_erase_sector+0xac>)
     6de:	4798      	blx	r3
            return 4; /**< return failed error */
     6e0:	2504      	movs	r5, #4
     6e2:	e7eb      	b.n	6bc <E_25LCxx_erase_sector+0x14>
    pHandle->pChip_select(SLAVE_SELECT); /**< chip select */
     6e4:	2000      	movs	r0, #0
     6e6:	6963      	ldr	r3, [r4, #20]
     6e8:	4798      	blx	r3
    res = a_e25lcxx_spi_write(pHandle, E_25LCXXX_WREN_REG, NULL, 0); /**< enable write operation */
     6ea:	2300      	movs	r3, #0
     6ec:	2200      	movs	r2, #0
     6ee:	2106      	movs	r1, #6
     6f0:	0020      	movs	r0, r4
     6f2:	4f19      	ldr	r7, [pc, #100]	; (758 <E_25LCxx_erase_sector+0xb0>)
     6f4:	47b8      	blx	r7
     6f6:	0007      	movs	r7, r0
    pHandle->pChip_select(SLAVE_ASSERT); /**< chip assert */
     6f8:	2001      	movs	r0, #1
     6fa:	6963      	ldr	r3, [r4, #20]
     6fc:	4798      	blx	r3
    if (res) {
     6fe:	2f00      	cmp	r7, #0
     700:	d11b      	bne.n	73a <E_25LCxx_erase_sector+0x92>
    pHandle->pChip_select(SLAVE_SELECT); /**< chip select */
     702:	2000      	movs	r0, #0
     704:	6963      	ldr	r3, [r4, #20]
     706:	4798      	blx	r3
    res = a_e25lcxx_spi_write(pHandle, E_25LCXXX_SECTOR_ERASE_CMD, NULL, 0); /**< send an erase command and sector to erase */
     708:	2300      	movs	r3, #0
     70a:	2200      	movs	r2, #0
     70c:	21d8      	movs	r1, #216	; 0xd8
     70e:	0020      	movs	r0, r4
     710:	4f11      	ldr	r7, [pc, #68]	; (758 <E_25LCxx_erase_sector+0xb0>)
     712:	47b8      	blx	r7
    res = a_e25lcxx_spi_write(pHandle, (pSector_addr[0] >> 8), (uint8_t*) & pSector_addr[0], 1); /**< write MSB and LSB byte of the start address */
     714:	8831      	ldrh	r1, [r6, #0]
     716:	0a09      	lsrs	r1, r1, #8
     718:	2301      	movs	r3, #1
     71a:	0032      	movs	r2, r6
     71c:	0020      	movs	r0, r4
     71e:	47b8      	blx	r7
    res = a_e25lcxx_spi_write(pHandle, (pSector_addr[1] >> 8), (uint8_t*) & pSector_addr[1], 1); /**< write MSB and LSB byte of the last address */
     720:	8871      	ldrh	r1, [r6, #2]
     722:	0a09      	lsrs	r1, r1, #8
     724:	1cb2      	adds	r2, r6, #2
     726:	2301      	movs	r3, #1
     728:	0020      	movs	r0, r4
     72a:	47b8      	blx	r7
     72c:	1e06      	subs	r6, r0, #0
    if (res) {
     72e:	d108      	bne.n	742 <E_25LCxx_erase_sector+0x9a>
    pHandle->pChip_select(SLAVE_ASSERT); /**< chip assert */
     730:	6963      	ldr	r3, [r4, #20]
     732:	2001      	movs	r0, #1
     734:	4798      	blx	r3
    return 0; /**< return success */
     736:	0035      	movs	r5, r6
     738:	e7c0      	b.n	6bc <E_25LCxx_erase_sector+0x14>
        pHandle->pDebug_print("25LCxx: failed to enable write operation \r\n");
     73a:	69e3      	ldr	r3, [r4, #28]
     73c:	4807      	ldr	r0, [pc, #28]	; (75c <E_25LCxx_erase_sector+0xb4>)
     73e:	4798      	blx	r3
        return 1; /**< return fail error */
     740:	e7bc      	b.n	6bc <E_25LCxx_erase_sector+0x14>
        pHandle->pDebug_print("25LCxx:failed to send erase sector\r\n");
     742:	69e3      	ldr	r3, [r4, #28]
     744:	4806      	ldr	r0, [pc, #24]	; (760 <E_25LCxx_erase_sector+0xb8>)
     746:	4798      	blx	r3
        return 1; /**< return failed error **/
     748:	e7b8      	b.n	6bc <E_25LCxx_erase_sector+0x14>
        return 2; /**< return failed error */
     74a:	2502      	movs	r5, #2
     74c:	e7b6      	b.n	6bc <E_25LCxx_erase_sector+0x14>
     74e:	46c0      	nop			; (mov r8, r8)
     750:	00000479 	.word	0x00000479
     754:	0000959c 	.word	0x0000959c
     758:	00000115 	.word	0x00000115
     75c:	000092e4 	.word	0x000092e4
     760:	000095c8 	.word	0x000095c8

00000764 <E_25LCXX_validate_page_boundary>:
 *          - 1 failed to validate
 *          - 2 handle is NULL
 *          - 3 handle is not initialized
 * @note    none
 */
uint8_t E_25LCXX_validate_page_boundary(E_25LCxx_handle_t *pHandle, uint16_t u16Address, uint16_t u16Length) {
     764:	b5f0      	push	{r4, r5, r6, r7, lr}
     766:	b085      	sub	sp, #20
     768:	1e07      	subs	r7, r0, #0
     76a:	9101      	str	r1, [sp, #4]
     76c:	9203      	str	r2, [sp, #12]
    float status;
    uint16_t index, res;
    uint16_t startAdress, endAddress;

    if (pHandle == NULL)
     76e:	d049      	beq.n	804 <E_25LCXX_validate_page_boundary+0xa0>
        return 2; /**< return failed error */
    if (pHandle->u8Inited != 1)
     770:	2322      	movs	r3, #34	; 0x22
     772:	5cc6      	ldrb	r6, [r0, r3]
     774:	2e01      	cmp	r6, #1
     776:	d003      	beq.n	780 <E_25LCXX_validate_page_boundary+0x1c>
        return 3; /**< return failed error */
     778:	2603      	movs	r6, #3
            break;
        }
    }

    return 0; /**< page boundary validated */
}
     77a:	0030      	movs	r0, r6
     77c:	b005      	add	sp, #20
     77e:	bdf0      	pop	{r4, r5, r6, r7, pc}
     780:	2400      	movs	r4, #0
    for (index = 0; index < (e_25LCxx_basic_get_eeprom_legth() / pHandle->iPage_size); index++) {
     782:	9402      	str	r4, [sp, #8]
     784:	4b20      	ldr	r3, [pc, #128]	; (808 <E_25LCXX_validate_page_boundary+0xa4>)
     786:	4798      	blx	r3
     788:	2321      	movs	r3, #33	; 0x21
     78a:	5cfd      	ldrb	r5, [r7, r3]
     78c:	0029      	movs	r1, r5
     78e:	4b1f      	ldr	r3, [pc, #124]	; (80c <E_25LCXX_validate_page_boundary+0xa8>)
     790:	4798      	blx	r3
     792:	4284      	cmp	r4, r0
     794:	da34      	bge.n	800 <E_25LCXX_validate_page_boundary+0x9c>
        if ((index * pHandle->iPage_size) > u16Address) /**< get start address page number(index) */ {
     796:	9a01      	ldr	r2, [sp, #4]
     798:	0010      	movs	r0, r2
     79a:	002b      	movs	r3, r5
     79c:	4363      	muls	r3, r4
     79e:	4293      	cmp	r3, r2
     7a0:	dc02      	bgt.n	7a8 <E_25LCXX_validate_page_boundary+0x44>
    for (index = 0; index < (e_25LCxx_basic_get_eeprom_legth() / pHandle->iPage_size); index++) {
     7a2:	3401      	adds	r4, #1
     7a4:	b2a4      	uxth	r4, r4
     7a6:	e7ec      	b.n	782 <E_25LCXX_validate_page_boundary+0x1e>
            status = (u16Address + u16Length) / (float) pHandle->iPage_size;
     7a8:	9b03      	ldr	r3, [sp, #12]
     7aa:	469c      	mov	ip, r3
     7ac:	4460      	add	r0, ip
     7ae:	4b18      	ldr	r3, [pc, #96]	; (810 <E_25LCXX_validate_page_boundary+0xac>)
     7b0:	4798      	blx	r3
     7b2:	9001      	str	r0, [sp, #4]
     7b4:	0028      	movs	r0, r5
     7b6:	4b17      	ldr	r3, [pc, #92]	; (814 <E_25LCXX_validate_page_boundary+0xb0>)
     7b8:	4798      	blx	r3
     7ba:	1c01      	adds	r1, r0, #0
     7bc:	9801      	ldr	r0, [sp, #4]
     7be:	4b16      	ldr	r3, [pc, #88]	; (818 <E_25LCXX_validate_page_boundary+0xb4>)
     7c0:	4798      	blx	r3
            res = ceil(status);
     7c2:	4b16      	ldr	r3, [pc, #88]	; (81c <E_25LCXX_validate_page_boundary+0xb8>)
     7c4:	4798      	blx	r3
     7c6:	4b16      	ldr	r3, [pc, #88]	; (820 <E_25LCXX_validate_page_boundary+0xbc>)
     7c8:	4798      	blx	r3
     7ca:	4b16      	ldr	r3, [pc, #88]	; (824 <E_25LCXX_validate_page_boundary+0xc0>)
     7cc:	4798      	blx	r3
     7ce:	b280      	uxth	r0, r0
            if (res > index) {
     7d0:	4284      	cmp	r4, r0
     7d2:	d301      	bcc.n	7d8 <E_25LCXX_validate_page_boundary+0x74>
    return 0; /**< page boundary validated */
     7d4:	2600      	movs	r6, #0
     7d6:	e7d0      	b.n	77a <E_25LCXX_validate_page_boundary+0x16>
                startAdress = (uint16_t) (pHandle->iPage_size * (index - 1));
     7d8:	b2ab      	uxth	r3, r5
     7da:	9a02      	ldr	r2, [sp, #8]
     7dc:	1e55      	subs	r5, r2, #1
     7de:	b2ad      	uxth	r5, r5
     7e0:	435d      	muls	r5, r3
     7e2:	b2ad      	uxth	r5, r5
                endAddress = (startAdress + pHandle->iPage_size) - 1;
     7e4:	195b      	adds	r3, r3, r5
     7e6:	b29c      	uxth	r4, r3
     7e8:	3c01      	subs	r4, #1
     7ea:	b2a4      	uxth	r4, r4
                pHandle->pDebug_print("25LCxx: failed to execute, attempt to write beyond page boundary\r\n");
     7ec:	480e      	ldr	r0, [pc, #56]	; (828 <E_25LCXX_validate_page_boundary+0xc4>)
     7ee:	69fb      	ldr	r3, [r7, #28]
     7f0:	4798      	blx	r3
                pHandle->pDebug_print("25LCxx: page %d start address:%d end address:%d\r\n", index, startAdress, endAddress);
     7f2:	69ff      	ldr	r7, [r7, #28]
     7f4:	0023      	movs	r3, r4
     7f6:	002a      	movs	r2, r5
     7f8:	9902      	ldr	r1, [sp, #8]
     7fa:	480c      	ldr	r0, [pc, #48]	; (82c <E_25LCXX_validate_page_boundary+0xc8>)
     7fc:	47b8      	blx	r7
                return 1; /**< return failed error **/
     7fe:	e7bc      	b.n	77a <E_25LCXX_validate_page_boundary+0x16>
    return 0; /**< page boundary validated */
     800:	2600      	movs	r6, #0
     802:	e7ba      	b.n	77a <E_25LCXX_validate_page_boundary+0x16>
        return 2; /**< return failed error */
     804:	2602      	movs	r6, #2
     806:	e7b8      	b.n	77a <E_25LCXX_validate_page_boundary+0x16>
     808:	00000fb1 	.word	0x00000fb1
     80c:	00002725 	.word	0x00002725
     810:	000031ad 	.word	0x000031ad
     814:	0000324d 	.word	0x0000324d
     818:	00002ba5 	.word	0x00002ba5
     81c:	00004de9 	.word	0x00004de9
     820:	000024e5 	.word	0x000024e5
     824:	000029e9 	.word	0x000029e9
     828:	000095f0 	.word	0x000095f0
     82c:	00009634 	.word	0x00009634

00000830 <E_25LCxxx_validate_page>:
 *          - 1 failed page (out of range)
 *           - 2 handle is NULL
 *          - 3 handle is not initialized
 * @note    none
 */
uint8_t E_25LCxxx_validate_page(E_25LCxx_handle_t *pHandle, uint16_t u16Page, uint16_t *pStartAddr) {
     830:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     832:	0005      	movs	r5, r0
     834:	000e      	movs	r6, r1
     836:	0017      	movs	r7, r2
    uint16_t max_page; /**< maximum number of pages starting from page 1 */

    if (pHandle == NULL)
     838:	2800      	cmp	r0, #0
     83a:	d100      	bne.n	83e <E_25LCxxx_validate_page+0xe>
     83c:	e089      	b.n	952 <E_25LCxxx_validate_page+0x122>
        return 2; /**< return failed error */
    if (pHandle->u8Inited != 1)
     83e:	2322      	movs	r3, #34	; 0x22
     840:	5cc4      	ldrb	r4, [r0, r3]
     842:	2c01      	cmp	r4, #1
     844:	d002      	beq.n	84c <E_25LCxxx_validate_page+0x1c>
        return 3; /**< return failed error */
     846:	2403      	movs	r4, #3
        }
    }
    *pStartAddr = (uint16_t) (pHandle->iPage_size * (u16Page - 1));

    return 0; /**< address validated */
}
     848:	0020      	movs	r0, r4
     84a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (pHandle->u8Device_type) {
     84c:	3b02      	subs	r3, #2
     84e:	5cc3      	ldrb	r3, [r0, r3]
     850:	2b07      	cmp	r3, #7
     852:	d87a      	bhi.n	94a <E_25LCxxx_validate_page+0x11a>
     854:	009b      	lsls	r3, r3, #2
     856:	4a40      	ldr	r2, [pc, #256]	; (958 <E_25LCxxx_validate_page+0x128>)
     858:	58d3      	ldr	r3, [r2, r3]
     85a:	469f      	mov	pc, r3
            max_page = ((E_25LC080x_MAX_ADD + 1) / pHandle->iPage_size);
     85c:	2321      	movs	r3, #33	; 0x21
     85e:	5cc1      	ldrb	r1, [r0, r3]
     860:	2080      	movs	r0, #128	; 0x80
     862:	00c0      	lsls	r0, r0, #3
     864:	4b3d      	ldr	r3, [pc, #244]	; (95c <E_25LCxxx_validate_page+0x12c>)
     866:	4798      	blx	r3
     868:	b283      	uxth	r3, r0
            if (u16Page > max_page) {
     86a:	42b3      	cmp	r3, r6
     86c:	d306      	bcc.n	87c <E_25LCxxx_validate_page+0x4c>
    *pStartAddr = (uint16_t) (pHandle->iPage_size * (u16Page - 1));
     86e:	2321      	movs	r3, #33	; 0x21
     870:	5ceb      	ldrb	r3, [r5, r3]
     872:	3e01      	subs	r6, #1
     874:	435e      	muls	r6, r3
     876:	803e      	strh	r6, [r7, #0]
    return 0; /**< address validated */
     878:	2400      	movs	r4, #0
     87a:	e7e5      	b.n	848 <E_25LCxxx_validate_page+0x18>
                pHandle->pDebug_print("25LC080x: page %d is greater than max page number %d\r\n", u16Page, max_page);
     87c:	69eb      	ldr	r3, [r5, #28]
     87e:	0400      	lsls	r0, r0, #16
     880:	0c02      	lsrs	r2, r0, #16
     882:	0031      	movs	r1, r6
     884:	4836      	ldr	r0, [pc, #216]	; (960 <E_25LCxxx_validate_page+0x130>)
     886:	4798      	blx	r3
                return 1; /**< return failed error **/
     888:	e7de      	b.n	848 <E_25LCxxx_validate_page+0x18>
            max_page = ((E_25LC160x_MAX_ADD + 1) / pHandle->iPage_size);
     88a:	2321      	movs	r3, #33	; 0x21
     88c:	5cc1      	ldrb	r1, [r0, r3]
     88e:	2080      	movs	r0, #128	; 0x80
     890:	0100      	lsls	r0, r0, #4
     892:	4b32      	ldr	r3, [pc, #200]	; (95c <E_25LCxxx_validate_page+0x12c>)
     894:	4798      	blx	r3
     896:	b283      	uxth	r3, r0
            if (u16Page > max_page) {
     898:	429e      	cmp	r6, r3
     89a:	d9e8      	bls.n	86e <E_25LCxxx_validate_page+0x3e>
                pHandle->pDebug_print("25LC160x: page %d is greater than max page number %d\r\n", u16Page, max_page);
     89c:	69eb      	ldr	r3, [r5, #28]
     89e:	0400      	lsls	r0, r0, #16
     8a0:	0c02      	lsrs	r2, r0, #16
     8a2:	0031      	movs	r1, r6
     8a4:	482f      	ldr	r0, [pc, #188]	; (964 <E_25LCxxx_validate_page+0x134>)
     8a6:	4798      	blx	r3
                return 1; /**< return failed error **/
     8a8:	e7ce      	b.n	848 <E_25LCxxx_validate_page+0x18>
            max_page = ((E_25LC320x_MAX_ADD + 1) / pHandle->iPage_size);
     8aa:	2321      	movs	r3, #33	; 0x21
     8ac:	5cc1      	ldrb	r1, [r0, r3]
     8ae:	2080      	movs	r0, #128	; 0x80
     8b0:	0140      	lsls	r0, r0, #5
     8b2:	4b2a      	ldr	r3, [pc, #168]	; (95c <E_25LCxxx_validate_page+0x12c>)
     8b4:	4798      	blx	r3
     8b6:	b283      	uxth	r3, r0
            if (u16Page > max_page) {
     8b8:	429e      	cmp	r6, r3
     8ba:	d9d8      	bls.n	86e <E_25LCxxx_validate_page+0x3e>
                pHandle->pDebug_print("25LC320x: page %d is greater than max page number %d\r\n", u16Page, max_page);
     8bc:	69eb      	ldr	r3, [r5, #28]
     8be:	0400      	lsls	r0, r0, #16
     8c0:	0c02      	lsrs	r2, r0, #16
     8c2:	0031      	movs	r1, r6
     8c4:	4828      	ldr	r0, [pc, #160]	; (968 <E_25LCxxx_validate_page+0x138>)
     8c6:	4798      	blx	r3
                return 1; /**< return failed error **/
     8c8:	e7be      	b.n	848 <E_25LCxxx_validate_page+0x18>
                max_page = ((E_25LC640x_MAX_ADD + 1) / pHandle->iPage_size);
     8ca:	2321      	movs	r3, #33	; 0x21
     8cc:	5cc1      	ldrb	r1, [r0, r3]
     8ce:	2080      	movs	r0, #128	; 0x80
     8d0:	0180      	lsls	r0, r0, #6
     8d2:	4b22      	ldr	r3, [pc, #136]	; (95c <E_25LCxxx_validate_page+0x12c>)
     8d4:	4798      	blx	r3
     8d6:	b283      	uxth	r3, r0
                if (u16Page > max_page) {
     8d8:	429e      	cmp	r6, r3
     8da:	d9c8      	bls.n	86e <E_25LCxxx_validate_page+0x3e>
                    pHandle->pDebug_print("25LC640x: page %d is greater than max page number %d\r\n", u16Page, max_page);
     8dc:	69eb      	ldr	r3, [r5, #28]
     8de:	0400      	lsls	r0, r0, #16
     8e0:	0c02      	lsrs	r2, r0, #16
     8e2:	0031      	movs	r1, r6
     8e4:	4821      	ldr	r0, [pc, #132]	; (96c <E_25LCxxx_validate_page+0x13c>)
     8e6:	4798      	blx	r3
                    return 1; /**< return failed error **/
     8e8:	e7ae      	b.n	848 <E_25LCxxx_validate_page+0x18>
                max_page = ((E_25LC128_MAX_ADD + 1) / pHandle->iPage_size);
     8ea:	2321      	movs	r3, #33	; 0x21
     8ec:	5cc1      	ldrb	r1, [r0, r3]
     8ee:	2080      	movs	r0, #128	; 0x80
     8f0:	01c0      	lsls	r0, r0, #7
     8f2:	4b1a      	ldr	r3, [pc, #104]	; (95c <E_25LCxxx_validate_page+0x12c>)
     8f4:	4798      	blx	r3
     8f6:	b283      	uxth	r3, r0
                if (u16Page > max_page) {
     8f8:	429e      	cmp	r6, r3
     8fa:	d9b8      	bls.n	86e <E_25LCxxx_validate_page+0x3e>
                    pHandle->pDebug_print("25LC128: page %d is greater than max page number %d\r\n", u16Page, max_page);
     8fc:	69eb      	ldr	r3, [r5, #28]
     8fe:	0400      	lsls	r0, r0, #16
     900:	0c02      	lsrs	r2, r0, #16
     902:	0031      	movs	r1, r6
     904:	481a      	ldr	r0, [pc, #104]	; (970 <E_25LCxxx_validate_page+0x140>)
     906:	4798      	blx	r3
                    return 1; /**< return failed error **/
     908:	e79e      	b.n	848 <E_25LCxxx_validate_page+0x18>
                max_page = ((E_25LC256_MAX_ADD + 1) / pHandle->iPage_size);
     90a:	2321      	movs	r3, #33	; 0x21
     90c:	5cc1      	ldrb	r1, [r0, r3]
     90e:	2080      	movs	r0, #128	; 0x80
     910:	0200      	lsls	r0, r0, #8
     912:	4b12      	ldr	r3, [pc, #72]	; (95c <E_25LCxxx_validate_page+0x12c>)
     914:	4798      	blx	r3
     916:	b283      	uxth	r3, r0
                if (u16Page > max_page) {
     918:	429e      	cmp	r6, r3
     91a:	d9a8      	bls.n	86e <E_25LCxxx_validate_page+0x3e>
                    pHandle->pDebug_print("25LC256: page %d is greater than max page number %d\r\n", u16Page, max_page);
     91c:	69eb      	ldr	r3, [r5, #28]
     91e:	0400      	lsls	r0, r0, #16
     920:	0c02      	lsrs	r2, r0, #16
     922:	0031      	movs	r1, r6
     924:	4813      	ldr	r0, [pc, #76]	; (974 <E_25LCxxx_validate_page+0x144>)
     926:	4798      	blx	r3
                    return 1; /**< return failed error **/
     928:	e78e      	b.n	848 <E_25LCxxx_validate_page+0x18>
                max_page = ((E_25LC512_MAX_ADD + 1) / pHandle->iPage_size);
     92a:	2321      	movs	r3, #33	; 0x21
     92c:	5cc1      	ldrb	r1, [r0, r3]
     92e:	2080      	movs	r0, #128	; 0x80
     930:	0240      	lsls	r0, r0, #9
     932:	4b0a      	ldr	r3, [pc, #40]	; (95c <E_25LCxxx_validate_page+0x12c>)
     934:	4798      	blx	r3
     936:	b283      	uxth	r3, r0
                if (u16Page > max_page) {
     938:	429e      	cmp	r6, r3
     93a:	d998      	bls.n	86e <E_25LCxxx_validate_page+0x3e>
                    pHandle->pDebug_print("25LC512: page %d is greater than max page number %d\r\n", u16Page, max_page);
     93c:	69eb      	ldr	r3, [r5, #28]
     93e:	0400      	lsls	r0, r0, #16
     940:	0c02      	lsrs	r2, r0, #16
     942:	0031      	movs	r1, r6
     944:	480c      	ldr	r0, [pc, #48]	; (978 <E_25LCxxx_validate_page+0x148>)
     946:	4798      	blx	r3
                    return 1; /**< return failed error **/
     948:	e77e      	b.n	848 <E_25LCxxx_validate_page+0x18>
            pHandle->pDebug_print("25LCxx:failed to validate page device type unknown\r\n");
     94a:	69eb      	ldr	r3, [r5, #28]
     94c:	480b      	ldr	r0, [pc, #44]	; (97c <E_25LCxxx_validate_page+0x14c>)
     94e:	4798      	blx	r3
            return 1; /**< return failed error **/
     950:	e77a      	b.n	848 <E_25LCxxx_validate_page+0x18>
        return 2; /**< return failed error */
     952:	2402      	movs	r4, #2
     954:	e778      	b.n	848 <E_25LCxxx_validate_page+0x18>
     956:	46c0      	nop			; (mov r8, r8)
     958:	00009120 	.word	0x00009120
     95c:	00002725 	.word	0x00002725
     960:	00009668 	.word	0x00009668
     964:	000096a0 	.word	0x000096a0
     968:	000096d8 	.word	0x000096d8
     96c:	00009710 	.word	0x00009710
     970:	00009748 	.word	0x00009748
     974:	00009780 	.word	0x00009780
     978:	000097b8 	.word	0x000097b8
     97c:	000097f0 	.word	0x000097f0

00000980 <E_25LCxx_get_legth>:
 *            - 1 failed get length
 *            - 2 handle is NULL
 *            - 3 handle is not initialized
 * @note      none
 */
uint8_t E_25LCxx_get_legth(E_25LCxx_handle_t *pHandle, E_25LCxx_max_addr_t *pLength) {
     980:	b510      	push	{r4, lr}
    uint8_t res;
    if (pHandle == NULL)
     982:	2800      	cmp	r0, #0
     984:	d033      	beq.n	9ee <E_25LCxx_get_legth+0x6e>
        return 2; /**< return failed error */
    if (pHandle->u8Inited != 1)
     986:	2322      	movs	r3, #34	; 0x22
     988:	5cc4      	ldrb	r4, [r0, r3]
     98a:	2c01      	cmp	r4, #1
     98c:	d002      	beq.n	994 <E_25LCxx_get_legth+0x14>
        return 3; /**< return failed error */
     98e:	2403      	movs	r4, #3
            return 1; /**< return failed error **/
            break;
    }
    return 0; /**< return success */

}
     990:	0020      	movs	r0, r4
     992:	bd10      	pop	{r4, pc}
    switch (pHandle->u8Device_type) {
     994:	3b02      	subs	r3, #2
     996:	5cc3      	ldrb	r3, [r0, r3]
     998:	2b07      	cmp	r3, #7
     99a:	d824      	bhi.n	9e6 <E_25LCxx_get_legth+0x66>
     99c:	009b      	lsls	r3, r3, #2
     99e:	4a15      	ldr	r2, [pc, #84]	; (9f4 <E_25LCxx_get_legth+0x74>)
     9a0:	58d3      	ldr	r3, [r2, r3]
     9a2:	469f      	mov	pc, r3
            *pLength = (E_25LCxx_max_addr_t) (E_25LC080x_MAX_ADD + 1);
     9a4:	2380      	movs	r3, #128	; 0x80
     9a6:	00db      	lsls	r3, r3, #3
     9a8:	800b      	strh	r3, [r1, #0]
    return 0; /**< return success */
     9aa:	2400      	movs	r4, #0
            break;
     9ac:	e7f0      	b.n	990 <E_25LCxx_get_legth+0x10>
            *pLength = (E_25LCxx_max_addr_t) (E_25LC160x_MAX_ADD + 1);
     9ae:	2380      	movs	r3, #128	; 0x80
     9b0:	011b      	lsls	r3, r3, #4
     9b2:	800b      	strh	r3, [r1, #0]
    return 0; /**< return success */
     9b4:	2400      	movs	r4, #0
            break;
     9b6:	e7eb      	b.n	990 <E_25LCxx_get_legth+0x10>
            *pLength = (E_25LCxx_max_addr_t) (E_25LC320x_MAX_ADD + 1);
     9b8:	2380      	movs	r3, #128	; 0x80
     9ba:	015b      	lsls	r3, r3, #5
     9bc:	800b      	strh	r3, [r1, #0]
    return 0; /**< return success */
     9be:	2400      	movs	r4, #0
            break;
     9c0:	e7e6      	b.n	990 <E_25LCxx_get_legth+0x10>
            *pLength = (E_25LCxx_max_addr_t) (E_25LC640x_MAX_ADD + 1);
     9c2:	2380      	movs	r3, #128	; 0x80
     9c4:	019b      	lsls	r3, r3, #6
     9c6:	800b      	strh	r3, [r1, #0]
    return 0; /**< return success */
     9c8:	2400      	movs	r4, #0
            break;
     9ca:	e7e1      	b.n	990 <E_25LCxx_get_legth+0x10>
            *pLength = (E_25LCxx_max_addr_t) (E_25LC128_MAX_ADD + 1);
     9cc:	2380      	movs	r3, #128	; 0x80
     9ce:	01db      	lsls	r3, r3, #7
     9d0:	800b      	strh	r3, [r1, #0]
    return 0; /**< return success */
     9d2:	2400      	movs	r4, #0
            break;
     9d4:	e7dc      	b.n	990 <E_25LCxx_get_legth+0x10>
            *pLength = (E_25LCxx_max_addr_t) (E_25LC256_MAX_ADD + 1);
     9d6:	4b08      	ldr	r3, [pc, #32]	; (9f8 <E_25LCxx_get_legth+0x78>)
     9d8:	800b      	strh	r3, [r1, #0]
    return 0; /**< return success */
     9da:	2400      	movs	r4, #0
            break;
     9dc:	e7d8      	b.n	990 <E_25LCxx_get_legth+0x10>
            *pLength = (E_25LCxx_max_addr_t) (E_25LC512_MAX_ADD + 1);
     9de:	2300      	movs	r3, #0
     9e0:	800b      	strh	r3, [r1, #0]
    return 0; /**< return success */
     9e2:	2400      	movs	r4, #0
            break;
     9e4:	e7d4      	b.n	990 <E_25LCxx_get_legth+0x10>
            pHandle->pDebug_print("25LCxx:invalid device type\r\n");
     9e6:	69c3      	ldr	r3, [r0, #28]
     9e8:	4804      	ldr	r0, [pc, #16]	; (9fc <E_25LCxx_get_legth+0x7c>)
     9ea:	4798      	blx	r3
            return 1; /**< return failed error **/
     9ec:	e7d0      	b.n	990 <E_25LCxx_get_legth+0x10>
        return 2; /**< return failed error */
     9ee:	2402      	movs	r4, #2
     9f0:	e7ce      	b.n	990 <E_25LCxx_get_legth+0x10>
     9f2:	46c0      	nop			; (mov r8, r8)
     9f4:	00009140 	.word	0x00009140
     9f8:	ffff8000 	.word	0xffff8000
     9fc:	00009828 	.word	0x00009828

00000a00 <E_25LCxx_check_bp_before_write>:
uint8_t E_25LCxx_check_bp_before_write(E_25LCxx_handle_t *pHandle, uint16_t u16Address) {
     a00:	b5f0      	push	{r4, r5, r6, r7, lr}
     a02:	b085      	sub	sp, #20
     a04:	0007      	movs	r7, r0
     a06:	000c      	movs	r4, r1
    if (pHandle == NULL)
     a08:	2800      	cmp	r0, #0
     a0a:	d057      	beq.n	abc <E_25LCxx_check_bp_before_write+0xbc>
    if (pHandle->u8Inited != 1)
     a0c:	2322      	movs	r3, #34	; 0x22
     a0e:	5cc5      	ldrb	r5, [r0, r3]
     a10:	2d01      	cmp	r5, #1
     a12:	d003      	beq.n	a1c <E_25LCxx_check_bp_before_write+0x1c>
        return 3; /**< return failed error */
     a14:	2503      	movs	r5, #3
}
     a16:	0028      	movs	r0, r5
     a18:	b005      	add	sp, #20
     a1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    E_25LCxx_get_bp_status(pHandle, (uint8_t*) & status);
     a1c:	ab02      	add	r3, sp, #8
     a1e:	1dde      	adds	r6, r3, #7
     a20:	0031      	movs	r1, r6
     a22:	4b28      	ldr	r3, [pc, #160]	; (ac4 <E_25LCxx_check_bp_before_write+0xc4>)
     a24:	4798      	blx	r3
    E_25LCxx_get_legth(pHandle, (uint16_t *) & memoryLength);
     a26:	a903      	add	r1, sp, #12
     a28:	0038      	movs	r0, r7
     a2a:	4b27      	ldr	r3, [pc, #156]	; (ac8 <E_25LCxx_check_bp_before_write+0xc8>)
     a2c:	4798      	blx	r3
    switch (status) {
     a2e:	7833      	ldrb	r3, [r6, #0]
     a30:	2b01      	cmp	r3, #1
     a32:	d009      	beq.n	a48 <E_25LCxx_check_bp_before_write+0x48>
     a34:	2b00      	cmp	r3, #0
     a36:	d043      	beq.n	ac0 <E_25LCxx_check_bp_before_write+0xc0>
     a38:	2b02      	cmp	r3, #2
     a3a:	d020      	beq.n	a7e <E_25LCxx_check_bp_before_write+0x7e>
     a3c:	2b03      	cmp	r3, #3
     a3e:	d039      	beq.n	ab4 <E_25LCxx_check_bp_before_write+0xb4>
            pHandle->pDebug_print("25LCxx: write failed,unknown block protect status\r\n");
     a40:	69fb      	ldr	r3, [r7, #28]
     a42:	4822      	ldr	r0, [pc, #136]	; (acc <E_25LCxx_check_bp_before_write+0xcc>)
     a44:	4798      	blx	r3
            return 1; /**< return error */
     a46:	e7e6      	b.n	a16 <E_25LCxx_check_bp_before_write+0x16>
            if (u16Address >= (memoryLength * 0.75)) {
     a48:	4e21      	ldr	r6, [pc, #132]	; (ad0 <E_25LCxx_check_bp_before_write+0xd0>)
     a4a:	0020      	movs	r0, r4
     a4c:	47b0      	blx	r6
     a4e:	9000      	str	r0, [sp, #0]
     a50:	9101      	str	r1, [sp, #4]
     a52:	ab03      	add	r3, sp, #12
     a54:	8818      	ldrh	r0, [r3, #0]
     a56:	47b0      	blx	r6
     a58:	2200      	movs	r2, #0
     a5a:	4b1e      	ldr	r3, [pc, #120]	; (ad4 <E_25LCxx_check_bp_before_write+0xd4>)
     a5c:	4e1e      	ldr	r6, [pc, #120]	; (ad8 <E_25LCxx_check_bp_before_write+0xd8>)
     a5e:	47b0      	blx	r6
     a60:	0002      	movs	r2, r0
     a62:	000b      	movs	r3, r1
     a64:	9800      	ldr	r0, [sp, #0]
     a66:	9901      	ldr	r1, [sp, #4]
     a68:	4e1c      	ldr	r6, [pc, #112]	; (adc <E_25LCxx_check_bp_before_write+0xdc>)
     a6a:	47b0      	blx	r6
     a6c:	2800      	cmp	r0, #0
     a6e:	d101      	bne.n	a74 <E_25LCxx_check_bp_before_write+0x74>
                return 0;
     a70:	2500      	movs	r5, #0
     a72:	e7d0      	b.n	a16 <E_25LCxx_check_bp_before_write+0x16>
                pHandle->pDebug_print("25LCxx: failed to write from address: %d, 25%% of the upper memory is write protected\r\n", u16Address);
     a74:	69fb      	ldr	r3, [r7, #28]
     a76:	0021      	movs	r1, r4
     a78:	4819      	ldr	r0, [pc, #100]	; (ae0 <E_25LCxx_check_bp_before_write+0xe0>)
     a7a:	4798      	blx	r3
                return 1; /**< return error */
     a7c:	e7cb      	b.n	a16 <E_25LCxx_check_bp_before_write+0x16>
            if (u16Address >= (memoryLength * 0.5)) {
     a7e:	4e14      	ldr	r6, [pc, #80]	; (ad0 <E_25LCxx_check_bp_before_write+0xd0>)
     a80:	0020      	movs	r0, r4
     a82:	47b0      	blx	r6
     a84:	9000      	str	r0, [sp, #0]
     a86:	9101      	str	r1, [sp, #4]
     a88:	ab03      	add	r3, sp, #12
     a8a:	8818      	ldrh	r0, [r3, #0]
     a8c:	47b0      	blx	r6
     a8e:	2200      	movs	r2, #0
     a90:	4b14      	ldr	r3, [pc, #80]	; (ae4 <E_25LCxx_check_bp_before_write+0xe4>)
     a92:	4e11      	ldr	r6, [pc, #68]	; (ad8 <E_25LCxx_check_bp_before_write+0xd8>)
     a94:	47b0      	blx	r6
     a96:	0002      	movs	r2, r0
     a98:	000b      	movs	r3, r1
     a9a:	9800      	ldr	r0, [sp, #0]
     a9c:	9901      	ldr	r1, [sp, #4]
     a9e:	4e0f      	ldr	r6, [pc, #60]	; (adc <E_25LCxx_check_bp_before_write+0xdc>)
     aa0:	47b0      	blx	r6
     aa2:	2800      	cmp	r0, #0
     aa4:	d101      	bne.n	aaa <E_25LCxx_check_bp_before_write+0xaa>
                return 0;
     aa6:	2500      	movs	r5, #0
     aa8:	e7b5      	b.n	a16 <E_25LCxx_check_bp_before_write+0x16>
                pHandle->pDebug_print("25LCxx: failed to write from address: %d, half of the memory is write protected\r\n", u16Address);
     aaa:	69fb      	ldr	r3, [r7, #28]
     aac:	0021      	movs	r1, r4
     aae:	480e      	ldr	r0, [pc, #56]	; (ae8 <E_25LCxx_check_bp_before_write+0xe8>)
     ab0:	4798      	blx	r3
                return 1; /**< return error */
     ab2:	e7b0      	b.n	a16 <E_25LCxx_check_bp_before_write+0x16>
            pHandle->pDebug_print("25LCxx: write failed, eeprom full memory write protected, check the BP status\r\n");
     ab4:	69fb      	ldr	r3, [r7, #28]
     ab6:	480d      	ldr	r0, [pc, #52]	; (aec <E_25LCxx_check_bp_before_write+0xec>)
     ab8:	4798      	blx	r3
            return 1; /**< return error */
     aba:	e7ac      	b.n	a16 <E_25LCxx_check_bp_before_write+0x16>
        return 2; /**< return failed error */
     abc:	2502      	movs	r5, #2
     abe:	e7aa      	b.n	a16 <E_25LCxx_check_bp_before_write+0x16>
            return 0;
     ac0:	2500      	movs	r5, #0
     ac2:	e7a8      	b.n	a16 <E_25LCxx_check_bp_before_write+0x16>
     ac4:	0000035d 	.word	0x0000035d
     ac8:	00000981 	.word	0x00000981
     acc:	00009944 	.word	0x00009944
     ad0:	00004cf5 	.word	0x00004cf5
     ad4:	3fe80000 	.word	0x3fe80000
     ad8:	00004161 	.word	0x00004161
     adc:	00002965 	.word	0x00002965
     ae0:	00009848 	.word	0x00009848
     ae4:	3fe00000 	.word	0x3fe00000
     ae8:	000098a0 	.word	0x000098a0
     aec:	000098f4 	.word	0x000098f4

00000af0 <E_25LCxx_write_byte>:
uint8_t E_25LCxx_write_byte(E_25LCxx_handle_t *pHandle, uint16_t u16Addr, uint8_t *pBuf, uint16_t u16Length) {
     af0:	b5f0      	push	{r4, r5, r6, r7, lr}
     af2:	46ce      	mov	lr, r9
     af4:	b500      	push	{lr}
     af6:	b082      	sub	sp, #8
     af8:	0007      	movs	r7, r0
     afa:	000d      	movs	r5, r1
     afc:	9201      	str	r2, [sp, #4]
     afe:	9300      	str	r3, [sp, #0]
    if (pHandle == NULL)
     b00:	2800      	cmp	r0, #0
     b02:	d058      	beq.n	bb6 <E_25LCxx_write_byte+0xc6>
    if (pHandle->u8Inited != 1)
     b04:	2322      	movs	r3, #34	; 0x22
     b06:	5cc4      	ldrb	r4, [r0, r3]
     b08:	2c01      	cmp	r4, #1
     b0a:	d005      	beq.n	b18 <E_25LCxx_write_byte+0x28>
        return 3; /**< return failed error */
     b0c:	2403      	movs	r4, #3
}
     b0e:	0020      	movs	r0, r4
     b10:	b002      	add	sp, #8
     b12:	bc04      	pop	{r2}
     b14:	4691      	mov	r9, r2
     b16:	bdf0      	pop	{r4, r5, r6, r7, pc}
    if (E_25LCXX_validate_page_boundary(pHandle, u16Addr, u16Length) != 0)
     b18:	9a00      	ldr	r2, [sp, #0]
     b1a:	4b28      	ldr	r3, [pc, #160]	; (bbc <E_25LCxx_write_byte+0xcc>)
     b1c:	4798      	blx	r3
     b1e:	2800      	cmp	r0, #0
     b20:	d001      	beq.n	b26 <E_25LCxx_write_byte+0x36>
        return 6; /**< return failed error */
     b22:	2406      	movs	r4, #6
     b24:	e7f3      	b.n	b0e <E_25LCxx_write_byte+0x1e>
    if (E_25LCxxx_validate_address(pHandle, u16Addr) != 0) /**< check if the address to write is valid or not */
     b26:	0029      	movs	r1, r5
     b28:	0038      	movs	r0, r7
     b2a:	4b25      	ldr	r3, [pc, #148]	; (bc0 <E_25LCxx_write_byte+0xd0>)
     b2c:	4798      	blx	r3
     b2e:	2800      	cmp	r0, #0
     b30:	d001      	beq.n	b36 <E_25LCxx_write_byte+0x46>
        return 4; /**< return failed error */
     b32:	2404      	movs	r4, #4
     b34:	e7eb      	b.n	b0e <E_25LCxx_write_byte+0x1e>
    if (E_25LCxx_check_bp_before_write(pHandle, u16Addr) != 0) /**< check that we're not trying to write on protected block  */
     b36:	0029      	movs	r1, r5
     b38:	0038      	movs	r0, r7
     b3a:	4b22      	ldr	r3, [pc, #136]	; (bc4 <E_25LCxx_write_byte+0xd4>)
     b3c:	4798      	blx	r3
     b3e:	2800      	cmp	r0, #0
     b40:	d001      	beq.n	b46 <E_25LCxx_write_byte+0x56>
        return 5; /**< return failed error */
     b42:	2405      	movs	r4, #5
     b44:	e7e3      	b.n	b0e <E_25LCxx_write_byte+0x1e>
    pHandle->pChip_select(SLAVE_SELECT); /**< chip select */
     b46:	697b      	ldr	r3, [r7, #20]
     b48:	4798      	blx	r3
    res = a_e25lcxx_spi_write(pHandle, E_25LCXXX_WREN_REG, NULL, 0); /**< enable write operation */
     b4a:	2300      	movs	r3, #0
     b4c:	001a      	movs	r2, r3
     b4e:	2106      	movs	r1, #6
     b50:	0038      	movs	r0, r7
     b52:	4e1d      	ldr	r6, [pc, #116]	; (bc8 <E_25LCxx_write_byte+0xd8>)
     b54:	47b0      	blx	r6
     b56:	4681      	mov	r9, r0
    pHandle->pChip_select(SLAVE_ASSERT); /**< chip assert */
     b58:	2001      	movs	r0, #1
     b5a:	697b      	ldr	r3, [r7, #20]
     b5c:	4798      	blx	r3
    if (res) {
     b5e:	464b      	mov	r3, r9
     b60:	2b00      	cmp	r3, #0
     b62:	d10e      	bne.n	b82 <E_25LCxx_write_byte+0x92>
    pHandle->pChip_select(SLAVE_SELECT); /**< chip select */
     b64:	2000      	movs	r0, #0
     b66:	697b      	ldr	r3, [r7, #20]
     b68:	4798      	blx	r3
    res = a_e25lcxx_spi_write(pHandle, E_25LCXXX_WRITE_REG, NULL, 0); /**< send write command  */
     b6a:	2300      	movs	r3, #0
     b6c:	001a      	movs	r2, r3
     b6e:	2102      	movs	r1, #2
     b70:	0038      	movs	r0, r7
     b72:	4e15      	ldr	r6, [pc, #84]	; (bc8 <E_25LCxx_write_byte+0xd8>)
     b74:	47b0      	blx	r6
    if (res) {
     b76:	2800      	cmp	r0, #0
     b78:	d007      	beq.n	b8a <E_25LCxx_write_byte+0x9a>
        pHandle->pDebug_print("25LCxx:failed to send write command\r\n");
     b7a:	69fb      	ldr	r3, [r7, #28]
     b7c:	4813      	ldr	r0, [pc, #76]	; (bcc <E_25LCxx_write_byte+0xdc>)
     b7e:	4798      	blx	r3
        return 1; /**< return failed error **/
     b80:	e7c5      	b.n	b0e <E_25LCxx_write_byte+0x1e>
        pHandle->pDebug_print("25LCxx: failed to enable write operation \r\n");
     b82:	69fb      	ldr	r3, [r7, #28]
     b84:	4812      	ldr	r0, [pc, #72]	; (bd0 <E_25LCxx_write_byte+0xe0>)
     b86:	4798      	blx	r3
        return 1; /**< return fail error */
     b88:	e7c1      	b.n	b0e <E_25LCxx_write_byte+0x1e>
    res = a_e25lcxx_spi_write(pHandle, (u16Addr >> 8), NULL, 0); /**< write MSB of the address */
     b8a:	0a29      	lsrs	r1, r5, #8
     b8c:	2300      	movs	r3, #0
     b8e:	001a      	movs	r2, r3
     b90:	0038      	movs	r0, r7
     b92:	4e0d      	ldr	r6, [pc, #52]	; (bc8 <E_25LCxx_write_byte+0xd8>)
     b94:	47b0      	blx	r6
    res = a_e25lcxx_spi_write(pHandle, (uint8_t) u16Addr, (uint8_t*) pBuf, u16Length); /**< add 1 byte on the size to cater for the addr byte */
     b96:	b2e9      	uxtb	r1, r5
     b98:	9b00      	ldr	r3, [sp, #0]
     b9a:	9a01      	ldr	r2, [sp, #4]
     b9c:	0038      	movs	r0, r7
     b9e:	47b0      	blx	r6
     ba0:	1e05      	subs	r5, r0, #0
    if (res) {
     ba2:	d104      	bne.n	bae <E_25LCxx_write_byte+0xbe>
    pHandle->pChip_select(SLAVE_ASSERT); /**< chip assert */
     ba4:	697b      	ldr	r3, [r7, #20]
     ba6:	2001      	movs	r0, #1
     ba8:	4798      	blx	r3
    return 0; /**< return success */
     baa:	002c      	movs	r4, r5
     bac:	e7af      	b.n	b0e <E_25LCxx_write_byte+0x1e>
        pHandle->pDebug_print("25LCxx:failed to write data byte\r\n");
     bae:	69fb      	ldr	r3, [r7, #28]
     bb0:	4808      	ldr	r0, [pc, #32]	; (bd4 <E_25LCxx_write_byte+0xe4>)
     bb2:	4798      	blx	r3
        return 1; /**< return failed error */
     bb4:	e7ab      	b.n	b0e <E_25LCxx_write_byte+0x1e>
        return 2; /**< return failed error */
     bb6:	2402      	movs	r4, #2
     bb8:	e7a9      	b.n	b0e <E_25LCxx_write_byte+0x1e>
     bba:	46c0      	nop			; (mov r8, r8)
     bbc:	00000765 	.word	0x00000765
     bc0:	00000479 	.word	0x00000479
     bc4:	00000a01 	.word	0x00000a01
     bc8:	00000115 	.word	0x00000115
     bcc:	00009978 	.word	0x00009978
     bd0:	000092e4 	.word	0x000092e4
     bd4:	000099a0 	.word	0x000099a0

00000bd8 <E_25LCXX_put_byte>:
uint8_t E_25LCXX_put_byte(E_25LCxx_handle_t *pHandle, uint16_t u16Addr, unsigned long long *pBuf, uint8_t u16Length) {
     bd8:	b5f0      	push	{r4, r5, r6, r7, lr}
     bda:	46d6      	mov	lr, sl
     bdc:	464f      	mov	r7, r9
     bde:	4646      	mov	r6, r8
     be0:	b5c0      	push	{r6, r7, lr}
     be2:	b082      	sub	sp, #8
     be4:	af00      	add	r7, sp, #0
     be6:	0004      	movs	r4, r0
     be8:	6079      	str	r1, [r7, #4]
     bea:	0011      	movs	r1, r2
     bec:	469a      	mov	sl, r3
    uint8_t tempBuffer[u16Length]; /**< Temporarily buffer */
     bee:	4699      	mov	r9, r3
     bf0:	3307      	adds	r3, #7
     bf2:	08db      	lsrs	r3, r3, #3
     bf4:	00db      	lsls	r3, r3, #3
     bf6:	466a      	mov	r2, sp
     bf8:	1ad3      	subs	r3, r2, r3
     bfa:	469d      	mov	sp, r3
     bfc:	466e      	mov	r6, sp
    if (pHandle == NULL)
     bfe:	2800      	cmp	r0, #0
     c00:	d058      	beq.n	cb4 <E_25LCXX_put_byte+0xdc>
    if (pHandle->u8Inited != 1)
     c02:	2322      	movs	r3, #34	; 0x22
     c04:	5cc3      	ldrb	r3, [r0, r3]
     c06:	4698      	mov	r8, r3
     c08:	2b01      	cmp	r3, #1
     c0a:	d009      	beq.n	c20 <E_25LCXX_put_byte+0x48>
        return 3; /**< return failed error */
     c0c:	2303      	movs	r3, #3
     c0e:	4698      	mov	r8, r3
}
     c10:	4640      	mov	r0, r8
     c12:	46bd      	mov	sp, r7
     c14:	b002      	add	sp, #8
     c16:	bc1c      	pop	{r2, r3, r4}
     c18:	4690      	mov	r8, r2
     c1a:	4699      	mov	r9, r3
     c1c:	46a2      	mov	sl, r4
     c1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    memcpy(tempBuffer, pBuf, u16Length);
     c20:	4652      	mov	r2, sl
     c22:	4668      	mov	r0, sp
     c24:	4b25      	ldr	r3, [pc, #148]	; (cbc <E_25LCXX_put_byte+0xe4>)
     c26:	4798      	blx	r3
    for (dataIndex = 0; dataIndex < u16Length / 2; dataIndex++) {
     c28:	2200      	movs	r2, #0
     c2a:	4b25      	ldr	r3, [pc, #148]	; (cc0 <E_25LCXX_put_byte+0xe8>)
     c2c:	731a      	strb	r2, [r3, #12]
     c2e:	e009      	b.n	c44 <E_25LCXX_put_byte+0x6c>
        dataOut = tempBuffer[dataIndex];
     c30:	5cf1      	ldrb	r1, [r6, r3]
        tempBuffer[dataIndex] = tempBuffer[u16Length - dataIndex - 1];
     c32:	464a      	mov	r2, r9
     c34:	1ad2      	subs	r2, r2, r3
     c36:	3a01      	subs	r2, #1
     c38:	5cb0      	ldrb	r0, [r6, r2]
     c3a:	54f0      	strb	r0, [r6, r3]
        tempBuffer[u16Length - dataIndex - 1] = dataOut;
     c3c:	54b1      	strb	r1, [r6, r2]
    for (dataIndex = 0; dataIndex < u16Length / 2; dataIndex++) {
     c3e:	3301      	adds	r3, #1
     c40:	4a1f      	ldr	r2, [pc, #124]	; (cc0 <E_25LCXX_put_byte+0xe8>)
     c42:	7313      	strb	r3, [r2, #12]
     c44:	4653      	mov	r3, sl
     c46:	085a      	lsrs	r2, r3, #1
     c48:	4b1d      	ldr	r3, [pc, #116]	; (cc0 <E_25LCXX_put_byte+0xe8>)
     c4a:	7b1b      	ldrb	r3, [r3, #12]
     c4c:	429a      	cmp	r2, r3
     c4e:	d8ef      	bhi.n	c30 <E_25LCXX_put_byte+0x58>
    for (dataIndex = u16Addr; dataIndex < (u16Length + u16Addr); dataIndex++) {
     c50:	4b1b      	ldr	r3, [pc, #108]	; (cc0 <E_25LCXX_put_byte+0xe8>)
     c52:	793a      	ldrb	r2, [r7, #4]
     c54:	731a      	strb	r2, [r3, #12]
     c56:	e00a      	b.n	c6e <E_25LCXX_put_byte+0x96>
            pHandle->pDebug_print("25LCxx: failed to put bytes\r\n");
     c58:	69e3      	ldr	r3, [r4, #28]
     c5a:	481a      	ldr	r0, [pc, #104]	; (cc4 <E_25LCXX_put_byte+0xec>)
     c5c:	4798      	blx	r3
            return 1; /**< failed to write */
     c5e:	e7d7      	b.n	c10 <E_25LCXX_put_byte+0x38>
                pHandle->pDebug_print("25LCxx: failed to read WIP status\r\n");
     c60:	4819      	ldr	r0, [pc, #100]	; (cc8 <E_25LCXX_put_byte+0xf0>)
     c62:	69e3      	ldr	r3, [r4, #28]
     c64:	4798      	blx	r3
    for (dataIndex = u16Addr; dataIndex < (u16Length + u16Addr); dataIndex++) {
     c66:	4a16      	ldr	r2, [pc, #88]	; (cc0 <E_25LCXX_put_byte+0xe8>)
     c68:	7b13      	ldrb	r3, [r2, #12]
     c6a:	3301      	adds	r3, #1
     c6c:	7313      	strb	r3, [r2, #12]
     c6e:	4b14      	ldr	r3, [pc, #80]	; (cc0 <E_25LCXX_put_byte+0xe8>)
     c70:	7b19      	ldrb	r1, [r3, #12]
     c72:	687b      	ldr	r3, [r7, #4]
     c74:	444b      	add	r3, r9
     c76:	4299      	cmp	r1, r3
     c78:	da19      	bge.n	cae <E_25LCXX_put_byte+0xd6>
        res = (E_25LCxx_write_byte(pHandle, dataIndex, (uint8_t *) &tempBuffer[counter], 1));
     c7a:	b289      	uxth	r1, r1
     c7c:	4b10      	ldr	r3, [pc, #64]	; (cc0 <E_25LCXX_put_byte+0xe8>)
     c7e:	7b5a      	ldrb	r2, [r3, #13]
     c80:	18b2      	adds	r2, r6, r2
     c82:	2301      	movs	r3, #1
     c84:	0020      	movs	r0, r4
     c86:	4d11      	ldr	r5, [pc, #68]	; (ccc <E_25LCXX_put_byte+0xf4>)
     c88:	47a8      	blx	r5
        if (res) {
     c8a:	2800      	cmp	r0, #0
     c8c:	d1e4      	bne.n	c58 <E_25LCXX_put_byte+0x80>
        counter++;
     c8e:	4a0c      	ldr	r2, [pc, #48]	; (cc0 <E_25LCXX_put_byte+0xe8>)
     c90:	7b53      	ldrb	r3, [r2, #13]
     c92:	3301      	adds	r3, #1
     c94:	7353      	strb	r3, [r2, #13]
            res = (E_25LCxx_get_wip_status(pHandle, (uint8_t*) & wipStatus));
     c96:	490a      	ldr	r1, [pc, #40]	; (cc0 <E_25LCXX_put_byte+0xe8>)
     c98:	310e      	adds	r1, #14
     c9a:	0020      	movs	r0, r4
     c9c:	4b0c      	ldr	r3, [pc, #48]	; (cd0 <E_25LCXX_put_byte+0xf8>)
     c9e:	4798      	blx	r3
            if (res) {
     ca0:	2800      	cmp	r0, #0
     ca2:	d1dd      	bne.n	c60 <E_25LCXX_put_byte+0x88>
        } while (wipStatus); /** wait for each byte to successfully complete writing */
     ca4:	4b06      	ldr	r3, [pc, #24]	; (cc0 <E_25LCXX_put_byte+0xe8>)
     ca6:	7b9b      	ldrb	r3, [r3, #14]
     ca8:	2b00      	cmp	r3, #0
     caa:	d1f4      	bne.n	c96 <E_25LCXX_put_byte+0xbe>
     cac:	e7db      	b.n	c66 <E_25LCXX_put_byte+0x8e>
    return 0; /**< return success */
     cae:	2300      	movs	r3, #0
     cb0:	4698      	mov	r8, r3
     cb2:	e7ad      	b.n	c10 <E_25LCXX_put_byte+0x38>
        return 2; /**< return failed error */
     cb4:	2302      	movs	r3, #2
     cb6:	4698      	mov	r8, r3
     cb8:	e7aa      	b.n	c10 <E_25LCXX_put_byte+0x38>
     cba:	46c0      	nop			; (mov r8, r8)
     cbc:	000050ed 	.word	0x000050ed
     cc0:	200009d4 	.word	0x200009d4
     cc4:	000099c4 	.word	0x000099c4
     cc8:	000099e4 	.word	0x000099e4
     ccc:	00000af1 	.word	0x00000af1
     cd0:	00000241 	.word	0x00000241

00000cd4 <E_25LCxx_erase_page>:
uint8_t E_25LCxx_erase_page(E_25LCxx_handle_t *pHandle, uint16_t u16PageNumber) {
     cd4:	b5f0      	push	{r4, r5, r6, r7, lr}
     cd6:	b085      	sub	sp, #20
     cd8:	af00      	add	r7, sp, #0
     cda:	0005      	movs	r5, r0
     cdc:	000c      	movs	r4, r1
    uint8_t data[pHandle->iPage_size];
     cde:	2321      	movs	r3, #33	; 0x21
     ce0:	5cc2      	ldrb	r2, [r0, r3]
     ce2:	1dd3      	adds	r3, r2, #7
     ce4:	08db      	lsrs	r3, r3, #3
     ce6:	00db      	lsls	r3, r3, #3
     ce8:	4669      	mov	r1, sp
     cea:	1acb      	subs	r3, r1, r3
     cec:	469d      	mov	sp, r3
     cee:	607b      	str	r3, [r7, #4]
    memset(data, 0xff, pHandle->iPage_size); /**< define data to write when erasing page (default 255)*/
     cf0:	21ff      	movs	r1, #255	; 0xff
     cf2:	4668      	mov	r0, sp
     cf4:	4b39      	ldr	r3, [pc, #228]	; (ddc <E_25LCxx_erase_page+0x108>)
     cf6:	4798      	blx	r3
    if (pHandle == NULL)
     cf8:	2d00      	cmp	r5, #0
     cfa:	d100      	bne.n	cfe <E_25LCxx_erase_page+0x2a>
     cfc:	e06b      	b.n	dd6 <E_25LCxx_erase_page+0x102>
    if (pHandle->u8Inited != 1)
     cfe:	2322      	movs	r3, #34	; 0x22
     d00:	5cee      	ldrb	r6, [r5, r3]
     d02:	2e01      	cmp	r6, #1
     d04:	d004      	beq.n	d10 <E_25LCxx_erase_page+0x3c>
        return 3; /**< return failed error */
     d06:	2603      	movs	r6, #3
}
     d08:	0030      	movs	r0, r6
     d0a:	46bd      	mov	sp, r7
     d0c:	b005      	add	sp, #20
     d0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    if (E_25LCxxx_validate_page(pHandle, u16PageNumber, (uint16_t *) & pageStartAdd) != NULL)
     d10:	3b14      	subs	r3, #20
     d12:	18fa      	adds	r2, r7, r3
     d14:	0021      	movs	r1, r4
     d16:	0028      	movs	r0, r5
     d18:	4b31      	ldr	r3, [pc, #196]	; (de0 <E_25LCxx_erase_page+0x10c>)
     d1a:	4798      	blx	r3
     d1c:	2800      	cmp	r0, #0
     d1e:	d001      	beq.n	d24 <E_25LCxx_erase_page+0x50>
        return 4; /**< return failed error */
     d20:	2604      	movs	r6, #4
     d22:	e7f1      	b.n	d08 <E_25LCxx_erase_page+0x34>
    if (E_25LCxx_check_bp_before_write(pHandle, pageStartAdd) != NULL)
     d24:	89f9      	ldrh	r1, [r7, #14]
     d26:	0028      	movs	r0, r5
     d28:	4b2e      	ldr	r3, [pc, #184]	; (de4 <E_25LCxx_erase_page+0x110>)
     d2a:	4798      	blx	r3
     d2c:	2800      	cmp	r0, #0
     d2e:	d001      	beq.n	d34 <E_25LCxx_erase_page+0x60>
        return 5; /**< return failed error */
     d30:	2605      	movs	r6, #5
     d32:	e7e9      	b.n	d08 <E_25LCxx_erase_page+0x34>
    pHandle->pChip_select(SLAVE_SELECT); /**< chip select */
     d34:	696b      	ldr	r3, [r5, #20]
     d36:	4798      	blx	r3
    res = a_e25lcxx_spi_write(pHandle, E_25LCXXX_WREN_REG, NULL, 0); /**< enable write operation */
     d38:	2300      	movs	r3, #0
     d3a:	001a      	movs	r2, r3
     d3c:	2106      	movs	r1, #6
     d3e:	0028      	movs	r0, r5
     d40:	4c29      	ldr	r4, [pc, #164]	; (de8 <E_25LCxx_erase_page+0x114>)
     d42:	47a0      	blx	r4
     d44:	0004      	movs	r4, r0
    pHandle->pChip_select(SLAVE_ASSERT); /**< chip diselect */
     d46:	2001      	movs	r0, #1
     d48:	696b      	ldr	r3, [r5, #20]
     d4a:	4798      	blx	r3
    if (res) {
     d4c:	2c00      	cmp	r4, #0
     d4e:	d11e      	bne.n	d8e <E_25LCxx_erase_page+0xba>
    pHandle->pChip_select(SLAVE_SELECT); /**< chip select */
     d50:	2000      	movs	r0, #0
     d52:	696b      	ldr	r3, [r5, #20]
     d54:	4798      	blx	r3
    if (pHandle->u8Device_type == E_25LC512_VARIANT) {
     d56:	2320      	movs	r3, #32
     d58:	5ceb      	ldrb	r3, [r5, r3]
     d5a:	2b07      	cmp	r3, #7
     d5c:	d11b      	bne.n	d96 <E_25LCxx_erase_page+0xc2>
        res = a_e25lcxx_spi_write(pHandle, E_25LCXXX_PAGE_ERASE_CMD, NULL, 0); /**< send an erase command  */
     d5e:	2300      	movs	r3, #0
     d60:	001a      	movs	r2, r3
     d62:	2142      	movs	r1, #66	; 0x42
     d64:	0028      	movs	r0, r5
     d66:	4c20      	ldr	r4, [pc, #128]	; (de8 <E_25LCxx_erase_page+0x114>)
     d68:	47a0      	blx	r4
        res = a_e25lcxx_spi_write(pHandle, (pageStartAdd >> 8), NULL, 0); /**< write MSB byte  */
     d6a:	89f9      	ldrh	r1, [r7, #14]
     d6c:	0a09      	lsrs	r1, r1, #8
     d6e:	2300      	movs	r3, #0
     d70:	001a      	movs	r2, r3
     d72:	0028      	movs	r0, r5
     d74:	47a0      	blx	r4
        res = a_e25lcxx_spi_write(pHandle, (uint8_t) pageStartAdd, NULL, 0); /**< write LSB byte  */
     d76:	7bb9      	ldrb	r1, [r7, #14]
     d78:	2300      	movs	r3, #0
     d7a:	001a      	movs	r2, r3
     d7c:	0028      	movs	r0, r5
     d7e:	47a0      	blx	r4
     d80:	0004      	movs	r4, r0
    if (res) {
     d82:	2c00      	cmp	r4, #0
     d84:	d022      	beq.n	dcc <E_25LCxx_erase_page+0xf8>
        pHandle->pDebug_print("25LCxx:failed to erase page\r\n");
     d86:	69eb      	ldr	r3, [r5, #28]
     d88:	4818      	ldr	r0, [pc, #96]	; (dec <E_25LCxx_erase_page+0x118>)
     d8a:	4798      	blx	r3
        return 1; /**< return failed error **/
     d8c:	e7bc      	b.n	d08 <E_25LCxx_erase_page+0x34>
        pHandle->pDebug_print("25LCxx: failed to enable write operation \r\n");
     d8e:	69eb      	ldr	r3, [r5, #28]
     d90:	4817      	ldr	r0, [pc, #92]	; (df0 <E_25LCxx_erase_page+0x11c>)
     d92:	4798      	blx	r3
        return 1; /**< return fail error */
     d94:	e7b8      	b.n	d08 <E_25LCxx_erase_page+0x34>
        res = a_e25lcxx_spi_write(pHandle, E_25LCXXX_WRITE_REG, NULL, 0); /**< send the write command  */
     d96:	2300      	movs	r3, #0
     d98:	001a      	movs	r2, r3
     d9a:	2102      	movs	r1, #2
     d9c:	0028      	movs	r0, r5
     d9e:	4c12      	ldr	r4, [pc, #72]	; (de8 <E_25LCxx_erase_page+0x114>)
     da0:	47a0      	blx	r4
        if (res) {
     da2:	2800      	cmp	r0, #0
     da4:	d003      	beq.n	dae <E_25LCxx_erase_page+0xda>
            pHandle->pDebug_print("25LCxx:failed to send write command\r\n");
     da6:	69eb      	ldr	r3, [r5, #28]
     da8:	4812      	ldr	r0, [pc, #72]	; (df4 <E_25LCxx_erase_page+0x120>)
     daa:	4798      	blx	r3
            return 1; /**< return failed error **/
     dac:	e7ac      	b.n	d08 <E_25LCxx_erase_page+0x34>
        res = a_e25lcxx_spi_write(pHandle, (pageStartAdd >> 8), NULL, 0); /**< write MSB byte  */
     dae:	89f9      	ldrh	r1, [r7, #14]
     db0:	0a09      	lsrs	r1, r1, #8
     db2:	2300      	movs	r3, #0
     db4:	001a      	movs	r2, r3
     db6:	0028      	movs	r0, r5
     db8:	4c0b      	ldr	r4, [pc, #44]	; (de8 <E_25LCxx_erase_page+0x114>)
     dba:	47a0      	blx	r4
        res = a_e25lcxx_spi_write(pHandle, (uint8_t) pageStartAdd, (uint8_t *) & data, pHandle->iPage_size); /**< write LSB byte  */
     dbc:	2321      	movs	r3, #33	; 0x21
     dbe:	5ceb      	ldrb	r3, [r5, r3]
     dc0:	7bb9      	ldrb	r1, [r7, #14]
     dc2:	687a      	ldr	r2, [r7, #4]
     dc4:	0028      	movs	r0, r5
     dc6:	47a0      	blx	r4
     dc8:	0004      	movs	r4, r0
     dca:	e7da      	b.n	d82 <E_25LCxx_erase_page+0xae>
    pHandle->pChip_select(SLAVE_ASSERT); /**< chip deselect */
     dcc:	696b      	ldr	r3, [r5, #20]
     dce:	2001      	movs	r0, #1
     dd0:	4798      	blx	r3
    return 0; /**< return success */
     dd2:	0026      	movs	r6, r4
     dd4:	e798      	b.n	d08 <E_25LCxx_erase_page+0x34>
        return 2; /**< return failed error */
     dd6:	2602      	movs	r6, #2
     dd8:	e796      	b.n	d08 <E_25LCxx_erase_page+0x34>
     dda:	46c0      	nop			; (mov r8, r8)
     ddc:	00005171 	.word	0x00005171
     de0:	00000831 	.word	0x00000831
     de4:	00000a01 	.word	0x00000a01
     de8:	00000115 	.word	0x00000115
     dec:	00009a08 	.word	0x00009a08
     df0:	000092e4 	.word	0x000092e4
     df4:	00009978 	.word	0x00009978

00000df8 <E_25LCxx_info>:
 *             - 0 success
 *             - 2 handle is NULL
 * @note       none
 */

uint8_t E_25LCxx_info(E_25LCxx_info_t *pInfo) {
     df8:	b570      	push	{r4, r5, r6, lr}
     dfa:	1e04      	subs	r4, r0, #0
    if (pInfo == NULL) /**< check if handle is null */ {
     dfc:	d020      	beq.n	e40 <E_25LCxx_info+0x48>
        return 2; /**<failed, return error */
    }
    memset(pInfo, 0, sizeof (E_25LCxx_info_t)); /**< initialize 25LCxxx info structure */
     dfe:	2244      	movs	r2, #68	; 0x44
     e00:	2100      	movs	r1, #0
     e02:	4b10      	ldr	r3, [pc, #64]	; (e44 <E_25LCxx_info+0x4c>)
     e04:	4798      	blx	r3
    strncpy(pInfo->chip_name, CHIP_NAME, 10); /**< copy chip name */
     e06:	220a      	movs	r2, #10
     e08:	490f      	ldr	r1, [pc, #60]	; (e48 <E_25LCxx_info+0x50>)
     e0a:	0020      	movs	r0, r4
     e0c:	4d0f      	ldr	r5, [pc, #60]	; (e4c <E_25LCxx_info+0x54>)
     e0e:	47a8      	blx	r5
    strncpy(pInfo->interface, INTERFACE, 5); /**< copy interface name */
     e10:	0020      	movs	r0, r4
     e12:	3023      	adds	r0, #35	; 0x23
     e14:	2205      	movs	r2, #5
     e16:	490e      	ldr	r1, [pc, #56]	; (e50 <E_25LCxx_info+0x58>)
     e18:	47a8      	blx	r5
    strncpy(pInfo->manufacturer_name, MANUFACTURER_NAME, 25); /**< copy manufacturer name */
     e1a:	0020      	movs	r0, r4
     e1c:	300a      	adds	r0, #10
     e1e:	2219      	movs	r2, #25
     e20:	490c      	ldr	r1, [pc, #48]	; (e54 <E_25LCxx_info+0x5c>)
     e22:	47a8      	blx	r5
    pInfo->supply_voltage_max_v = SUPPLY_VOLTAGE_MAX; /**< set minimal supply voltage */
     e24:	4b0c      	ldr	r3, [pc, #48]	; (e58 <E_25LCxx_info+0x60>)
     e26:	6323      	str	r3, [r4, #48]	; 0x30
    pInfo->supply_voltage_min_v = SUPPLY_VOLTAGE_MIN; /**< set maximum supply voltage */
     e28:	4b0c      	ldr	r3, [pc, #48]	; (e5c <E_25LCxx_info+0x64>)
     e2a:	62e3      	str	r3, [r4, #44]	; 0x2c
    pInfo->max_current_ma = MAX_CURRENT; /**< set maximum current */
     e2c:	4b0c      	ldr	r3, [pc, #48]	; (e60 <E_25LCxx_info+0x68>)
     e2e:	6363      	str	r3, [r4, #52]	; 0x34
    pInfo->temperature_max = TEMPERATURE_MAX; /**< set minimal temperature */
     e30:	4b0c      	ldr	r3, [pc, #48]	; (e64 <E_25LCxx_info+0x6c>)
     e32:	63e3      	str	r3, [r4, #60]	; 0x3c
    pInfo->temperature_min = TEMPERATURE_MIN; /**< set maximum temperature */
     e34:	4b0c      	ldr	r3, [pc, #48]	; (e68 <E_25LCxx_info+0x70>)
     e36:	63a3      	str	r3, [r4, #56]	; 0x38
    pInfo->driver_version = DRIVER_VERSION; /**< set driver version */
     e38:	4b0c      	ldr	r3, [pc, #48]	; (e6c <E_25LCxx_info+0x74>)
     e3a:	6423      	str	r3, [r4, #64]	; 0x40

    return 0; /**< return success */
     e3c:	2000      	movs	r0, #0
}
     e3e:	bd70      	pop	{r4, r5, r6, pc}
        return 2; /**<failed, return error */
     e40:	2002      	movs	r0, #2
     e42:	e7fc      	b.n	e3e <E_25LCxx_info+0x46>
     e44:	00005171 	.word	0x00005171
     e48:	00009a28 	.word	0x00009a28
     e4c:	00005269 	.word	0x00005269
     e50:	00009a30 	.word	0x00009a30
     e54:	00009a34 	.word	0x00009a34
     e58:	40b00000 	.word	0x40b00000
     e5c:	40200000 	.word	0x40200000
     e60:	41200000 	.word	0x41200000
     e64:	42fa0000 	.word	0x42fa0000
     e68:	c2200000 	.word	0xc2200000
     e6c:	44964000 	.word	0x44964000

00000e70 <e_25LCxx_basic_initialize>:
 *          - 1 initialize failed
 * @note    none
 */

uint8_t e_25LCxx_basic_initialize(E_25LCxx_variant_t DeviceVariant, E_25LCxx_page_size_t pageSize)
{
     e70:	b570      	push	{r4, r5, r6, lr}
     e72:	0005      	movs	r5, r0
     e74:	000e      	movs	r6, r1
    uint8_t res;

    /*link driver functions */
    DRIVER_25LCXX_LINK_INIT(&e_25LCxx_handler, E_25LCxx_handle_t);
     e76:	4c2a      	ldr	r4, [pc, #168]	; (f20 <e_25LCxx_basic_initialize+0xb0>)
     e78:	2224      	movs	r2, #36	; 0x24
     e7a:	2100      	movs	r1, #0
     e7c:	0020      	movs	r0, r4
     e7e:	4b29      	ldr	r3, [pc, #164]	; (f24 <e_25LCxx_basic_initialize+0xb4>)
     e80:	4798      	blx	r3
    DRIVER_25LCXX_LINK_SPI_INIT(&e_25LCxx_handler, e_25LCxx_interface_spi_init);
     e82:	4b29      	ldr	r3, [pc, #164]	; (f28 <e_25LCxx_basic_initialize+0xb8>)
     e84:	6023      	str	r3, [r4, #0]
    DRIVER_25LCXX_LINK_SPI_DEINIT(&e_25LCxx_handler, e_25LCxx_interface_spi_deinit);
     e86:	4b29      	ldr	r3, [pc, #164]	; (f2c <e_25LCxx_basic_initialize+0xbc>)
     e88:	6063      	str	r3, [r4, #4]
    DRIVER_25LCXX_LINK_SPI_READ(&e_25LCxx_handler, e_25LCxx_interface_spi_read);
     e8a:	4b29      	ldr	r3, [pc, #164]	; (f30 <e_25LCxx_basic_initialize+0xc0>)
     e8c:	60e3      	str	r3, [r4, #12]
    DRIVER_25LCXX_LINK_SPI_WRITE(&e_25LCxx_handler, e_25LCxx_interface_spi_write);
     e8e:	4b29      	ldr	r3, [pc, #164]	; (f34 <e_25LCxx_basic_initialize+0xc4>)
     e90:	60a3      	str	r3, [r4, #8]
    DRIVER_25LCXX_LINK_CHIP_SELECT(&e_25LCxx_handler, e_25LCxx_interface_chip_select);
     e92:	4b29      	ldr	r3, [pc, #164]	; (f38 <e_25LCxx_basic_initialize+0xc8>)
     e94:	6163      	str	r3, [r4, #20]
    DRIVER_25LCXX_LINK_GPIO_WRITE(&e_25LCxx_handler, e_25LCxx_interface_gpio_write);
     e96:	4b29      	ldr	r3, [pc, #164]	; (f3c <e_25LCxx_basic_initialize+0xcc>)
     e98:	6123      	str	r3, [r4, #16]
    DRIVER_25LCXX_LINK_DEBUG_PRINT(&e_25LCxx_handler, e_25LCxx_interface_debug_print);
     e9a:	4b29      	ldr	r3, [pc, #164]	; (f40 <e_25LCxx_basic_initialize+0xd0>)
     e9c:	61e3      	str	r3, [r4, #28]
    DRIVER_25LCXX_LINK_DELAY_MS(&e_25LCxx_handler, e_25LCxx_interface_delay_ms);
     e9e:	4b29      	ldr	r3, [pc, #164]	; (f44 <e_25LCxx_basic_initialize+0xd4>)
     ea0:	61a3      	str	r3, [r4, #24]

    /*25LCxx initialize*/
    res = E_25LCxx_init(&e_25LCxx_handler);
     ea2:	0020      	movs	r0, r4
     ea4:	4b28      	ldr	r3, [pc, #160]	; (f48 <e_25LCxx_basic_initialize+0xd8>)
     ea6:	4798      	blx	r3
    if(res)
     ea8:	2800      	cmp	r0, #0
     eaa:	d11e      	bne.n	eea <e_25LCxx_basic_initialize+0x7a>
        e_25LCxx_interface_debug_print("25LCxx: initialize failed\r\n");
#endif // E_25LCXX_DEBUG_MODE
        return 1;
    }

    res = E_25LCxx_set_variant(&e_25LCxx_handler, DeviceVariant);
     eac:	0029      	movs	r1, r5
     eae:	481c      	ldr	r0, [pc, #112]	; (f20 <e_25LCxx_basic_initialize+0xb0>)
     eb0:	4b26      	ldr	r3, [pc, #152]	; (f4c <e_25LCxx_basic_initialize+0xdc>)
     eb2:	4798      	blx	r3
    if(res)
     eb4:	2800      	cmp	r0, #0
     eb6:	d11e      	bne.n	ef6 <e_25LCxx_basic_initialize+0x86>
        e_25LCxx_interface_debug_print("25LCxx: failed to set device type\r\n");
#endif // E_25LCXX_DEBUG_MODE
        return 1;
    }

    res = E_25LCxx_set_page_size(&e_25LCxx_handler, pageSize);
     eb8:	0031      	movs	r1, r6
     eba:	4819      	ldr	r0, [pc, #100]	; (f20 <e_25LCxx_basic_initialize+0xb0>)
     ebc:	4b24      	ldr	r3, [pc, #144]	; (f50 <e_25LCxx_basic_initialize+0xe0>)
     ebe:	4798      	blx	r3
    if(res)
     ec0:	2800      	cmp	r0, #0
     ec2:	d11d      	bne.n	f00 <e_25LCxx_basic_initialize+0x90>
        e_25LCxx_interface_debug_print("25LCxx:failed to set page size\r\n");
#endif // E_25LCXX_DEBUG_MODE
        return 1;
    }

    res = E_25LCxx_set_bp_status(&e_25LCxx_handler, E_25LCxx_BP01);
     ec4:	2101      	movs	r1, #1
     ec6:	4816      	ldr	r0, [pc, #88]	; (f20 <e_25LCxx_basic_initialize+0xb0>)
     ec8:	4b22      	ldr	r3, [pc, #136]	; (f54 <e_25LCxx_basic_initialize+0xe4>)
     eca:	4798      	blx	r3
    if(res)
     ecc:	2800      	cmp	r0, #0
     ece:	d11c      	bne.n	f0a <e_25LCxx_basic_initialize+0x9a>
#ifdef E_25LCXX_DEBUG_MODE
        e_25LCxx_interface_debug_print("25LCxx:failed to set block protect status\r\n");
#endif // E_25LCXX_DEBUG_MODE
        return 1;
    }
    e_25LCxx_interface_delay_ms(10);
     ed0:	200a      	movs	r0, #10
     ed2:	4b1c      	ldr	r3, [pc, #112]	; (f44 <e_25LCxx_basic_initialize+0xd4>)
     ed4:	4798      	blx	r3
    res = E_25LCxx_set_write_protect_enable(&e_25LCxx_handler, E_25LCxx_BOOL_FALSE);
     ed6:	2100      	movs	r1, #0
     ed8:	4811      	ldr	r0, [pc, #68]	; (f20 <e_25LCxx_basic_initialize+0xb0>)
     eda:	4b1f      	ldr	r3, [pc, #124]	; (f58 <e_25LCxx_basic_initialize+0xe8>)
     edc:	4798      	blx	r3
     ede:	1e04      	subs	r4, r0, #0
    if(res)
     ee0:	d118      	bne.n	f14 <e_25LCxx_basic_initialize+0xa4>
        e_25LCxx_interface_debug_print("25LCxx:failed to set write protect status\r\n");
#endif // E_25LCXX_DEBUG_MODE
        return 1;
    }

    e_25LCxx_interface_delay_ms(10);                                                        /**< delay 10ms after initializing */
     ee2:	200a      	movs	r0, #10
     ee4:	4b17      	ldr	r3, [pc, #92]	; (f44 <e_25LCxx_basic_initialize+0xd4>)
     ee6:	4798      	blx	r3
    return 0;                                                                               /**< return success */
     ee8:	e003      	b.n	ef2 <e_25LCxx_basic_initialize+0x82>
        e_25LCxx_interface_debug_print("25LCxx: initialize failed\r\n");
     eea:	481c      	ldr	r0, [pc, #112]	; (f5c <e_25LCxx_basic_initialize+0xec>)
     eec:	4b14      	ldr	r3, [pc, #80]	; (f40 <e_25LCxx_basic_initialize+0xd0>)
     eee:	4798      	blx	r3
        return 1;
     ef0:	2401      	movs	r4, #1
}
     ef2:	0020      	movs	r0, r4
     ef4:	bd70      	pop	{r4, r5, r6, pc}
        e_25LCxx_interface_debug_print("25LCxx: failed to set device type\r\n");
     ef6:	481a      	ldr	r0, [pc, #104]	; (f60 <e_25LCxx_basic_initialize+0xf0>)
     ef8:	4b11      	ldr	r3, [pc, #68]	; (f40 <e_25LCxx_basic_initialize+0xd0>)
     efa:	4798      	blx	r3
        return 1;
     efc:	2401      	movs	r4, #1
     efe:	e7f8      	b.n	ef2 <e_25LCxx_basic_initialize+0x82>
        e_25LCxx_interface_debug_print("25LCxx:failed to set page size\r\n");
     f00:	4818      	ldr	r0, [pc, #96]	; (f64 <e_25LCxx_basic_initialize+0xf4>)
     f02:	4b0f      	ldr	r3, [pc, #60]	; (f40 <e_25LCxx_basic_initialize+0xd0>)
     f04:	4798      	blx	r3
        return 1;
     f06:	2401      	movs	r4, #1
     f08:	e7f3      	b.n	ef2 <e_25LCxx_basic_initialize+0x82>
        e_25LCxx_interface_debug_print("25LCxx:failed to set block protect status\r\n");
     f0a:	4817      	ldr	r0, [pc, #92]	; (f68 <e_25LCxx_basic_initialize+0xf8>)
     f0c:	4b0c      	ldr	r3, [pc, #48]	; (f40 <e_25LCxx_basic_initialize+0xd0>)
     f0e:	4798      	blx	r3
        return 1;
     f10:	2401      	movs	r4, #1
     f12:	e7ee      	b.n	ef2 <e_25LCxx_basic_initialize+0x82>
        e_25LCxx_interface_debug_print("25LCxx:failed to set write protect status\r\n");
     f14:	4815      	ldr	r0, [pc, #84]	; (f6c <e_25LCxx_basic_initialize+0xfc>)
     f16:	4b0a      	ldr	r3, [pc, #40]	; (f40 <e_25LCxx_basic_initialize+0xd0>)
     f18:	4798      	blx	r3
        return 1;
     f1a:	2401      	movs	r4, #1
     f1c:	e7e9      	b.n	ef2 <e_25LCxx_basic_initialize+0x82>
     f1e:	46c0      	nop			; (mov r8, r8)
     f20:	200009e4 	.word	0x200009e4
     f24:	00005171 	.word	0x00005171
     f28:	000011b9 	.word	0x000011b9
     f2c:	000011bd 	.word	0x000011bd
     f30:	000011c1 	.word	0x000011c1
     f34:	000011d1 	.word	0x000011d1
     f38:	000011e5 	.word	0x000011e5
     f3c:	000011e1 	.word	0x000011e1
     f40:	00001201 	.word	0x00001201
     f44:	000011f5 	.word	0x000011f5
     f48:	00000159 	.word	0x00000159
     f4c:	00000209 	.word	0x00000209
     f50:	00000225 	.word	0x00000225
     f54:	000002a1 	.word	0x000002a1
     f58:	000003bd 	.word	0x000003bd
     f5c:	00009a4c 	.word	0x00009a4c
     f60:	00009a68 	.word	0x00009a68
     f64:	00009a8c 	.word	0x00009a8c
     f68:	00009ab0 	.word	0x00009ab0
     f6c:	00009adc 	.word	0x00009adc

00000f70 <e_25LCxx_basic_read_byte>:
 *          - 0 success
 *          - 1 failed
 * @note    none
 */
uint8_t e_25LCxx_basic_read_byte(uint16_t u16Address, uint8_t *pBuffer, uint16_t u16Size)
{
     f70:	b510      	push	{r4, lr}
     f72:	0013      	movs	r3, r2
    if(E_25LCxx_read_byte(&e_25LCxx_handler, u16Address, (uint8_t *)pBuffer, u16Size) != 0)        /**< begin reading process */
     f74:	000a      	movs	r2, r1
     f76:	0001      	movs	r1, r0
     f78:	4803      	ldr	r0, [pc, #12]	; (f88 <e_25LCxx_basic_read_byte+0x18>)
     f7a:	4c04      	ldr	r4, [pc, #16]	; (f8c <e_25LCxx_basic_read_byte+0x1c>)
     f7c:	47a0      	blx	r4
     f7e:	2800      	cmp	r0, #0
     f80:	d100      	bne.n	f84 <e_25LCxx_basic_read_byte+0x14>
    {
        return 1;                                                                                 /**< return failed error code */
    }
    return 0;                                                                                     /**< return success */
}
     f82:	bd10      	pop	{r4, pc}
        return 1;                                                                                 /**< return failed error code */
     f84:	2001      	movs	r0, #1
     f86:	e7fc      	b.n	f82 <e_25LCxx_basic_read_byte+0x12>
     f88:	200009e4 	.word	0x200009e4
     f8c:	0000055d 	.word	0x0000055d

00000f90 <e_25LCxx_basic_get_byte>:
 *          - 0 success
 *          - 1 failed
 * @note    equivalent to eeprom.get on Arduino
 */
uint8_t e_25LCxx_basic_get_byte(uint16_t u16Address, uint32_t *pBuffer, uint16_t u16Size)
{
     f90:	b510      	push	{r4, lr}
    if(E_25LCXX_get_byte(&e_25LCxx_handler, u16Address, (uint32_t *)pBuffer, u16Size) != 0)
     f92:	b2d3      	uxtb	r3, r2
     f94:	000a      	movs	r2, r1
     f96:	0001      	movs	r1, r0
     f98:	4803      	ldr	r0, [pc, #12]	; (fa8 <e_25LCxx_basic_get_byte+0x18>)
     f9a:	4c04      	ldr	r4, [pc, #16]	; (fac <e_25LCxx_basic_get_byte+0x1c>)
     f9c:	47a0      	blx	r4
     f9e:	2800      	cmp	r0, #0
     fa0:	d100      	bne.n	fa4 <e_25LCxx_basic_get_byte+0x14>
    {
        return 1;       /**< return error, read failed */
    }
    return 0;           /**< read successful */
}
     fa2:	bd10      	pop	{r4, pc}
        return 1;       /**< return error, read failed */
     fa4:	2001      	movs	r0, #1
     fa6:	e7fc      	b.n	fa2 <e_25LCxx_basic_get_byte+0x12>
     fa8:	200009e4 	.word	0x200009e4
     fac:	000005f5 	.word	0x000005f5

00000fb0 <e_25LCxx_basic_get_eeprom_legth>:
 * @return status code
 *          - 1 failed
 * @note    none
 */
uint32_t e_25LCxx_basic_get_eeprom_legth(void)
{
     fb0:	b510      	push	{r4, lr}
    static uint32_t eeprom_size;
    if(E_25LCxx_get_legth(&e_25LCxx_handler, (uint16_t *)&eeprom_size))
     fb2:	4807      	ldr	r0, [pc, #28]	; (fd0 <e_25LCxx_basic_get_eeprom_legth+0x20>)
     fb4:	0001      	movs	r1, r0
     fb6:	3124      	adds	r1, #36	; 0x24
     fb8:	4b06      	ldr	r3, [pc, #24]	; (fd4 <e_25LCxx_basic_get_eeprom_legth+0x24>)
     fba:	4798      	blx	r3
     fbc:	2800      	cmp	r0, #0
     fbe:	d102      	bne.n	fc6 <e_25LCxx_basic_get_eeprom_legth+0x16>
#ifdef E_25LCXX_DEBUG_MODE
        e_25LCxx_interface_debug_print("25LCxx: failed to get memory length\r\n");
#endif // E_25LCXX_DEBUG_MODE
        return 1;
    }
    return eeprom_size;
     fc0:	4b03      	ldr	r3, [pc, #12]	; (fd0 <e_25LCxx_basic_get_eeprom_legth+0x20>)
     fc2:	6a58      	ldr	r0, [r3, #36]	; 0x24
}
     fc4:	bd10      	pop	{r4, pc}
        e_25LCxx_interface_debug_print("25LCxx: failed to get memory length\r\n");
     fc6:	4804      	ldr	r0, [pc, #16]	; (fd8 <e_25LCxx_basic_get_eeprom_legth+0x28>)
     fc8:	4b04      	ldr	r3, [pc, #16]	; (fdc <e_25LCxx_basic_get_eeprom_legth+0x2c>)
     fca:	4798      	blx	r3
        return 1;
     fcc:	2001      	movs	r0, #1
     fce:	e7f9      	b.n	fc4 <e_25LCxx_basic_get_eeprom_legth+0x14>
     fd0:	200009e4 	.word	0x200009e4
     fd4:	00000981 	.word	0x00000981
     fd8:	00009b08 	.word	0x00009b08
     fdc:	00001201 	.word	0x00001201

00000fe0 <e_25LCxx_basic_get_wip_status>:
 *          - 0 success
 *          - 1 failed
 * @note    none
 */
uint8_t e_25LCxx_basic_get_wip_status(void)
{
     fe0:	b510      	push	{r4, lr}
     fe2:	b082      	sub	sp, #8
    uint8_t writeInProgess_status;
    uint32_t timeOut;

    E_25LCxx_get_wip_status(&e_25LCxx_handler, &writeInProgess_status);                       /**< read write-in-progress status bit */
     fe4:	466b      	mov	r3, sp
     fe6:	1dd9      	adds	r1, r3, #7
     fe8:	480b      	ldr	r0, [pc, #44]	; (1018 <e_25LCxx_basic_get_wip_status+0x38>)
     fea:	4b0c      	ldr	r3, [pc, #48]	; (101c <e_25LCxx_basic_get_wip_status+0x3c>)
     fec:	4798      	blx	r3
    while((writeInProgess_status == _25LCxx_BUSY ) && (timeOut < WRITE_TIMEOUT))              /**< wait until writing process is complete */
     fee:	466b      	mov	r3, sp
     ff0:	3307      	adds	r3, #7
     ff2:	781b      	ldrb	r3, [r3, #0]
     ff4:	2b01      	cmp	r3, #1
     ff6:	d10b      	bne.n	1010 <e_25LCxx_basic_get_wip_status+0x30>
     ff8:	4b09      	ldr	r3, [pc, #36]	; (1020 <e_25LCxx_basic_get_wip_status+0x40>)
     ffa:	429c      	cmp	r4, r3
     ffc:	d808      	bhi.n	1010 <e_25LCxx_basic_get_wip_status+0x30>
    {
        if(E_25LCxx_get_wip_status(&e_25LCxx_handler, &writeInProgess_status) != 0)
     ffe:	466b      	mov	r3, sp
    1000:	1dd9      	adds	r1, r3, #7
    1002:	4805      	ldr	r0, [pc, #20]	; (1018 <e_25LCxx_basic_get_wip_status+0x38>)
    1004:	4b05      	ldr	r3, [pc, #20]	; (101c <e_25LCxx_basic_get_wip_status+0x3c>)
    1006:	4798      	blx	r3
    1008:	2800      	cmp	r0, #0
    100a:	d101      	bne.n	1010 <e_25LCxx_basic_get_wip_status+0x30>
        {
            break;
            return 1;                                                                        /**< return failed to read the wip status bit */
        }
        timeOut++;
    100c:	3401      	adds	r4, #1
    100e:	e7ee      	b.n	fee <e_25LCxx_basic_get_wip_status+0xe>
    }
    return 0;                                                                                /**< return success */
}
    1010:	2000      	movs	r0, #0
    1012:	b002      	add	sp, #8
    1014:	bd10      	pop	{r4, pc}
    1016:	46c0      	nop			; (mov r8, r8)
    1018:	200009e4 	.word	0x200009e4
    101c:	00000241 	.word	0x00000241
    1020:	0001869f 	.word	0x0001869f

00001024 <e_25LCxx_basic_write_byte>:
{
    1024:	b510      	push	{r4, lr}
    1026:	0013      	movs	r3, r2
    if(E_25LCxx_write_byte(&e_25LCxx_handler, u16Address, (uint8_t *)pBuffer, u16Size) != 0)
    1028:	000a      	movs	r2, r1
    102a:	0001      	movs	r1, r0
    102c:	4806      	ldr	r0, [pc, #24]	; (1048 <e_25LCxx_basic_write_byte+0x24>)
    102e:	4c07      	ldr	r4, [pc, #28]	; (104c <e_25LCxx_basic_write_byte+0x28>)
    1030:	47a0      	blx	r4
    1032:	2800      	cmp	r0, #0
    1034:	d001      	beq.n	103a <e_25LCxx_basic_write_byte+0x16>
        return 1;                                                                            /**< return failed error */
    1036:	2001      	movs	r0, #1
}
    1038:	bd10      	pop	{r4, pc}
    if(e_25LCxx_basic_get_wip_status())                                                      /**< check write in progress status */
    103a:	4b05      	ldr	r3, [pc, #20]	; (1050 <e_25LCxx_basic_write_byte+0x2c>)
    103c:	4798      	blx	r3
    103e:	2800      	cmp	r0, #0
    1040:	d0fa      	beq.n	1038 <e_25LCxx_basic_write_byte+0x14>
        return 1;                                                                            /**< return error */
    1042:	2001      	movs	r0, #1
    1044:	e7f8      	b.n	1038 <e_25LCxx_basic_write_byte+0x14>
    1046:	46c0      	nop			; (mov r8, r8)
    1048:	200009e4 	.word	0x200009e4
    104c:	00000af1 	.word	0x00000af1
    1050:	00000fe1 	.word	0x00000fe1

00001054 <e_25LCxx_basic_put_byte>:
{
    1054:	b510      	push	{r4, lr}
    if(E_25LCXX_put_byte(&e_25LCxx_handler, u16Address, (unsigned long long *)pBuffer, u16Size) != NULL)
    1056:	b2d3      	uxtb	r3, r2
    1058:	000a      	movs	r2, r1
    105a:	0001      	movs	r1, r0
    105c:	4806      	ldr	r0, [pc, #24]	; (1078 <e_25LCxx_basic_put_byte+0x24>)
    105e:	4c07      	ldr	r4, [pc, #28]	; (107c <e_25LCxx_basic_put_byte+0x28>)
    1060:	47a0      	blx	r4
    1062:	2800      	cmp	r0, #0
    1064:	d001      	beq.n	106a <e_25LCxx_basic_put_byte+0x16>
        return 1;                                                                            /**< return failed error */
    1066:	2001      	movs	r0, #1
}
    1068:	bd10      	pop	{r4, pc}
    if(e_25LCxx_basic_get_wip_status())                                                      /**< check write in progress status */
    106a:	4b05      	ldr	r3, [pc, #20]	; (1080 <e_25LCxx_basic_put_byte+0x2c>)
    106c:	4798      	blx	r3
    106e:	2800      	cmp	r0, #0
    1070:	d0fa      	beq.n	1068 <e_25LCxx_basic_put_byte+0x14>
        return 1;                                                                            /**< return error */
    1072:	2001      	movs	r0, #1
    1074:	e7f8      	b.n	1068 <e_25LCxx_basic_put_byte+0x14>
    1076:	46c0      	nop			; (mov r8, r8)
    1078:	200009e4 	.word	0x200009e4
    107c:	00000bd9 	.word	0x00000bd9
    1080:	00000fe1 	.word	0x00000fe1

00001084 <e_25LCxx_basic_erase_page>:
{
    1084:	b510      	push	{r4, lr}
    1086:	0001      	movs	r1, r0
    if(E_25LCxx_erase_page(&e_25LCxx_handler, u16Page))                                       /**< begin erasing process */
    1088:	4806      	ldr	r0, [pc, #24]	; (10a4 <e_25LCxx_basic_erase_page+0x20>)
    108a:	4b07      	ldr	r3, [pc, #28]	; (10a8 <e_25LCxx_basic_erase_page+0x24>)
    108c:	4798      	blx	r3
    108e:	2800      	cmp	r0, #0
    1090:	d001      	beq.n	1096 <e_25LCxx_basic_erase_page+0x12>
        return 1;                                                                            /**< return failed error */
    1092:	2001      	movs	r0, #1
}
    1094:	bd10      	pop	{r4, pc}
    if(e_25LCxx_basic_get_wip_status())                                                      /**< check write in progress status */
    1096:	4b05      	ldr	r3, [pc, #20]	; (10ac <e_25LCxx_basic_erase_page+0x28>)
    1098:	4798      	blx	r3
    109a:	2800      	cmp	r0, #0
    109c:	d0fa      	beq.n	1094 <e_25LCxx_basic_erase_page+0x10>
        return 1;                                                                            /**< return error */
    109e:	2001      	movs	r0, #1
    10a0:	e7f8      	b.n	1094 <e_25LCxx_basic_erase_page+0x10>
    10a2:	46c0      	nop			; (mov r8, r8)
    10a4:	200009e4 	.word	0x200009e4
    10a8:	00000cd5 	.word	0x00000cd5
    10ac:	00000fe1 	.word	0x00000fe1

000010b0 <e_25LCxx_basic_erase_sector>:
{
    10b0:	b570      	push	{r4, r5, r6, lr}
    10b2:	b082      	sub	sp, #8
    10b4:	0004      	movs	r4, r0
    10b6:	000e      	movs	r6, r1
    const uint8_t data = 0xff;
    10b8:	22ff      	movs	r2, #255	; 0xff
    10ba:	466b      	mov	r3, sp
    10bc:	70da      	strb	r2, [r3, #3]
    addBuffer[0] = u16StartAddr;
    10be:	ab01      	add	r3, sp, #4
    10c0:	8018      	strh	r0, [r3, #0]
    addBuffer[1] = u16EndAddr;
    10c2:	8059      	strh	r1, [r3, #2]
    if(e_25LCxx_handler.u8Device_type != E_25LC512_VARIANT)                                     /**< currently only the 25LC512 support chip erase command */
    10c4:	2320      	movs	r3, #32
    10c6:	4a16      	ldr	r2, [pc, #88]	; (1120 <e_25LCxx_basic_erase_sector+0x70>)
    10c8:	5cd3      	ldrb	r3, [r2, r3]
    10ca:	2b07      	cmp	r3, #7
    10cc:	d017      	beq.n	10fe <e_25LCxx_basic_erase_sector+0x4e>
        for(addrIndex = u16StartAddr; addrIndex < ( u16EndAddr + 1); addrIndex++)
    10ce:	1c73      	adds	r3, r6, #1
    10d0:	429c      	cmp	r4, r3
    10d2:	da10      	bge.n	10f6 <e_25LCxx_basic_erase_sector+0x46>
            if(E_25LCxx_check_bp_before_write(&e_25LCxx_handler, addrIndex) != 0)
    10d4:	0021      	movs	r1, r4
    10d6:	4812      	ldr	r0, [pc, #72]	; (1120 <e_25LCxx_basic_erase_sector+0x70>)
    10d8:	4b12      	ldr	r3, [pc, #72]	; (1124 <e_25LCxx_basic_erase_sector+0x74>)
    10da:	4798      	blx	r3
    10dc:	1e05      	subs	r5, r0, #0
    10de:	d11c      	bne.n	111a <e_25LCxx_basic_erase_sector+0x6a>
            if(e_25LCxx_basic_write_byte(addrIndex, (uint8_t *)&data, 1) != NULL)
    10e0:	2201      	movs	r2, #1
    10e2:	466b      	mov	r3, sp
    10e4:	1cd9      	adds	r1, r3, #3
    10e6:	0020      	movs	r0, r4
    10e8:	4b0f      	ldr	r3, [pc, #60]	; (1128 <e_25LCxx_basic_erase_sector+0x78>)
    10ea:	4798      	blx	r3
    10ec:	2800      	cmp	r0, #0
    10ee:	d103      	bne.n	10f8 <e_25LCxx_basic_erase_sector+0x48>
        for(addrIndex = u16StartAddr; addrIndex < ( u16EndAddr + 1); addrIndex++)
    10f0:	3401      	adds	r4, #1
    10f2:	b2a4      	uxth	r4, r4
    10f4:	e7eb      	b.n	10ce <e_25LCxx_basic_erase_sector+0x1e>
        return 0;
    10f6:	2500      	movs	r5, #0
}
    10f8:	0028      	movs	r0, r5
    10fa:	b002      	add	sp, #8
    10fc:	bd70      	pop	{r4, r5, r6, pc}
    if(E_25LCxx_erase_sector(&e_25LCxx_handler, (uint16_t *)addBuffer))                      /**< begin erasing process */
    10fe:	a901      	add	r1, sp, #4
    1100:	4807      	ldr	r0, [pc, #28]	; (1120 <e_25LCxx_basic_erase_sector+0x70>)
    1102:	4b0a      	ldr	r3, [pc, #40]	; (112c <e_25LCxx_basic_erase_sector+0x7c>)
    1104:	4798      	blx	r3
    1106:	2800      	cmp	r0, #0
    1108:	d001      	beq.n	110e <e_25LCxx_basic_erase_sector+0x5e>
        return 1;                                                                           /**< return failed error */
    110a:	2501      	movs	r5, #1
    110c:	e7f4      	b.n	10f8 <e_25LCxx_basic_erase_sector+0x48>
    if(e_25LCxx_basic_get_wip_status())                                                     /**< check write in progress status */
    110e:	4b08      	ldr	r3, [pc, #32]	; (1130 <e_25LCxx_basic_erase_sector+0x80>)
    1110:	4798      	blx	r3
    1112:	1e05      	subs	r5, r0, #0
    1114:	d0f0      	beq.n	10f8 <e_25LCxx_basic_erase_sector+0x48>
        return 1;                                                                           /**< return error */
    1116:	2501      	movs	r5, #1
    1118:	e7ee      	b.n	10f8 <e_25LCxx_basic_erase_sector+0x48>
				return 1;
    111a:	2501      	movs	r5, #1
    111c:	e7ec      	b.n	10f8 <e_25LCxx_basic_erase_sector+0x48>
    111e:	46c0      	nop			; (mov r8, r8)
    1120:	200009e4 	.word	0x200009e4
    1124:	00000a01 	.word	0x00000a01
    1128:	00001025 	.word	0x00001025
    112c:	000006a9 	.word	0x000006a9
    1130:	00000fe1 	.word	0x00000fe1

00001134 <e_25LCxx_basic_get_bp_status>:
 *          - 0 success
 *          - 1 failed
 * @note    none
 */
uint8_t e_25LCxx_basic_get_bp_status(E_25LCxx_block_protection_status_t *pBlock)
{
    1134:	b510      	push	{r4, lr}
    1136:	0001      	movs	r1, r0
    if(E_25LCxx_get_bp_status(&e_25LCxx_handler, (uint8_t *)pBlock) != 0)
    1138:	4803      	ldr	r0, [pc, #12]	; (1148 <e_25LCxx_basic_get_bp_status+0x14>)
    113a:	4b04      	ldr	r3, [pc, #16]	; (114c <e_25LCxx_basic_get_bp_status+0x18>)
    113c:	4798      	blx	r3
    113e:	2800      	cmp	r0, #0
    1140:	d100      	bne.n	1144 <e_25LCxx_basic_get_bp_status+0x10>
    {
        return 1;											 /**< return failed error */
    }
    return 0;                                                /**< return success */

}
    1142:	bd10      	pop	{r4, pc}
        return 1;											 /**< return failed error */
    1144:	2001      	movs	r0, #1
    1146:	e7fc      	b.n	1142 <e_25LCxx_basic_get_bp_status+0xe>
    1148:	200009e4 	.word	0x200009e4
    114c:	0000035d 	.word	0x0000035d

00001150 <e_25LCxx_basic_get_memory_properties>:
 *          - 0 success
 *          - 1 failed
* @note		this routine reads the entire memory, assumes that address that reads 0xff are free
*/
uint8_t e_25LCxx_basic_get_memory_properties(E_25LCxx_max_addr_t *pMemorySize, uint16_t *pFree_space, uint16_t *pUsed_space)
{
    1150:	b5f0      	push	{r4, r5, r6, r7, lr}
    1152:	b083      	sub	sp, #12
    1154:	0007      	movs	r7, r0
    1156:	000e      	movs	r6, r1
    1158:	9201      	str	r2, [sp, #4]
	uint16_t index;
	static uint16_t counter = 0;
	static uint8_t dataRead = 0;

	for(index = 0; index < e_25LCxx_basic_get_eeprom_legth(); index++){
    115a:	2400      	movs	r4, #0
    115c:	e001      	b.n	1162 <e_25LCxx_basic_get_memory_properties+0x12>
    115e:	3401      	adds	r4, #1
    1160:	b2a4      	uxth	r4, r4
    1162:	4b12      	ldr	r3, [pc, #72]	; (11ac <e_25LCxx_basic_get_memory_properties+0x5c>)
    1164:	4798      	blx	r3
    1166:	4284      	cmp	r4, r0
    1168:	d210      	bcs.n	118c <e_25LCxx_basic_get_memory_properties+0x3c>
		if(e_25LCxx_basic_read_byte(index, (uint8_t *)&dataRead, 1) != 0){
    116a:	2201      	movs	r2, #1
    116c:	4910      	ldr	r1, [pc, #64]	; (11b0 <e_25LCxx_basic_get_memory_properties+0x60>)
    116e:	312a      	adds	r1, #42	; 0x2a
    1170:	0020      	movs	r0, r4
    1172:	4b10      	ldr	r3, [pc, #64]	; (11b4 <e_25LCxx_basic_get_memory_properties+0x64>)
    1174:	4798      	blx	r3
    1176:	2800      	cmp	r0, #0
    1178:	d116      	bne.n	11a8 <e_25LCxx_basic_get_memory_properties+0x58>
			return 1;			/**< failed to read memory address*/
		}
		if(dataRead == 0xff){
    117a:	232a      	movs	r3, #42	; 0x2a
    117c:	4a0c      	ldr	r2, [pc, #48]	; (11b0 <e_25LCxx_basic_get_memory_properties+0x60>)
    117e:	5cd3      	ldrb	r3, [r2, r3]
    1180:	2bff      	cmp	r3, #255	; 0xff
    1182:	d1ec      	bne.n	115e <e_25LCxx_basic_get_memory_properties+0xe>
			counter++;
    1184:	8d93      	ldrh	r3, [r2, #44]	; 0x2c
    1186:	3301      	adds	r3, #1
    1188:	8593      	strh	r3, [r2, #44]	; 0x2c
    118a:	e7e8      	b.n	115e <e_25LCxx_basic_get_memory_properties+0xe>
		}
	}
    *pMemorySize = e_25LCxx_basic_get_eeprom_legth();
    118c:	4d07      	ldr	r5, [pc, #28]	; (11ac <e_25LCxx_basic_get_memory_properties+0x5c>)
    118e:	47a8      	blx	r5
    1190:	8038      	strh	r0, [r7, #0]
	*pFree_space = counter;
    1192:	4c07      	ldr	r4, [pc, #28]	; (11b0 <e_25LCxx_basic_get_memory_properties+0x60>)
    1194:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
    1196:	8033      	strh	r3, [r6, #0]
	*pUsed_space = e_25LCxx_basic_get_eeprom_legth() - counter;
    1198:	47a8      	blx	r5
    119a:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
    119c:	1ac0      	subs	r0, r0, r3
    119e:	9b01      	ldr	r3, [sp, #4]
    11a0:	8018      	strh	r0, [r3, #0]

	return 0;		/**< success */
    11a2:	2000      	movs	r0, #0
}
    11a4:	b003      	add	sp, #12
    11a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
			return 1;			/**< failed to read memory address*/
    11a8:	2001      	movs	r0, #1
    11aa:	e7fb      	b.n	11a4 <e_25LCxx_basic_get_memory_properties+0x54>
    11ac:	00000fb1 	.word	0x00000fb1
    11b0:	200009e4 	.word	0x200009e4
    11b4:	00000f71 	.word	0x00000f71

000011b8 <e_25LCxx_interface_spi_init>:
    /*call your spi initialize function here*/
    /*user code begin */

    /*user code end*/
    return 0;      /**< return success */
}
    11b8:	2000      	movs	r0, #0
    11ba:	4770      	bx	lr

000011bc <e_25LCxx_interface_spi_deinit>:
    /*call your spi deinitialize function here*/
    /*user code begin */

    /*user code end*/
    return 0;      /**< return success */
}
    11bc:	2000      	movs	r0, #0
    11be:	4770      	bx	lr

000011c0 <e_25LCxx_interface_spi_read>:
 *             - 0 success
 *             - 1 read failed
 * @note       none
 */
uint8_t e_25LCxx_interface_spi_read(uint16_t u16Reg, uint32_t *pbuf, uint16_t u16Len)
{
    11c0:	b510      	push	{r4, lr}
    /*call your spi read function here*/
    /*user code begin */
    spi_receive(u16Reg, pbuf, u16Len);
    11c2:	b2d2      	uxtb	r2, r2
    11c4:	4b01      	ldr	r3, [pc, #4]	; (11cc <e_25LCxx_interface_spi_read+0xc>)
    11c6:	4798      	blx	r3
    /*user code end*/
    return 0;      /**< return success */
}
    11c8:	2000      	movs	r0, #0
    11ca:	bd10      	pop	{r4, pc}
    11cc:	00002471 	.word	0x00002471

000011d0 <e_25LCxx_interface_spi_write>:
 *            - 0 success
 *            - 1 write failed
 * @note      none
 */
uint8_t e_25LCxx_interface_spi_write(uint16_t u16Reg, uint32_t *pbuf, uint16_t u16Len)
{
    11d0:	b510      	push	{r4, lr}
    /*call your spi write function here*/
    /*user code begin */
	spi_transmit(u16Reg, pbuf, u16Len);
    11d2:	b2d2      	uxtb	r2, r2
    11d4:	4b01      	ldr	r3, [pc, #4]	; (11dc <e_25LCxx_interface_spi_write+0xc>)
    11d6:	4798      	blx	r3
    /*user code end*/
    return 0;      /**< return success */
}
    11d8:	2000      	movs	r0, #0
    11da:	bd10      	pop	{r4, pc}
    11dc:	00002421 	.word	0x00002421

000011e0 <e_25LCxx_interface_gpio_write>:
    /*call your gpio write function here*/
    /*user code begin */

    /*user code end*/
    return 0;       /**< return success */
}
    11e0:	2000      	movs	r0, #0
    11e2:	4770      	bx	lr

000011e4 <e_25LCxx_interface_chip_select>:
 * @return status code
 *          - 0 success
 *          - 1 failed to write gpio
 */
uint8_t e_25LCxx_interface_chip_select(uint8_t u8State)
{
    11e4:	b510      	push	{r4, lr}
    /*call your spi chip select function here*/
    /*user code begin */
	spi_chip_select(u8State);
    11e6:	4b02      	ldr	r3, [pc, #8]	; (11f0 <e_25LCxx_interface_chip_select+0xc>)
    11e8:	4798      	blx	r3
    /*user code end*/
    return 0;      /**< return success */
}
    11ea:	2000      	movs	r0, #0
    11ec:	bd10      	pop	{r4, pc}
    11ee:	46c0      	nop			; (mov r8, r8)
    11f0:	000024cd 	.word	0x000024cd

000011f4 <e_25LCxx_interface_delay_ms>:
 * @brief  This function interface delay ms
 * @param[in] u32Ms is the time delay in milli seconds
 * @note      none
 */
void e_25LCxx_interface_delay_ms(uint32_t u32Ms)
{
    11f4:	b510      	push	{r4, lr}
    /*call your delay function here*/
    /*user code begin */
     delay_ms(u32Ms);
    11f6:	4b01      	ldr	r3, [pc, #4]	; (11fc <e_25LCxx_interface_delay_ms+0x8>)
    11f8:	4798      	blx	r3
    /*user code end*/

}
    11fa:	bd10      	pop	{r4, pc}
    11fc:	00001541 	.word	0x00001541

00001200 <e_25LCxx_interface_debug_print>:
 * @brief     interface print format data
 * @param[in] fmt is the format data
 * @note      none
 */
void e_25LCxx_interface_debug_print(const char *const fmt, ...)
{
    1200:	b40f      	push	{r0, r1, r2, r3}
    1202:	b570      	push	{r4, r5, r6, lr}
    1204:	b0c2      	sub	sp, #264	; 0x108
    1206:	ac46      	add	r4, sp, #280	; 0x118
    1208:	cc40      	ldmia	r4!, {r6}
#ifdef E_25LCXX_DEBUG_MODE
    volatile char str[256];
    volatile uint8_t len;
    va_list args;

    memset((char *) str, 0, sizeof (char)*256);
    120a:	2580      	movs	r5, #128	; 0x80
    120c:	006d      	lsls	r5, r5, #1
    120e:	002a      	movs	r2, r5
    1210:	2100      	movs	r1, #0
    1212:	a802      	add	r0, sp, #8
    1214:	4b0d      	ldr	r3, [pc, #52]	; (124c <e_25LCxx_interface_debug_print+0x4c>)
    1216:	4798      	blx	r3
    va_start(args, fmt);
    1218:	9400      	str	r4, [sp, #0]
    vsnprintf((char *) str, 256, (char const *) fmt, args);
    121a:	0023      	movs	r3, r4
    121c:	0032      	movs	r2, r6
    121e:	0029      	movs	r1, r5
    1220:	a802      	add	r0, sp, #8
    1222:	4c0b      	ldr	r4, [pc, #44]	; (1250 <e_25LCxx_interface_debug_print+0x50>)
    1224:	47a0      	blx	r4
    va_end(args);

    len = strlen((char *) str);
    1226:	a802      	add	r0, sp, #8
    1228:	4b0a      	ldr	r3, [pc, #40]	; (1254 <e_25LCxx_interface_debug_print+0x54>)
    122a:	4798      	blx	r3
    122c:	b2c0      	uxtb	r0, r0
    122e:	466b      	mov	r3, sp
    1230:	71d8      	strb	r0, [r3, #7]
    print((char *const)str, len);
    1232:	79d9      	ldrb	r1, [r3, #7]
    1234:	b2c9      	uxtb	r1, r1
    1236:	a802      	add	r0, sp, #8
    1238:	4b07      	ldr	r3, [pc, #28]	; (1258 <e_25LCxx_interface_debug_print+0x58>)
    123a:	4798      	blx	r3
    e_25LCxx_interface_delay_ms(10);
    123c:	200a      	movs	r0, #10
    123e:	4b07      	ldr	r3, [pc, #28]	; (125c <e_25LCxx_interface_debug_print+0x5c>)
    1240:	4798      	blx	r3
    /*user code end*/
#endif
}
    1242:	b042      	add	sp, #264	; 0x108
    1244:	bc70      	pop	{r4, r5, r6}
    1246:	bc08      	pop	{r3}
    1248:	b004      	add	sp, #16
    124a:	4718      	bx	r3
    124c:	00005171 	.word	0x00005171
    1250:	00005355 	.word	0x00005355
    1254:	00005205 	.word	0x00005205
    1258:	000023e9 	.word	0x000023e9
    125c:	000011f5 	.word	0x000011f5

00001260 <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
    1260:	b510      	push	{r4, lr}
	system_init();
    1262:	4b01      	ldr	r3, [pc, #4]	; (1268 <atmel_start_init+0x8>)
    1264:	4798      	blx	r3
}
    1266:	bd10      	pop	{r4, pc}
    1268:	000014c1 	.word	0x000014c1

0000126c <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
    126c:	e7fe      	b.n	126c <Dummy_Handler>
	...

00001270 <Reset_Handler>:
{
    1270:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        if (pSrc != pDest) {
    1272:	4a23      	ldr	r2, [pc, #140]	; (1300 <Reset_Handler+0x90>)
    1274:	4b23      	ldr	r3, [pc, #140]	; (1304 <Reset_Handler+0x94>)
    1276:	429a      	cmp	r2, r3
    1278:	d009      	beq.n	128e <Reset_Handler+0x1e>
    127a:	4b22      	ldr	r3, [pc, #136]	; (1304 <Reset_Handler+0x94>)
    127c:	4a20      	ldr	r2, [pc, #128]	; (1300 <Reset_Handler+0x90>)
    127e:	e003      	b.n	1288 <Reset_Handler+0x18>
                        *pDest++ = *pSrc++;
    1280:	6811      	ldr	r1, [r2, #0]
    1282:	6019      	str	r1, [r3, #0]
    1284:	3304      	adds	r3, #4
    1286:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
    1288:	491f      	ldr	r1, [pc, #124]	; (1308 <Reset_Handler+0x98>)
    128a:	428b      	cmp	r3, r1
    128c:	d3f8      	bcc.n	1280 <Reset_Handler+0x10>
                        *pDest++ = *pSrc++;
    128e:	4b1f      	ldr	r3, [pc, #124]	; (130c <Reset_Handler+0x9c>)
    1290:	e002      	b.n	1298 <Reset_Handler+0x28>
                *pDest++ = 0;
    1292:	2200      	movs	r2, #0
    1294:	601a      	str	r2, [r3, #0]
    1296:	3304      	adds	r3, #4
        for (pDest = &_szero; pDest < &_ezero;) {
    1298:	4a1d      	ldr	r2, [pc, #116]	; (1310 <Reset_Handler+0xa0>)
    129a:	4293      	cmp	r3, r2
    129c:	d3f9      	bcc.n	1292 <Reset_Handler+0x22>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
    129e:	4a1d      	ldr	r2, [pc, #116]	; (1314 <Reset_Handler+0xa4>)
    12a0:	21ff      	movs	r1, #255	; 0xff
    12a2:	4b1d      	ldr	r3, [pc, #116]	; (1318 <Reset_Handler+0xa8>)
    12a4:	438b      	bics	r3, r1
    12a6:	6093      	str	r3, [r2, #8]
        SBMATRIX->SFR[SBMATRIX_SLAVE_HMCRAMC0].reg = 2;
    12a8:	39fd      	subs	r1, #253	; 0xfd
    12aa:	2390      	movs	r3, #144	; 0x90
    12ac:	005b      	lsls	r3, r3, #1
    12ae:	4a1b      	ldr	r2, [pc, #108]	; (131c <Reset_Handler+0xac>)
    12b0:	50d1      	str	r1, [r2, r3]
        USB->DEVICE.QOSCTRL.bit.CQOS = 2;
    12b2:	4a1b      	ldr	r2, [pc, #108]	; (1320 <Reset_Handler+0xb0>)
    12b4:	78d3      	ldrb	r3, [r2, #3]
    12b6:	2503      	movs	r5, #3
    12b8:	43ab      	bics	r3, r5
    12ba:	2402      	movs	r4, #2
    12bc:	4323      	orrs	r3, r4
    12be:	70d3      	strb	r3, [r2, #3]
        USB->DEVICE.QOSCTRL.bit.DQOS = 2;
    12c0:	78d3      	ldrb	r3, [r2, #3]
    12c2:	270c      	movs	r7, #12
    12c4:	43bb      	bics	r3, r7
    12c6:	2608      	movs	r6, #8
    12c8:	4333      	orrs	r3, r6
    12ca:	70d3      	strb	r3, [r2, #3]
        DMAC->QOSCTRL.bit.DQOS = 2;
    12cc:	4b15      	ldr	r3, [pc, #84]	; (1324 <Reset_Handler+0xb4>)
    12ce:	7b98      	ldrb	r0, [r3, #14]
    12d0:	2230      	movs	r2, #48	; 0x30
    12d2:	4390      	bics	r0, r2
    12d4:	2220      	movs	r2, #32
    12d6:	4310      	orrs	r0, r2
    12d8:	7398      	strb	r0, [r3, #14]
        DMAC->QOSCTRL.bit.FQOS = 2;
    12da:	7b99      	ldrb	r1, [r3, #14]
    12dc:	43b9      	bics	r1, r7
    12de:	4331      	orrs	r1, r6
    12e0:	7399      	strb	r1, [r3, #14]
        DMAC->QOSCTRL.bit.WRBQOS = 2;
    12e2:	7b9a      	ldrb	r2, [r3, #14]
    12e4:	43aa      	bics	r2, r5
    12e6:	4322      	orrs	r2, r4
    12e8:	739a      	strb	r2, [r3, #14]
        NVMCTRL->CTRLB.bit.MANW = 1;
    12ea:	4a0f      	ldr	r2, [pc, #60]	; (1328 <Reset_Handler+0xb8>)
    12ec:	6851      	ldr	r1, [r2, #4]
    12ee:	2380      	movs	r3, #128	; 0x80
    12f0:	430b      	orrs	r3, r1
    12f2:	6053      	str	r3, [r2, #4]
        __libc_init_array();
    12f4:	4b0d      	ldr	r3, [pc, #52]	; (132c <Reset_Handler+0xbc>)
    12f6:	4798      	blx	r3
        main();
    12f8:	4b0d      	ldr	r3, [pc, #52]	; (1330 <Reset_Handler+0xc0>)
    12fa:	4798      	blx	r3
    12fc:	e7fe      	b.n	12fc <Reset_Handler+0x8c>
    12fe:	46c0      	nop			; (mov r8, r8)
    1300:	0000a2b0 	.word	0x0000a2b0
    1304:	20000000 	.word	0x20000000
    1308:	200009b8 	.word	0x200009b8
    130c:	200009b8 	.word	0x200009b8
    1310:	20000b60 	.word	0x20000b60
    1314:	e000ed00 	.word	0xe000ed00
    1318:	00000000 	.word	0x00000000
    131c:	41007000 	.word	0x41007000
    1320:	41005000 	.word	0x41005000
    1324:	41004800 	.word	0x41004800
    1328:	41004000 	.word	0x41004000
    132c:	000050a5 	.word	0x000050a5
    1330:	000021bd 	.word	0x000021bd

00001334 <SPI_0_PORT_init>:
struct usart_async_descriptor USART_0;

static uint8_t USART_0_buffer[USART_0_BUFFER_SIZE];

void SPI_0_PORT_init(void)
{
    1334:	b5f0      	push	{r4, r5, r6, r7, lr}
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = ~data;
}

static inline void hri_port_clear_OUT_reg(const void *const hw, uint8_t submodule_index, hri_port_out_reg_t mask)
{
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1336:	24c0      	movs	r4, #192	; 0xc0
    1338:	05e4      	lsls	r4, r4, #23
    133a:	2310      	movs	r3, #16
    133c:	6163      	str	r3, [r4, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    133e:	60a3      	str	r3, [r4, #8]

static inline void hri_port_write_WRCONFIG_reg(const void *const hw, uint8_t submodule_index,
                                               hri_port_wrconfig_reg_t data)
{
	PORT_CRITICAL_SECTION_ENTER();
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1340:	4b21      	ldr	r3, [pc, #132]	; (13c8 <SPI_0_PORT_init+0x94>)
    1342:	4a22      	ldr	r2, [pc, #136]	; (13cc <SPI_0_PORT_init+0x98>)
    1344:	629a      	str	r2, [r3, #40]	; 0x28
    1346:	20c0      	movs	r0, #192	; 0xc0
    1348:	0600      	lsls	r0, r0, #24
    134a:	6298      	str	r0, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    134c:	2144      	movs	r1, #68	; 0x44
    134e:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1350:	2501      	movs	r5, #1
    1352:	46ac      	mov	ip, r5
    1354:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1356:	2701      	movs	r7, #1
    1358:	433a      	orrs	r2, r7
    135a:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    135c:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    135e:	3912      	subs	r1, #18
    1360:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    1362:	350e      	adds	r5, #14
    1364:	43aa      	bics	r2, r5
	tmp |= PORT_PMUX_PMUXE(data);
    1366:	2503      	movs	r5, #3
    1368:	432a      	orrs	r2, r5
    136a:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    136c:	545a      	strb	r2, [r3, r1]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    136e:	2220      	movs	r2, #32
    1370:	6162      	str	r2, [r4, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1372:	60a2      	str	r2, [r4, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1374:	4a16      	ldr	r2, [pc, #88]	; (13d0 <SPI_0_PORT_init+0x9c>)
    1376:	629a      	str	r2, [r3, #40]	; 0x28
    1378:	6298      	str	r0, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    137a:	2045      	movs	r0, #69	; 0x45
    137c:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    137e:	4665      	mov	r5, ip
    1380:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1382:	433a      	orrs	r2, r7
    1384:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1386:	541a      	strb	r2, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1388:	5c58      	ldrb	r0, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    138a:	260f      	movs	r6, #15
    138c:	4030      	ands	r0, r6
	tmp |= PORT_PMUX_PMUXO(data);
    138e:	2530      	movs	r5, #48	; 0x30
    1390:	4328      	orrs	r0, r5
    1392:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1394:	5458      	strb	r0, [r3, r1]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1396:	2280      	movs	r2, #128	; 0x80
    1398:	6062      	str	r2, [r4, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    139a:	4a0e      	ldr	r2, [pc, #56]	; (13d4 <SPI_0_PORT_init+0xa0>)
    139c:	629a      	str	r2, [r3, #40]	; 0x28
    139e:	4a0e      	ldr	r2, [pc, #56]	; (13d8 <SPI_0_PORT_init+0xa4>)
    13a0:	629a      	str	r2, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    13a2:	2247      	movs	r2, #71	; 0x47
    13a4:	5c99      	ldrb	r1, [r3, r2]
    13a6:	2004      	movs	r0, #4
    13a8:	4381      	bics	r1, r0
    13aa:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    13ac:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    13ae:	4660      	mov	r0, ip
    13b0:	4381      	bics	r1, r0
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    13b2:	4339      	orrs	r1, r7
    13b4:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    13b6:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    13b8:	2133      	movs	r1, #51	; 0x33
    13ba:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    13bc:	4032      	ands	r2, r6
	tmp |= PORT_PMUX_PMUXO(data);
    13be:	432a      	orrs	r2, r5
    13c0:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    13c2:	545a      	strb	r2, [r3, r1]
	                       // <GPIO_PULL_UP"> Pull-up
	                       // <GPIO_PULL_DOWN"> Pull-down
	                       GPIO_PULL_OFF);

	gpio_set_pin_function(PA07, PINMUX_PA07D_SERCOM0_PAD3);
}
    13c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    13c6:	46c0      	nop			; (mov r8, r8)
    13c8:	41004400 	.word	0x41004400
    13cc:	40000010 	.word	0x40000010
    13d0:	40000020 	.word	0x40000020
    13d4:	40020080 	.word	0x40020080
    13d8:	c0020000 	.word	0xc0020000

000013dc <SPI_0_CLOCK_init>:
			peripheral = (uint32_t)_pm_get_apbb_index(module);
			PM->APBBMASK.reg |= 1 << peripheral;
		}
		break;
	case PM_BUS_APBC:
		PM->APBCMASK.reg |= 1 << peripheral;
    13dc:	4a04      	ldr	r2, [pc, #16]	; (13f0 <SPI_0_CLOCK_init+0x14>)
    13de:	6a13      	ldr	r3, [r2, #32]
    13e0:	2104      	movs	r1, #4
    13e2:	430b      	orrs	r3, r1
    13e4:	6213      	str	r3, [r2, #32]
}

static inline void hri_gclk_write_CLKCTRL_reg(const void *const hw, hri_gclk_clkctrl_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->CLKCTRL.reg = data;
    13e6:	4a03      	ldr	r2, [pc, #12]	; (13f4 <SPI_0_CLOCK_init+0x18>)
    13e8:	4b03      	ldr	r3, [pc, #12]	; (13f8 <SPI_0_CLOCK_init+0x1c>)
    13ea:	805a      	strh	r2, [r3, #2]

void SPI_0_CLOCK_init(void)
{
	_pm_enable_bus_clock(PM_BUS_APBC, SERCOM0);
	_gclk_enable_channel(SERCOM0_GCLK_ID_CORE, CONF_GCLK_SERCOM0_CORE_SRC);
}
    13ec:	4770      	bx	lr
    13ee:	46c0      	nop			; (mov r8, r8)
    13f0:	40000400 	.word	0x40000400
    13f4:	00004014 	.word	0x00004014
    13f8:	40000c00 	.word	0x40000c00

000013fc <SPI_0_init>:

void SPI_0_init(void)
{
    13fc:	b510      	push	{r4, lr}
	SPI_0_CLOCK_init();
    13fe:	4b04      	ldr	r3, [pc, #16]	; (1410 <SPI_0_init+0x14>)
    1400:	4798      	blx	r3
	spi_m_sync_init(&SPI_0, SERCOM0);
    1402:	4904      	ldr	r1, [pc, #16]	; (1414 <SPI_0_init+0x18>)
    1404:	4804      	ldr	r0, [pc, #16]	; (1418 <SPI_0_init+0x1c>)
    1406:	4b05      	ldr	r3, [pc, #20]	; (141c <SPI_0_init+0x20>)
    1408:	4798      	blx	r3
	SPI_0_PORT_init();
    140a:	4b05      	ldr	r3, [pc, #20]	; (1420 <SPI_0_init+0x24>)
    140c:	4798      	blx	r3
}
    140e:	bd10      	pop	{r4, pc}
    1410:	000013dd 	.word	0x000013dd
    1414:	42000800 	.word	0x42000800
    1418:	20000a64 	.word	0x20000a64
    141c:	000015d1 	.word	0x000015d1
    1420:	00001335 	.word	0x00001335

00001424 <USART_0_CLOCK_init>:
    1424:	4a04      	ldr	r2, [pc, #16]	; (1438 <USART_0_CLOCK_init+0x14>)
    1426:	6a13      	ldr	r3, [r2, #32]
    1428:	2180      	movs	r1, #128	; 0x80
    142a:	430b      	orrs	r3, r1
    142c:	6213      	str	r3, [r2, #32]
    142e:	4a03      	ldr	r2, [pc, #12]	; (143c <USART_0_CLOCK_init+0x18>)
    1430:	4b03      	ldr	r3, [pc, #12]	; (1440 <USART_0_CLOCK_init+0x1c>)
    1432:	805a      	strh	r2, [r3, #2]
void USART_0_CLOCK_init()
{

	_pm_enable_bus_clock(PM_BUS_APBC, SERCOM5);
	_gclk_enable_channel(SERCOM5_GCLK_ID_CORE, CONF_GCLK_SERCOM5_CORE_SRC);
}
    1434:	4770      	bx	lr
    1436:	46c0      	nop			; (mov r8, r8)
    1438:	40000400 	.word	0x40000400
    143c:	00004019 	.word	0x00004019
    1440:	40000c00 	.word	0x40000c00

00001444 <USART_0_PORT_init>:
 * \brief USART pinmux initialization function
 *
 * Set each required pin to USART functionality
 */
void USART_0_PORT_init()
{
    1444:	b530      	push	{r4, r5, lr}
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1446:	4b0f      	ldr	r3, [pc, #60]	; (1484 <USART_0_PORT_init+0x40>)
    1448:	22c2      	movs	r2, #194	; 0xc2
    144a:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    144c:	2501      	movs	r5, #1
    144e:	43a9      	bics	r1, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1450:	2401      	movs	r4, #1
    1452:	4321      	orrs	r1, r4
    1454:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1456:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1458:	20b1      	movs	r0, #177	; 0xb1
    145a:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    145c:	3ab3      	subs	r2, #179	; 0xb3
    145e:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
    1460:	2203      	movs	r2, #3
    1462:	4311      	orrs	r1, r2
    1464:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1466:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1468:	21c3      	movs	r1, #195	; 0xc3
    146a:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
    146c:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    146e:	4322      	orrs	r2, r4
    1470:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1472:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1474:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    1476:	39b4      	subs	r1, #180	; 0xb4
    1478:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
    147a:	2130      	movs	r1, #48	; 0x30
    147c:	430a      	orrs	r2, r1
    147e:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1480:	541a      	strb	r2, [r3, r0]

	gpio_set_pin_function(PB02, PINMUX_PB02D_SERCOM5_PAD0);

	gpio_set_pin_function(PB03, PINMUX_PB03D_SERCOM5_PAD1);
}
    1482:	bd30      	pop	{r4, r5, pc}
    1484:	41004400 	.word	0x41004400

00001488 <USART_0_init>:
 * \brief USART initialization function
 *
 * Enables USART peripheral, clocks and initializes USART driver
 */
void USART_0_init(void)
{
    1488:	b510      	push	{r4, lr}
    148a:	b082      	sub	sp, #8
	USART_0_CLOCK_init();
    148c:	4b06      	ldr	r3, [pc, #24]	; (14a8 <USART_0_init+0x20>)
    148e:	4798      	blx	r3
	usart_async_init(&USART_0, SERCOM5, USART_0_buffer, USART_0_BUFFER_SIZE, (void *)NULL);
    1490:	2300      	movs	r3, #0
    1492:	9300      	str	r3, [sp, #0]
    1494:	3310      	adds	r3, #16
    1496:	4a05      	ldr	r2, [pc, #20]	; (14ac <USART_0_init+0x24>)
    1498:	4905      	ldr	r1, [pc, #20]	; (14b0 <USART_0_init+0x28>)
    149a:	4806      	ldr	r0, [pc, #24]	; (14b4 <USART_0_init+0x2c>)
    149c:	4c06      	ldr	r4, [pc, #24]	; (14b8 <USART_0_init+0x30>)
    149e:	47a0      	blx	r4
	USART_0_PORT_init();
    14a0:	4b06      	ldr	r3, [pc, #24]	; (14bc <USART_0_init+0x34>)
    14a2:	4798      	blx	r3
}
    14a4:	b002      	add	sp, #8
    14a6:	bd10      	pop	{r4, pc}
    14a8:	00001425 	.word	0x00001425
    14ac:	20000a14 	.word	0x20000a14
    14b0:	42001c00 	.word	0x42001c00
    14b4:	20000a7c 	.word	0x20000a7c
    14b8:	000018ad 	.word	0x000018ad
    14bc:	00001445 	.word	0x00001445

000014c0 <system_init>:

void system_init(void)
{
    14c0:	b510      	push	{r4, lr}
 * Currently the following initialization functions are supported:
 *  - System clock initialization
 */
static inline void init_mcu(void)
{
	_init_chip();
    14c2:	4b12      	ldr	r3, [pc, #72]	; (150c <system_init+0x4c>)
    14c4:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    14c6:	22c0      	movs	r2, #192	; 0xc0
    14c8:	05d2      	lsls	r2, r2, #23
    14ca:	2340      	movs	r3, #64	; 0x40
    14cc:	6153      	str	r3, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    14ce:	6093      	str	r3, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    14d0:	4b0f      	ldr	r3, [pc, #60]	; (1510 <system_init+0x50>)
    14d2:	4910      	ldr	r1, [pc, #64]	; (1514 <system_init+0x54>)
    14d4:	6299      	str	r1, [r3, #40]	; 0x28
    14d6:	21c0      	movs	r1, #192	; 0xc0
    14d8:	0609      	lsls	r1, r1, #24
    14da:	6299      	str	r1, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    14dc:	2446      	movs	r4, #70	; 0x46
    14de:	5d19      	ldrb	r1, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    14e0:	2001      	movs	r0, #1
    14e2:	4381      	bics	r1, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    14e4:	5519      	strb	r1, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    14e6:	2180      	movs	r1, #128	; 0x80
    14e8:	0389      	lsls	r1, r1, #14
    14ea:	6151      	str	r1, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    14ec:	6091      	str	r1, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    14ee:	2280      	movs	r2, #128	; 0x80
    14f0:	05d2      	lsls	r2, r2, #23
    14f2:	629a      	str	r2, [r3, #40]	; 0x28
    14f4:	4a08      	ldr	r2, [pc, #32]	; (1518 <system_init+0x58>)
    14f6:	629a      	str	r2, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    14f8:	2155      	movs	r1, #85	; 0x55
    14fa:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
    14fc:	4382      	bics	r2, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    14fe:	545a      	strb	r2, [r3, r1]
	// Set pin direction to output
	gpio_set_pin_direction(led_blue, GPIO_DIRECTION_OUT);

	gpio_set_pin_function(led_blue, GPIO_PIN_FUNCTION_OFF);

	SPI_0_init();
    1500:	4b06      	ldr	r3, [pc, #24]	; (151c <system_init+0x5c>)
    1502:	4798      	blx	r3
	USART_0_init();
    1504:	4b06      	ldr	r3, [pc, #24]	; (1520 <system_init+0x60>)
    1506:	4798      	blx	r3
}
    1508:	bd10      	pop	{r4, pc}
    150a:	46c0      	nop			; (mov r8, r8)
    150c:	00001af5 	.word	0x00001af5
    1510:	41004400 	.word	0x41004400
    1514:	40000040 	.word	0x40000040
    1518:	c0000020 	.word	0xc0000020
    151c:	000013fd 	.word	0x000013fd
    1520:	00001489 	.word	0x00001489

00001524 <atomic_enter_critical>:
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
    1524:	f3ef 8310 	mrs	r3, PRIMASK
/**
 * \brief Disable interrupts, enter critical section
 */
void atomic_enter_critical(hal_atomic_t volatile *atomic)
{
	*atomic = __get_PRIMASK();
    1528:	6003      	str	r3, [r0, #0]
  __ASM volatile ("cpsid i" : : : "memory");
    152a:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
    152c:	f3bf 8f5f 	dmb	sy
	__disable_irq();
	__DMB();
}
    1530:	4770      	bx	lr

00001532 <atomic_leave_critical>:
    1532:	f3bf 8f5f 	dmb	sy
 * \brief Exit atomic section
 */
void atomic_leave_critical(hal_atomic_t volatile *atomic)
{
	__DMB();
	__set_PRIMASK(*atomic);
    1536:	6803      	ldr	r3, [r0, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
    1538:	f383 8810 	msr	PRIMASK, r3
}
    153c:	4770      	bx	lr
	...

00001540 <delay_ms>:

/**
 * \brief Perform delay in ms
 */
void delay_ms(const uint16_t ms)
{
    1540:	b510      	push	{r4, lr}
	_delay_cycles(hardware, _get_cycles_for_ms(ms));
    1542:	4b04      	ldr	r3, [pc, #16]	; (1554 <delay_ms+0x14>)
    1544:	681c      	ldr	r4, [r3, #0]
    1546:	4b04      	ldr	r3, [pc, #16]	; (1558 <delay_ms+0x18>)
    1548:	4798      	blx	r3
    154a:	0001      	movs	r1, r0
    154c:	0020      	movs	r0, r4
    154e:	4b03      	ldr	r3, [pc, #12]	; (155c <delay_ms+0x1c>)
    1550:	4798      	blx	r3
}
    1552:	bd10      	pop	{r4, pc}
    1554:	20000a24 	.word	0x20000a24
    1558:	00001acd 	.word	0x00001acd
    155c:	00001aed 	.word	0x00001aed

00001560 <io_write>:

/**
 * \brief I/O write interface
 */
int32_t io_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
    1560:	b570      	push	{r4, r5, r6, lr}
    1562:	0004      	movs	r4, r0
    1564:	000d      	movs	r5, r1
    1566:	0016      	movs	r6, r2
	ASSERT(io_descr && buf);
    1568:	2800      	cmp	r0, #0
    156a:	d00e      	beq.n	158a <io_write+0x2a>
    156c:	2900      	cmp	r1, #0
    156e:	d00a      	beq.n	1586 <io_write+0x26>
    1570:	2001      	movs	r0, #1
    1572:	2234      	movs	r2, #52	; 0x34
    1574:	4906      	ldr	r1, [pc, #24]	; (1590 <io_write+0x30>)
    1576:	4b07      	ldr	r3, [pc, #28]	; (1594 <io_write+0x34>)
    1578:	4798      	blx	r3
	return io_descr->write(io_descr, buf, length);
    157a:	6823      	ldr	r3, [r4, #0]
    157c:	0032      	movs	r2, r6
    157e:	0029      	movs	r1, r5
    1580:	0020      	movs	r0, r4
    1582:	4798      	blx	r3
}
    1584:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(io_descr && buf);
    1586:	2000      	movs	r0, #0
    1588:	e7f3      	b.n	1572 <io_write+0x12>
    158a:	2000      	movs	r0, #0
    158c:	e7f1      	b.n	1572 <io_write+0x12>
    158e:	46c0      	nop			; (mov r8, r8)
    1590:	00009b30 	.word	0x00009b30
    1594:	000019a5 	.word	0x000019a5

00001598 <io_read>:

/**
 * \brief I/O read interface
 */
int32_t io_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
    1598:	b570      	push	{r4, r5, r6, lr}
    159a:	0004      	movs	r4, r0
    159c:	000d      	movs	r5, r1
    159e:	0016      	movs	r6, r2
	ASSERT(io_descr && buf);
    15a0:	2800      	cmp	r0, #0
    15a2:	d00e      	beq.n	15c2 <io_read+0x2a>
    15a4:	2900      	cmp	r1, #0
    15a6:	d00a      	beq.n	15be <io_read+0x26>
    15a8:	2001      	movs	r0, #1
    15aa:	223d      	movs	r2, #61	; 0x3d
    15ac:	4906      	ldr	r1, [pc, #24]	; (15c8 <io_read+0x30>)
    15ae:	4b07      	ldr	r3, [pc, #28]	; (15cc <io_read+0x34>)
    15b0:	4798      	blx	r3
	return io_descr->read(io_descr, buf, length);
    15b2:	6863      	ldr	r3, [r4, #4]
    15b4:	0032      	movs	r2, r6
    15b6:	0029      	movs	r1, r5
    15b8:	0020      	movs	r0, r4
    15ba:	4798      	blx	r3
}
    15bc:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(io_descr && buf);
    15be:	2000      	movs	r0, #0
    15c0:	e7f3      	b.n	15aa <io_read+0x12>
    15c2:	2000      	movs	r0, #0
    15c4:	e7f1      	b.n	15aa <io_read+0x12>
    15c6:	46c0      	nop			; (mov r8, r8)
    15c8:	00009b30 	.word	0x00009b30
    15cc:	000019a5 	.word	0x000019a5

000015d0 <spi_m_sync_init>:
	ASSERT(spi);
	spi->func = (struct _spi_m_sync_hpl_interface *)func;
}

int32_t spi_m_sync_init(struct spi_m_sync_descriptor *spi, void *const hw)
{
    15d0:	b570      	push	{r4, r5, r6, lr}
    15d2:	0004      	movs	r4, r0
    15d4:	000d      	movs	r5, r1
	int32_t rc = 0;
	ASSERT(spi && hw);
    15d6:	2800      	cmp	r0, #0
    15d8:	d017      	beq.n	160a <spi_m_sync_init+0x3a>
    15da:	2900      	cmp	r1, #0
    15dc:	d013      	beq.n	1606 <spi_m_sync_init+0x36>
    15de:	2001      	movs	r0, #1
    15e0:	2240      	movs	r2, #64	; 0x40
    15e2:	490b      	ldr	r1, [pc, #44]	; (1610 <spi_m_sync_init+0x40>)
    15e4:	4b0b      	ldr	r3, [pc, #44]	; (1614 <spi_m_sync_init+0x44>)
    15e6:	4798      	blx	r3
	spi->dev.prvt = (void *)hw;
    15e8:	6065      	str	r5, [r4, #4]
	rc            = _spi_m_sync_init(&spi->dev, hw);
    15ea:	1d20      	adds	r0, r4, #4
    15ec:	0029      	movs	r1, r5
    15ee:	4b0a      	ldr	r3, [pc, #40]	; (1618 <spi_m_sync_init+0x48>)
    15f0:	4798      	blx	r3

	if (rc < 0) {
    15f2:	2800      	cmp	r0, #0
    15f4:	db06      	blt.n	1604 <spi_m_sync_init+0x34>
		return rc;
	}

	spi->flags    = SPI_DEACTIVATE_NEXT;
    15f6:	4b09      	ldr	r3, [pc, #36]	; (161c <spi_m_sync_init+0x4c>)
    15f8:	82a3      	strh	r3, [r4, #20]
	spi->io.read  = _spi_m_sync_io_read;
    15fa:	4b09      	ldr	r3, [pc, #36]	; (1620 <spi_m_sync_init+0x50>)
    15fc:	6123      	str	r3, [r4, #16]
	spi->io.write = _spi_m_sync_io_write;
    15fe:	4b09      	ldr	r3, [pc, #36]	; (1624 <spi_m_sync_init+0x54>)
    1600:	60e3      	str	r3, [r4, #12]

	return ERR_NONE;
    1602:	2000      	movs	r0, #0
}
    1604:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(spi && hw);
    1606:	2000      	movs	r0, #0
    1608:	e7ea      	b.n	15e0 <spi_m_sync_init+0x10>
    160a:	2000      	movs	r0, #0
    160c:	e7e8      	b.n	15e0 <spi_m_sync_init+0x10>
    160e:	46c0      	nop			; (mov r8, r8)
    1610:	00009b44 	.word	0x00009b44
    1614:	000019a5 	.word	0x000019a5
    1618:	00001e21 	.word	0x00001e21
    161c:	ffff8000 	.word	0xffff8000
    1620:	000016d5 	.word	0x000016d5
    1624:	00001699 	.word	0x00001699

00001628 <spi_m_sync_enable>:
	ASSERT(spi);
	_spi_m_sync_deinit(&spi->dev);
}

void spi_m_sync_enable(struct spi_m_sync_descriptor *spi)
{
    1628:	b510      	push	{r4, lr}
    162a:	0004      	movs	r4, r0
	ASSERT(spi);
    162c:	1e43      	subs	r3, r0, #1
    162e:	4198      	sbcs	r0, r3
    1630:	b2c0      	uxtb	r0, r0
    1632:	2257      	movs	r2, #87	; 0x57
    1634:	4903      	ldr	r1, [pc, #12]	; (1644 <spi_m_sync_enable+0x1c>)
    1636:	4b04      	ldr	r3, [pc, #16]	; (1648 <spi_m_sync_enable+0x20>)
    1638:	4798      	blx	r3
	_spi_m_sync_enable(&spi->dev);
    163a:	1d20      	adds	r0, r4, #4
    163c:	4b03      	ldr	r3, [pc, #12]	; (164c <spi_m_sync_enable+0x24>)
    163e:	4798      	blx	r3
}
    1640:	bd10      	pop	{r4, pc}
    1642:	46c0      	nop			; (mov r8, r8)
    1644:	00009b44 	.word	0x00009b44
    1648:	000019a5 	.word	0x000019a5
    164c:	0000201d 	.word	0x0000201d

00001650 <spi_m_sync_transfer>:

	return spi_m_sync_transfer(spi, &xfer);
}

int32_t spi_m_sync_transfer(struct spi_m_sync_descriptor *spi, const struct spi_xfer *p_xfer)
{
    1650:	b530      	push	{r4, r5, lr}
    1652:	b087      	sub	sp, #28
    1654:	0004      	movs	r4, r0
    1656:	000d      	movs	r5, r1
	struct spi_msg msg;

	ASSERT(spi && p_xfer);
    1658:	2800      	cmp	r0, #0
    165a:	d015      	beq.n	1688 <spi_m_sync_transfer+0x38>
    165c:	2900      	cmp	r1, #0
    165e:	d011      	beq.n	1684 <spi_m_sync_transfer+0x34>
    1660:	2001      	movs	r0, #1
    1662:	22b3      	movs	r2, #179	; 0xb3
    1664:	4909      	ldr	r1, [pc, #36]	; (168c <spi_m_sync_transfer+0x3c>)
    1666:	4b0a      	ldr	r3, [pc, #40]	; (1690 <spi_m_sync_transfer+0x40>)
    1668:	4798      	blx	r3

	msg.txbuf = p_xfer->txbuf;
    166a:	682b      	ldr	r3, [r5, #0]
    166c:	9303      	str	r3, [sp, #12]
	msg.rxbuf = p_xfer->rxbuf;
    166e:	686b      	ldr	r3, [r5, #4]
    1670:	9304      	str	r3, [sp, #16]
	msg.size  = p_xfer->size;
    1672:	68ab      	ldr	r3, [r5, #8]
    1674:	9301      	str	r3, [sp, #4]
    1676:	9305      	str	r3, [sp, #20]
	return _spi_m_sync_trans(&spi->dev, &msg);
    1678:	1d20      	adds	r0, r4, #4
    167a:	a903      	add	r1, sp, #12
    167c:	4b05      	ldr	r3, [pc, #20]	; (1694 <spi_m_sync_transfer+0x44>)
    167e:	4798      	blx	r3
}
    1680:	b007      	add	sp, #28
    1682:	bd30      	pop	{r4, r5, pc}
	ASSERT(spi && p_xfer);
    1684:	2000      	movs	r0, #0
    1686:	e7ec      	b.n	1662 <spi_m_sync_transfer+0x12>
    1688:	2000      	movs	r0, #0
    168a:	e7ea      	b.n	1662 <spi_m_sync_transfer+0x12>
    168c:	00009b44 	.word	0x00009b44
    1690:	000019a5 	.word	0x000019a5
    1694:	00002055 	.word	0x00002055

00001698 <_spi_m_sync_io_write>:
{
    1698:	b570      	push	{r4, r5, r6, lr}
    169a:	b084      	sub	sp, #16
    169c:	0004      	movs	r4, r0
    169e:	000e      	movs	r6, r1
    16a0:	0015      	movs	r5, r2
	ASSERT(io);
    16a2:	1e43      	subs	r3, r0, #1
    16a4:	4198      	sbcs	r0, r3
    16a6:	b2c0      	uxtb	r0, r0
    16a8:	22a3      	movs	r2, #163	; 0xa3
    16aa:	4907      	ldr	r1, [pc, #28]	; (16c8 <_spi_m_sync_io_write+0x30>)
    16ac:	4b07      	ldr	r3, [pc, #28]	; (16cc <_spi_m_sync_io_write+0x34>)
    16ae:	4798      	blx	r3
	struct spi_m_sync_descriptor *spi = CONTAINER_OF(io, struct spi_m_sync_descriptor, io);
    16b0:	0020      	movs	r0, r4
    16b2:	380c      	subs	r0, #12
	xfer.rxbuf = 0;
    16b4:	2300      	movs	r3, #0
    16b6:	9302      	str	r3, [sp, #8]
	xfer.txbuf = (uint8_t *)buf;
    16b8:	9601      	str	r6, [sp, #4]
	xfer.size  = length;
    16ba:	9503      	str	r5, [sp, #12]
	return spi_m_sync_transfer(spi, &xfer);
    16bc:	a901      	add	r1, sp, #4
    16be:	4b04      	ldr	r3, [pc, #16]	; (16d0 <_spi_m_sync_io_write+0x38>)
    16c0:	4798      	blx	r3
}
    16c2:	b004      	add	sp, #16
    16c4:	bd70      	pop	{r4, r5, r6, pc}
    16c6:	46c0      	nop			; (mov r8, r8)
    16c8:	00009b44 	.word	0x00009b44
    16cc:	000019a5 	.word	0x000019a5
    16d0:	00001651 	.word	0x00001651

000016d4 <_spi_m_sync_io_read>:
{
    16d4:	b570      	push	{r4, r5, r6, lr}
    16d6:	b084      	sub	sp, #16
    16d8:	0004      	movs	r4, r0
    16da:	000e      	movs	r6, r1
    16dc:	0015      	movs	r5, r2
	ASSERT(io);
    16de:	1e43      	subs	r3, r0, #1
    16e0:	4198      	sbcs	r0, r3
    16e2:	b2c0      	uxtb	r0, r0
    16e4:	2287      	movs	r2, #135	; 0x87
    16e6:	4907      	ldr	r1, [pc, #28]	; (1704 <_spi_m_sync_io_read+0x30>)
    16e8:	4b07      	ldr	r3, [pc, #28]	; (1708 <_spi_m_sync_io_read+0x34>)
    16ea:	4798      	blx	r3
	struct spi_m_sync_descriptor *spi = CONTAINER_OF(io, struct spi_m_sync_descriptor, io);
    16ec:	0020      	movs	r0, r4
    16ee:	380c      	subs	r0, #12
	xfer.rxbuf = buf;
    16f0:	9602      	str	r6, [sp, #8]
	xfer.txbuf = 0;
    16f2:	2300      	movs	r3, #0
    16f4:	9301      	str	r3, [sp, #4]
	xfer.size  = length;
    16f6:	9503      	str	r5, [sp, #12]
	return spi_m_sync_transfer(spi, &xfer);
    16f8:	a901      	add	r1, sp, #4
    16fa:	4b04      	ldr	r3, [pc, #16]	; (170c <_spi_m_sync_io_read+0x38>)
    16fc:	4798      	blx	r3
}
    16fe:	b004      	add	sp, #16
    1700:	bd70      	pop	{r4, r5, r6, pc}
    1702:	46c0      	nop			; (mov r8, r8)
    1704:	00009b44 	.word	0x00009b44
    1708:	000019a5 	.word	0x000019a5
    170c:	00001651 	.word	0x00001651

00001710 <spi_m_sync_get_io_descriptor>:

int32_t spi_m_sync_get_io_descriptor(struct spi_m_sync_descriptor *const spi, struct io_descriptor **io)
{
    1710:	b570      	push	{r4, r5, r6, lr}
    1712:	0004      	movs	r4, r0
    1714:	000d      	movs	r5, r1
	ASSERT(spi && io);
    1716:	2800      	cmp	r0, #0
    1718:	d00c      	beq.n	1734 <spi_m_sync_get_io_descriptor+0x24>
    171a:	2900      	cmp	r1, #0
    171c:	d008      	beq.n	1730 <spi_m_sync_get_io_descriptor+0x20>
    171e:	2001      	movs	r0, #1
    1720:	22bd      	movs	r2, #189	; 0xbd
    1722:	4905      	ldr	r1, [pc, #20]	; (1738 <spi_m_sync_get_io_descriptor+0x28>)
    1724:	4b05      	ldr	r3, [pc, #20]	; (173c <spi_m_sync_get_io_descriptor+0x2c>)
    1726:	4798      	blx	r3
	*io = &spi->io;
    1728:	340c      	adds	r4, #12
    172a:	602c      	str	r4, [r5, #0]
	return 0;
}
    172c:	2000      	movs	r0, #0
    172e:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(spi && io);
    1730:	2000      	movs	r0, #0
    1732:	e7f5      	b.n	1720 <spi_m_sync_get_io_descriptor+0x10>
    1734:	2000      	movs	r0, #0
    1736:	e7f3      	b.n	1720 <spi_m_sync_get_io_descriptor+0x10>
    1738:	00009b44 	.word	0x00009b44
    173c:	000019a5 	.word	0x000019a5

00001740 <usart_transmission_complete>:
 * \brief Process completion of data sending
 *
 * \param[in] device The pointer to device structure
 */
static void usart_transmission_complete(struct _usart_async_device *device)
{
    1740:	b510      	push	{r4, lr}
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
    1742:	3808      	subs	r0, #8

	descr->stat = 0;
    1744:	2300      	movs	r3, #0
    1746:	6303      	str	r3, [r0, #48]	; 0x30
	if (descr->usart_cb.tx_done) {
    1748:	6a43      	ldr	r3, [r0, #36]	; 0x24
    174a:	2b00      	cmp	r3, #0
    174c:	d000      	beq.n	1750 <usart_transmission_complete+0x10>
		descr->usart_cb.tx_done(descr);
    174e:	4798      	blx	r3
	}
}
    1750:	bd10      	pop	{r4, pc}

00001752 <usart_error>:
 * \brief Process error interrupt
 *
 * \param[in] device The pointer to device structure
 */
static void usart_error(struct _usart_async_device *device)
{
    1752:	b510      	push	{r4, lr}
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
    1754:	3808      	subs	r0, #8

	descr->stat = 0;
    1756:	2300      	movs	r3, #0
    1758:	6303      	str	r3, [r0, #48]	; 0x30
	if (descr->usart_cb.error) {
    175a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    175c:	2b00      	cmp	r3, #0
    175e:	d000      	beq.n	1762 <usart_error+0x10>
		descr->usart_cb.error(descr);
    1760:	4798      	blx	r3
	}
}
    1762:	bd10      	pop	{r4, pc}

00001764 <usart_fill_rx_buffer>:
{
    1764:	b510      	push	{r4, lr}
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
    1766:	0004      	movs	r4, r0
	ringbuffer_put(&descr->rx, data);
    1768:	302c      	adds	r0, #44	; 0x2c
    176a:	4b04      	ldr	r3, [pc, #16]	; (177c <usart_fill_rx_buffer+0x18>)
    176c:	4798      	blx	r3
	if (descr->usart_cb.rx_done) {
    176e:	6a23      	ldr	r3, [r4, #32]
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
    1770:	3c08      	subs	r4, #8
	if (descr->usart_cb.rx_done) {
    1772:	2b00      	cmp	r3, #0
    1774:	d001      	beq.n	177a <usart_fill_rx_buffer+0x16>
		descr->usart_cb.rx_done(descr);
    1776:	0020      	movs	r0, r4
    1778:	4798      	blx	r3
}
    177a:	bd10      	pop	{r4, pc}
    177c:	00001a45 	.word	0x00001a45

00001780 <usart_async_write>:
{
    1780:	b570      	push	{r4, r5, r6, lr}
    1782:	0004      	movs	r4, r0
    1784:	000e      	movs	r6, r1
    1786:	0015      	movs	r5, r2
	ASSERT(descr && buf && length);
    1788:	2800      	cmp	r0, #0
    178a:	d01d      	beq.n	17c8 <usart_async_write+0x48>
    178c:	2900      	cmp	r1, #0
    178e:	d01d      	beq.n	17cc <usart_async_write+0x4c>
    1790:	2a00      	cmp	r2, #0
    1792:	d11d      	bne.n	17d0 <usart_async_write+0x50>
    1794:	2000      	movs	r0, #0
    1796:	223c      	movs	r2, #60	; 0x3c
    1798:	32ff      	adds	r2, #255	; 0xff
    179a:	4910      	ldr	r1, [pc, #64]	; (17dc <usart_async_write+0x5c>)
    179c:	4b10      	ldr	r3, [pc, #64]	; (17e0 <usart_async_write+0x60>)
    179e:	4798      	blx	r3
	if (descr->tx_por != descr->tx_buffer_length) {
    17a0:	2344      	movs	r3, #68	; 0x44
    17a2:	5ae2      	ldrh	r2, [r4, r3]
    17a4:	3308      	adds	r3, #8
    17a6:	5ae3      	ldrh	r3, [r4, r3]
    17a8:	429a      	cmp	r2, r3
    17aa:	d113      	bne.n	17d4 <usart_async_write+0x54>
	descr->tx_buffer        = (uint8_t *)buf;
    17ac:	64a6      	str	r6, [r4, #72]	; 0x48
	descr->tx_buffer_length = length;
    17ae:	234c      	movs	r3, #76	; 0x4c
    17b0:	52e5      	strh	r5, [r4, r3]
	descr->tx_por           = 0;
    17b2:	2200      	movs	r2, #0
    17b4:	3b08      	subs	r3, #8
    17b6:	52e2      	strh	r2, [r4, r3]
	descr->stat             = USART_ASYNC_STATUS_BUSY;
    17b8:	3b43      	subs	r3, #67	; 0x43
    17ba:	6323      	str	r3, [r4, #48]	; 0x30
	_usart_async_enable_byte_sent_irq(&descr->device);
    17bc:	0020      	movs	r0, r4
    17be:	3008      	adds	r0, #8
    17c0:	4b08      	ldr	r3, [pc, #32]	; (17e4 <usart_async_write+0x64>)
    17c2:	4798      	blx	r3
	return (int32_t)length;
    17c4:	0028      	movs	r0, r5
}
    17c6:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && buf && length);
    17c8:	2000      	movs	r0, #0
    17ca:	e7e4      	b.n	1796 <usart_async_write+0x16>
    17cc:	2000      	movs	r0, #0
    17ce:	e7e2      	b.n	1796 <usart_async_write+0x16>
    17d0:	2001      	movs	r0, #1
    17d2:	e7e0      	b.n	1796 <usart_async_write+0x16>
		return ERR_NO_RESOURCE;
    17d4:	201c      	movs	r0, #28
    17d6:	4240      	negs	r0, r0
    17d8:	e7f5      	b.n	17c6 <usart_async_write+0x46>
    17da:	46c0      	nop			; (mov r8, r8)
    17dc:	00009b60 	.word	0x00009b60
    17e0:	000019a5 	.word	0x000019a5
    17e4:	00001dfb 	.word	0x00001dfb

000017e8 <usart_process_byte_sent>:
{
    17e8:	b570      	push	{r4, r5, r6, lr}
    17ea:	0004      	movs	r4, r0
	if (descr->tx_por != descr->tx_buffer_length) {
    17ec:	0002      	movs	r2, r0
    17ee:	3a08      	subs	r2, #8
    17f0:	2344      	movs	r3, #68	; 0x44
    17f2:	5ad3      	ldrh	r3, [r2, r3]
    17f4:	214c      	movs	r1, #76	; 0x4c
    17f6:	5a52      	ldrh	r2, [r2, r1]
    17f8:	4293      	cmp	r3, r2
    17fa:	d00d      	beq.n	1818 <usart_process_byte_sent+0x30>
		_usart_async_write_byte(&descr->device, descr->tx_buffer[descr->tx_por++]);
    17fc:	0002      	movs	r2, r0
    17fe:	6c01      	ldr	r1, [r0, #64]	; 0x40
    1800:	3a08      	subs	r2, #8
    1802:	1c5d      	adds	r5, r3, #1
    1804:	2044      	movs	r0, #68	; 0x44
    1806:	5215      	strh	r5, [r2, r0]
    1808:	5cc9      	ldrb	r1, [r1, r3]
    180a:	0020      	movs	r0, r4
    180c:	4b04      	ldr	r3, [pc, #16]	; (1820 <usart_process_byte_sent+0x38>)
    180e:	4798      	blx	r3
		_usart_async_enable_byte_sent_irq(&descr->device);
    1810:	0020      	movs	r0, r4
    1812:	4b04      	ldr	r3, [pc, #16]	; (1824 <usart_process_byte_sent+0x3c>)
    1814:	4798      	blx	r3
}
    1816:	bd70      	pop	{r4, r5, r6, pc}
		_usart_async_enable_tx_done_irq(&descr->device);
    1818:	4b03      	ldr	r3, [pc, #12]	; (1828 <usart_process_byte_sent+0x40>)
    181a:	4798      	blx	r3
}
    181c:	e7fb      	b.n	1816 <usart_process_byte_sent+0x2e>
    181e:	46c0      	nop			; (mov r8, r8)
    1820:	00001df3 	.word	0x00001df3
    1824:	00001dfb 	.word	0x00001dfb
    1828:	00001e03 	.word	0x00001e03

0000182c <usart_async_read>:
{
    182c:	b5f0      	push	{r4, r5, r6, r7, lr}
    182e:	b085      	sub	sp, #20
    1830:	0004      	movs	r4, r0
    1832:	000d      	movs	r5, r1
    1834:	0016      	movs	r6, r2
	ASSERT(descr && buf && length);
    1836:	2800      	cmp	r0, #0
    1838:	d017      	beq.n	186a <usart_async_read+0x3e>
    183a:	2900      	cmp	r1, #0
    183c:	d017      	beq.n	186e <usart_async_read+0x42>
    183e:	2a00      	cmp	r2, #0
    1840:	d117      	bne.n	1872 <usart_async_read+0x46>
    1842:	2000      	movs	r0, #0
    1844:	22ac      	movs	r2, #172	; 0xac
    1846:	0052      	lsls	r2, r2, #1
    1848:	4912      	ldr	r1, [pc, #72]	; (1894 <usart_async_read+0x68>)
    184a:	4b13      	ldr	r3, [pc, #76]	; (1898 <usart_async_read+0x6c>)
    184c:	4798      	blx	r3
	CRITICAL_SECTION_ENTER()
    184e:	a803      	add	r0, sp, #12
    1850:	4b12      	ldr	r3, [pc, #72]	; (189c <usart_async_read+0x70>)
    1852:	4798      	blx	r3
	num = ringbuffer_num(&descr->rx);
    1854:	3434      	adds	r4, #52	; 0x34
    1856:	0020      	movs	r0, r4
    1858:	9401      	str	r4, [sp, #4]
    185a:	4b11      	ldr	r3, [pc, #68]	; (18a0 <usart_async_read+0x74>)
    185c:	4798      	blx	r3
    185e:	0007      	movs	r7, r0
	CRITICAL_SECTION_LEAVE()
    1860:	a803      	add	r0, sp, #12
    1862:	4b10      	ldr	r3, [pc, #64]	; (18a4 <usart_async_read+0x78>)
    1864:	4798      	blx	r3
	uint16_t                       was_read = 0;
    1866:	2400      	movs	r4, #0
	while ((was_read < num) && (was_read < length)) {
    1868:	e00b      	b.n	1882 <usart_async_read+0x56>
	ASSERT(descr && buf && length);
    186a:	2000      	movs	r0, #0
    186c:	e7ea      	b.n	1844 <usart_async_read+0x18>
    186e:	2000      	movs	r0, #0
    1870:	e7e8      	b.n	1844 <usart_async_read+0x18>
    1872:	2001      	movs	r0, #1
    1874:	e7e6      	b.n	1844 <usart_async_read+0x18>
		ringbuffer_get(&descr->rx, &buf[was_read++]);
    1876:	3401      	adds	r4, #1
    1878:	b2a4      	uxth	r4, r4
    187a:	1869      	adds	r1, r5, r1
    187c:	9801      	ldr	r0, [sp, #4]
    187e:	4b0a      	ldr	r3, [pc, #40]	; (18a8 <usart_async_read+0x7c>)
    1880:	4798      	blx	r3
	while ((was_read < num) && (was_read < length)) {
    1882:	0021      	movs	r1, r4
    1884:	42a7      	cmp	r7, r4
    1886:	d901      	bls.n	188c <usart_async_read+0x60>
    1888:	42b4      	cmp	r4, r6
    188a:	d3f4      	bcc.n	1876 <usart_async_read+0x4a>
}
    188c:	0020      	movs	r0, r4
    188e:	b005      	add	sp, #20
    1890:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1892:	46c0      	nop			; (mov r8, r8)
    1894:	00009b60 	.word	0x00009b60
    1898:	000019a5 	.word	0x000019a5
    189c:	00001525 	.word	0x00001525
    18a0:	00001a85 	.word	0x00001a85
    18a4:	00001533 	.word	0x00001533
    18a8:	000019f9 	.word	0x000019f9

000018ac <usart_async_init>:
{
    18ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    18ae:	0004      	movs	r4, r0
    18b0:	000d      	movs	r5, r1
    18b2:	0016      	movs	r6, r2
    18b4:	001f      	movs	r7, r3
	ASSERT(descr && hw && rx_buffer && rx_buffer_length);
    18b6:	2800      	cmp	r0, #0
    18b8:	d026      	beq.n	1908 <usart_async_init+0x5c>
    18ba:	2900      	cmp	r1, #0
    18bc:	d026      	beq.n	190c <usart_async_init+0x60>
    18be:	2a00      	cmp	r2, #0
    18c0:	d026      	beq.n	1910 <usart_async_init+0x64>
    18c2:	2b00      	cmp	r3, #0
    18c4:	d126      	bne.n	1914 <usart_async_init+0x68>
    18c6:	2000      	movs	r0, #0
    18c8:	223a      	movs	r2, #58	; 0x3a
    18ca:	4915      	ldr	r1, [pc, #84]	; (1920 <usart_async_init+0x74>)
    18cc:	4b15      	ldr	r3, [pc, #84]	; (1924 <usart_async_init+0x78>)
    18ce:	4798      	blx	r3
	if (ERR_NONE != ringbuffer_init(&descr->rx, rx_buffer, rx_buffer_length)) {
    18d0:	0020      	movs	r0, r4
    18d2:	3034      	adds	r0, #52	; 0x34
    18d4:	003a      	movs	r2, r7
    18d6:	0031      	movs	r1, r6
    18d8:	4b13      	ldr	r3, [pc, #76]	; (1928 <usart_async_init+0x7c>)
    18da:	4798      	blx	r3
    18dc:	2800      	cmp	r0, #0
    18de:	d11b      	bne.n	1918 <usart_async_init+0x6c>
	init_status = _usart_async_init(&descr->device, hw);
    18e0:	0020      	movs	r0, r4
    18e2:	3008      	adds	r0, #8
    18e4:	0029      	movs	r1, r5
    18e6:	4b11      	ldr	r3, [pc, #68]	; (192c <usart_async_init+0x80>)
    18e8:	4798      	blx	r3
	if (init_status) {
    18ea:	2800      	cmp	r0, #0
    18ec:	d10b      	bne.n	1906 <usart_async_init+0x5a>
	descr->io.read  = usart_async_read;
    18ee:	4b10      	ldr	r3, [pc, #64]	; (1930 <usart_async_init+0x84>)
    18f0:	6063      	str	r3, [r4, #4]
	descr->io.write = usart_async_write;
    18f2:	4b10      	ldr	r3, [pc, #64]	; (1934 <usart_async_init+0x88>)
    18f4:	6023      	str	r3, [r4, #0]
	descr->device.usart_cb.tx_byte_sent = usart_process_byte_sent;
    18f6:	4b10      	ldr	r3, [pc, #64]	; (1938 <usart_async_init+0x8c>)
    18f8:	60a3      	str	r3, [r4, #8]
	descr->device.usart_cb.rx_done_cb   = usart_fill_rx_buffer;
    18fa:	4b10      	ldr	r3, [pc, #64]	; (193c <usart_async_init+0x90>)
    18fc:	60e3      	str	r3, [r4, #12]
	descr->device.usart_cb.tx_done_cb   = usart_transmission_complete;
    18fe:	4b10      	ldr	r3, [pc, #64]	; (1940 <usart_async_init+0x94>)
    1900:	6123      	str	r3, [r4, #16]
	descr->device.usart_cb.error_cb     = usart_error;
    1902:	4b10      	ldr	r3, [pc, #64]	; (1944 <usart_async_init+0x98>)
    1904:	6163      	str	r3, [r4, #20]
}
    1906:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(descr && hw && rx_buffer && rx_buffer_length);
    1908:	2000      	movs	r0, #0
    190a:	e7dd      	b.n	18c8 <usart_async_init+0x1c>
    190c:	2000      	movs	r0, #0
    190e:	e7db      	b.n	18c8 <usart_async_init+0x1c>
    1910:	2000      	movs	r0, #0
    1912:	e7d9      	b.n	18c8 <usart_async_init+0x1c>
    1914:	2001      	movs	r0, #1
    1916:	e7d7      	b.n	18c8 <usart_async_init+0x1c>
		return ERR_INVALID_ARG;
    1918:	200d      	movs	r0, #13
    191a:	4240      	negs	r0, r0
    191c:	e7f3      	b.n	1906 <usart_async_init+0x5a>
    191e:	46c0      	nop			; (mov r8, r8)
    1920:	00009b60 	.word	0x00009b60
    1924:	000019a5 	.word	0x000019a5
    1928:	000019ad 	.word	0x000019ad
    192c:	00001d55 	.word	0x00001d55
    1930:	0000182d 	.word	0x0000182d
    1934:	00001781 	.word	0x00001781
    1938:	000017e9 	.word	0x000017e9
    193c:	00001765 	.word	0x00001765
    1940:	00001741 	.word	0x00001741
    1944:	00001753 	.word	0x00001753

00001948 <usart_async_enable>:
{
    1948:	b510      	push	{r4, lr}
    194a:	0004      	movs	r4, r0
	ASSERT(descr);
    194c:	1e43      	subs	r3, r0, #1
    194e:	4198      	sbcs	r0, r3
    1950:	b2c0      	uxtb	r0, r0
    1952:	2261      	movs	r2, #97	; 0x61
    1954:	4904      	ldr	r1, [pc, #16]	; (1968 <usart_async_enable+0x20>)
    1956:	4b05      	ldr	r3, [pc, #20]	; (196c <usart_async_enable+0x24>)
    1958:	4798      	blx	r3
	_usart_async_enable(&descr->device);
    195a:	0020      	movs	r0, r4
    195c:	3008      	adds	r0, #8
    195e:	4b04      	ldr	r3, [pc, #16]	; (1970 <usart_async_enable+0x28>)
    1960:	4798      	blx	r3
}
    1962:	2000      	movs	r0, #0
    1964:	bd10      	pop	{r4, pc}
    1966:	46c0      	nop			; (mov r8, r8)
    1968:	00009b60 	.word	0x00009b60
    196c:	000019a5 	.word	0x000019a5
    1970:	00001de1 	.word	0x00001de1

00001974 <usart_async_get_io_descriptor>:
{
    1974:	b570      	push	{r4, r5, r6, lr}
    1976:	0004      	movs	r4, r0
    1978:	000d      	movs	r5, r1
	ASSERT(descr && io);
    197a:	2800      	cmp	r0, #0
    197c:	d00b      	beq.n	1996 <usart_async_get_io_descriptor+0x22>
    197e:	2900      	cmp	r1, #0
    1980:	d007      	beq.n	1992 <usart_async_get_io_descriptor+0x1e>
    1982:	2001      	movs	r0, #1
    1984:	2277      	movs	r2, #119	; 0x77
    1986:	4905      	ldr	r1, [pc, #20]	; (199c <usart_async_get_io_descriptor+0x28>)
    1988:	4b05      	ldr	r3, [pc, #20]	; (19a0 <usart_async_get_io_descriptor+0x2c>)
    198a:	4798      	blx	r3
	*io = &descr->io;
    198c:	602c      	str	r4, [r5, #0]
}
    198e:	2000      	movs	r0, #0
    1990:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && io);
    1992:	2000      	movs	r0, #0
    1994:	e7f6      	b.n	1984 <usart_async_get_io_descriptor+0x10>
    1996:	2000      	movs	r0, #0
    1998:	e7f4      	b.n	1984 <usart_async_get_io_descriptor+0x10>
    199a:	46c0      	nop			; (mov r8, r8)
    199c:	00009b60 	.word	0x00009b60
    19a0:	000019a5 	.word	0x000019a5

000019a4 <assert>:
/**
 * \brief Assert function
 */
void assert(const bool condition, const char *const file, const int line)
{
	if (!(condition)) {
    19a4:	2800      	cmp	r0, #0
    19a6:	d100      	bne.n	19aa <assert+0x6>
		__asm("BKPT #0");
    19a8:	be00      	bkpt	0x0000
	}
	(void)file;
	(void)line;
}
    19aa:	4770      	bx	lr

000019ac <ringbuffer_init>:

/**
 * \brief Ringbuffer init
 */
int32_t ringbuffer_init(struct ringbuffer *const rb, void *buf, uint32_t size)
{
    19ac:	b570      	push	{r4, r5, r6, lr}
    19ae:	0004      	movs	r4, r0
    19b0:	000e      	movs	r6, r1
    19b2:	0015      	movs	r5, r2
	ASSERT(rb && buf && size);
    19b4:	2800      	cmp	r0, #0
    19b6:	d012      	beq.n	19de <ringbuffer_init+0x32>
    19b8:	2900      	cmp	r1, #0
    19ba:	d012      	beq.n	19e2 <ringbuffer_init+0x36>
    19bc:	2a00      	cmp	r2, #0
    19be:	d112      	bne.n	19e6 <ringbuffer_init+0x3a>
    19c0:	2000      	movs	r0, #0
    19c2:	2228      	movs	r2, #40	; 0x28
    19c4:	490a      	ldr	r1, [pc, #40]	; (19f0 <ringbuffer_init+0x44>)
    19c6:	4b0b      	ldr	r3, [pc, #44]	; (19f4 <ringbuffer_init+0x48>)
    19c8:	4798      	blx	r3

	/*
	 * buf size must be aligned to power of 2
	 */
	if ((size & (size - 1)) != 0) {
    19ca:	1e6b      	subs	r3, r5, #1
    19cc:	422b      	tst	r3, r5
    19ce:	d10c      	bne.n	19ea <ringbuffer_init+0x3e>
		return ERR_INVALID_ARG;
	}

	/* size - 1 is faster in calculation */
	rb->size        = size - 1;
    19d0:	6063      	str	r3, [r4, #4]
	rb->read_index  = 0;
    19d2:	2300      	movs	r3, #0
    19d4:	60a3      	str	r3, [r4, #8]
	rb->write_index = rb->read_index;
    19d6:	60e3      	str	r3, [r4, #12]
	rb->buf         = (uint8_t *)buf;
    19d8:	6026      	str	r6, [r4, #0]

	return ERR_NONE;
    19da:	2000      	movs	r0, #0
}
    19dc:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(rb && buf && size);
    19de:	2000      	movs	r0, #0
    19e0:	e7ef      	b.n	19c2 <ringbuffer_init+0x16>
    19e2:	2000      	movs	r0, #0
    19e4:	e7ed      	b.n	19c2 <ringbuffer_init+0x16>
    19e6:	2001      	movs	r0, #1
    19e8:	e7eb      	b.n	19c2 <ringbuffer_init+0x16>
		return ERR_INVALID_ARG;
    19ea:	200d      	movs	r0, #13
    19ec:	4240      	negs	r0, r0
    19ee:	e7f5      	b.n	19dc <ringbuffer_init+0x30>
    19f0:	00009b80 	.word	0x00009b80
    19f4:	000019a5 	.word	0x000019a5

000019f8 <ringbuffer_get>:
/**
 * \brief Get one byte from ringbuffer
 *
 */
int32_t ringbuffer_get(struct ringbuffer *const rb, uint8_t *data)
{
    19f8:	b570      	push	{r4, r5, r6, lr}
    19fa:	0004      	movs	r4, r0
    19fc:	000d      	movs	r5, r1
	ASSERT(rb && data);
    19fe:	2800      	cmp	r0, #0
    1a00:	d016      	beq.n	1a30 <ringbuffer_get+0x38>
    1a02:	2900      	cmp	r1, #0
    1a04:	d012      	beq.n	1a2c <ringbuffer_get+0x34>
    1a06:	2001      	movs	r0, #1
    1a08:	2240      	movs	r2, #64	; 0x40
    1a0a:	490c      	ldr	r1, [pc, #48]	; (1a3c <ringbuffer_get+0x44>)
    1a0c:	4b0c      	ldr	r3, [pc, #48]	; (1a40 <ringbuffer_get+0x48>)
    1a0e:	4798      	blx	r3

	if (rb->write_index != rb->read_index) {
    1a10:	68a3      	ldr	r3, [r4, #8]
    1a12:	68e2      	ldr	r2, [r4, #12]
    1a14:	429a      	cmp	r2, r3
    1a16:	d00d      	beq.n	1a34 <ringbuffer_get+0x3c>
		*data = rb->buf[rb->read_index & rb->size];
    1a18:	6862      	ldr	r2, [r4, #4]
    1a1a:	4013      	ands	r3, r2
    1a1c:	6822      	ldr	r2, [r4, #0]
    1a1e:	5cd3      	ldrb	r3, [r2, r3]
    1a20:	702b      	strb	r3, [r5, #0]
		rb->read_index++;
    1a22:	68a3      	ldr	r3, [r4, #8]
    1a24:	3301      	adds	r3, #1
    1a26:	60a3      	str	r3, [r4, #8]
		return ERR_NONE;
    1a28:	2000      	movs	r0, #0
	}

	return ERR_NOT_FOUND;
}
    1a2a:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(rb && data);
    1a2c:	2000      	movs	r0, #0
    1a2e:	e7eb      	b.n	1a08 <ringbuffer_get+0x10>
    1a30:	2000      	movs	r0, #0
    1a32:	e7e9      	b.n	1a08 <ringbuffer_get+0x10>
	return ERR_NOT_FOUND;
    1a34:	200a      	movs	r0, #10
    1a36:	4240      	negs	r0, r0
    1a38:	e7f7      	b.n	1a2a <ringbuffer_get+0x32>
    1a3a:	46c0      	nop			; (mov r8, r8)
    1a3c:	00009b80 	.word	0x00009b80
    1a40:	000019a5 	.word	0x000019a5

00001a44 <ringbuffer_put>:
/**
 * \brief Put one byte to ringbuffer
 *
 */
int32_t ringbuffer_put(struct ringbuffer *const rb, uint8_t data)
{
    1a44:	b570      	push	{r4, r5, r6, lr}
    1a46:	0004      	movs	r4, r0
    1a48:	000d      	movs	r5, r1
	ASSERT(rb);
    1a4a:	1e43      	subs	r3, r0, #1
    1a4c:	4198      	sbcs	r0, r3
    1a4e:	b2c0      	uxtb	r0, r0
    1a50:	2251      	movs	r2, #81	; 0x51
    1a52:	490a      	ldr	r1, [pc, #40]	; (1a7c <ringbuffer_put+0x38>)
    1a54:	4b0a      	ldr	r3, [pc, #40]	; (1a80 <ringbuffer_put+0x3c>)
    1a56:	4798      	blx	r3

	rb->buf[rb->write_index & rb->size] = data;
    1a58:	6863      	ldr	r3, [r4, #4]
    1a5a:	68e2      	ldr	r2, [r4, #12]
    1a5c:	4013      	ands	r3, r2
    1a5e:	6822      	ldr	r2, [r4, #0]
    1a60:	54d5      	strb	r5, [r2, r3]

	/*
	 * buffer full strategy: new data will overwrite the oldest data in
	 * the buffer
	 */
	if ((rb->write_index - rb->read_index) > rb->size) {
    1a62:	68e3      	ldr	r3, [r4, #12]
    1a64:	68a2      	ldr	r2, [r4, #8]
    1a66:	1a9a      	subs	r2, r3, r2
    1a68:	6861      	ldr	r1, [r4, #4]
    1a6a:	428a      	cmp	r2, r1
    1a6c:	d901      	bls.n	1a72 <ringbuffer_put+0x2e>
		rb->read_index = rb->write_index - rb->size;
    1a6e:	1a59      	subs	r1, r3, r1
    1a70:	60a1      	str	r1, [r4, #8]
	}

	rb->write_index++;
    1a72:	3301      	adds	r3, #1
    1a74:	60e3      	str	r3, [r4, #12]

	return ERR_NONE;
}
    1a76:	2000      	movs	r0, #0
    1a78:	bd70      	pop	{r4, r5, r6, pc}
    1a7a:	46c0      	nop			; (mov r8, r8)
    1a7c:	00009b80 	.word	0x00009b80
    1a80:	000019a5 	.word	0x000019a5

00001a84 <ringbuffer_num>:

/**
 * \brief Return the element number of ringbuffer
 */
uint32_t ringbuffer_num(const struct ringbuffer *const rb)
{
    1a84:	b510      	push	{r4, lr}
    1a86:	0004      	movs	r4, r0
	ASSERT(rb);
    1a88:	1e43      	subs	r3, r0, #1
    1a8a:	4198      	sbcs	r0, r3
    1a8c:	b2c0      	uxtb	r0, r0
    1a8e:	2267      	movs	r2, #103	; 0x67
    1a90:	4903      	ldr	r1, [pc, #12]	; (1aa0 <ringbuffer_num+0x1c>)
    1a92:	4b04      	ldr	r3, [pc, #16]	; (1aa4 <ringbuffer_num+0x20>)
    1a94:	4798      	blx	r3

	return rb->write_index - rb->read_index;
    1a96:	68e0      	ldr	r0, [r4, #12]
    1a98:	68a3      	ldr	r3, [r4, #8]
    1a9a:	1ac0      	subs	r0, r0, r3
}
    1a9c:	bd10      	pop	{r4, pc}
    1a9e:	46c0      	nop			; (mov r8, r8)
    1aa0:	00009b80 	.word	0x00009b80
    1aa4:	000019a5 	.word	0x000019a5

00001aa8 <_sbrk>:

/**
 * \brief Replacement of C library of _sbrk
 */
extern caddr_t _sbrk(int incr)
{
    1aa8:	0003      	movs	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *       prev_heap;

	if (heap == NULL) {
    1aaa:	4a06      	ldr	r2, [pc, #24]	; (1ac4 <_sbrk+0x1c>)
    1aac:	6812      	ldr	r2, [r2, #0]
    1aae:	2a00      	cmp	r2, #0
    1ab0:	d004      	beq.n	1abc <_sbrk+0x14>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
    1ab2:	4a04      	ldr	r2, [pc, #16]	; (1ac4 <_sbrk+0x1c>)
    1ab4:	6810      	ldr	r0, [r2, #0]

	heap += incr;
    1ab6:	18c3      	adds	r3, r0, r3
    1ab8:	6013      	str	r3, [r2, #0]

	return (caddr_t)prev_heap;
}
    1aba:	4770      	bx	lr
		heap = (unsigned char *)&_end;
    1abc:	4902      	ldr	r1, [pc, #8]	; (1ac8 <_sbrk+0x20>)
    1abe:	4a01      	ldr	r2, [pc, #4]	; (1ac4 <_sbrk+0x1c>)
    1ac0:	6011      	str	r1, [r2, #0]
    1ac2:	e7f6      	b.n	1ab2 <_sbrk+0xa>
    1ac4:	20000a28 	.word	0x20000a28
    1ac8:	20002b60 	.word	0x20002b60

00001acc <_get_cycles_for_ms>:

/**
 * \brief Retrieve the amount of cycles to delay for the given amount of ms
 */
uint32_t _get_cycles_for_ms(const uint16_t ms)
{
    1acc:	b510      	push	{r4, lr}
    1ace:	0003      	movs	r3, r0
		return (ms * (freq / 10000) + 2) / 3 * 10;
    1ad0:	20c8      	movs	r0, #200	; 0xc8
    1ad2:	0080      	lsls	r0, r0, #2
    1ad4:	4358      	muls	r0, r3
    1ad6:	3002      	adds	r0, #2
    1ad8:	2103      	movs	r1, #3
    1ada:	4b03      	ldr	r3, [pc, #12]	; (1ae8 <_get_cycles_for_ms+0x1c>)
    1adc:	4798      	blx	r3
    1ade:	0083      	lsls	r3, r0, #2
    1ae0:	181b      	adds	r3, r3, r0
    1ae2:	0058      	lsls	r0, r3, #1
	return _get_cycles_for_ms_internal(ms, CONF_CPU_FREQUENCY, CPU_FREQ_POWER);
}
    1ae4:	bd10      	pop	{r4, pc}
    1ae6:	46c0      	nop			; (mov r8, r8)
    1ae8:	00002611 	.word	0x00002611

00001aec <_delay_cycles>:
{
#ifndef _UNIT_TEST_
	(void)hw;
	(void)cycles;
#if defined __GNUC__
	__asm(".syntax unified\n"
    1aec:	3901      	subs	r1, #1
    1aee:	d8fd      	bhi.n	1aec <_delay_cycles>
	__asm("__delay:\n"
	      "subs r1, r1, #1\n"
	      "bhi __delay\n");
#endif
#endif
}
    1af0:	4770      	bx	lr
	...

00001af4 <_init_chip>:

/**
 * \brief Initialize the hardware abstraction layer
 */
void _init_chip(void)
{
    1af4:	b510      	push	{r4, lr}
}

static inline void hri_nvmctrl_set_CTRLB_RWS_bf(const void *const hw, hri_nvmctrl_ctrlb_reg_t mask)
{
	NVMCTRL_CRITICAL_SECTION_ENTER();
	((Nvmctrl *)hw)->CTRLB.reg |= NVMCTRL_CTRLB_RWS(mask);
    1af6:	4b06      	ldr	r3, [pc, #24]	; (1b10 <_init_chip+0x1c>)
    1af8:	685a      	ldr	r2, [r3, #4]
    1afa:	605a      	str	r2, [r3, #4]
	hri_nvmctrl_set_CTRLB_RWS_bf(NVMCTRL, CONF_NVM_WAIT_STATE);

	_pm_init();
    1afc:	4b05      	ldr	r3, [pc, #20]	; (1b14 <_init_chip+0x20>)
    1afe:	4798      	blx	r3
	_sysctrl_init_sources();
    1b00:	4b05      	ldr	r3, [pc, #20]	; (1b18 <_init_chip+0x24>)
    1b02:	4798      	blx	r3
#if _GCLK_INIT_1ST
	_gclk_init_generators_by_fref(_GCLK_INIT_1ST);
#endif
	_sysctrl_init_referenced_generators();
    1b04:	4b05      	ldr	r3, [pc, #20]	; (1b1c <_init_chip+0x28>)
    1b06:	4798      	blx	r3
	_gclk_init_generators_by_fref(_GCLK_INIT_LAST);
    1b08:	20ff      	movs	r0, #255	; 0xff
    1b0a:	4b05      	ldr	r3, [pc, #20]	; (1b20 <_init_chip+0x2c>)
    1b0c:	4798      	blx	r3
#if CONF_DMAC_ENABLE
	_pm_enable_bus_clock(PM_BUS_AHB, DMAC);
	_pm_enable_bus_clock(PM_BUS_APBB, DMAC);
	_dma_init();
#endif
}
    1b0e:	bd10      	pop	{r4, pc}
    1b10:	41004000 	.word	0x41004000
    1b14:	00001b45 	.word	0x00001b45
    1b18:	00002169 	.word	0x00002169
    1b1c:	000021ad 	.word	0x000021ad
    1b20:	00001b25 	.word	0x00001b25

00001b24 <_gclk_init_generators_by_fref>:

void _gclk_init_generators_by_fref(uint32_t bm)
{

#if CONF_GCLK_GENERATOR_0_CONFIG == 1
	if (bm & (1ul << 0)) {
    1b24:	07c3      	lsls	r3, r0, #31
    1b26:	d50a      	bpl.n	1b3e <_gclk_init_generators_by_fref+0x1a>
}

static inline void hri_gclk_write_GENDIV_reg(const void *const hw, hri_gclk_gendiv_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->GENDIV.reg = data;
    1b28:	4b05      	ldr	r3, [pc, #20]	; (1b40 <_gclk_init_generators_by_fref+0x1c>)
    1b2a:	2280      	movs	r2, #128	; 0x80
    1b2c:	0052      	lsls	r2, r2, #1
    1b2e:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
    1b30:	2283      	movs	r2, #131	; 0x83
    1b32:	0252      	lsls	r2, r2, #9
    1b34:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
    1b36:	4b02      	ldr	r3, [pc, #8]	; (1b40 <_gclk_init_generators_by_fref+0x1c>)
    1b38:	785b      	ldrb	r3, [r3, #1]
    1b3a:	09db      	lsrs	r3, r3, #7
    1b3c:	d1fb      	bne.n	1b36 <_gclk_init_generators_by_fref+0x12>
		        | (CONF_GCLK_GEN_8_DIVSEL << GCLK_GENCTRL_DIVSEL_Pos) | (CONF_GCLK_GEN_8_OE << GCLK_GENCTRL_OE_Pos)
		        | (CONF_GCLK_GEN_8_OOV << GCLK_GENCTRL_OOV_Pos) | (CONF_GCLK_GEN_8_IDC << GCLK_GENCTRL_IDC_Pos)
		        | (CONF_GCLK_GENERATOR_8_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_8_SRC | GCLK_GENCTRL_ID(8));
	}
#endif
}
    1b3e:	4770      	bx	lr
    1b40:	40000c00 	.word	0x40000c00

00001b44 <_pm_init>:
}

static inline void hri_pm_set_CPUSEL_CPUDIV_bf(const void *const hw, hri_pm_cpusel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->CPUSEL.reg |= PM_CPUSEL_CPUDIV(mask);
    1b44:	4b06      	ldr	r3, [pc, #24]	; (1b60 <_pm_init+0x1c>)
    1b46:	7a1a      	ldrb	r2, [r3, #8]
    1b48:	b2d2      	uxtb	r2, r2
    1b4a:	721a      	strb	r2, [r3, #8]
}

static inline void hri_pm_set_APBASEL_APBADIV_bf(const void *const hw, hri_pm_apbasel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBASEL.reg |= PM_APBASEL_APBADIV(mask);
    1b4c:	7a5a      	ldrb	r2, [r3, #9]
    1b4e:	b2d2      	uxtb	r2, r2
    1b50:	725a      	strb	r2, [r3, #9]
}

static inline void hri_pm_set_APBBSEL_APBBDIV_bf(const void *const hw, hri_pm_apbbsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBBSEL.reg |= PM_APBBSEL_APBBDIV(mask);
    1b52:	7a9a      	ldrb	r2, [r3, #10]
    1b54:	b2d2      	uxtb	r2, r2
    1b56:	729a      	strb	r2, [r3, #10]
}

static inline void hri_pm_set_APBCSEL_APBCDIV_bf(const void *const hw, hri_pm_apbcsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBCSEL.reg |= PM_APBCSEL_APBCDIV(mask);
    1b58:	7ada      	ldrb	r2, [r3, #11]
    1b5a:	b2d2      	uxtb	r2, r2
    1b5c:	72da      	strb	r2, [r3, #11]
{
	hri_pm_set_CPUSEL_CPUDIV_bf(PM, CONF_CPU_DIV);
	hri_pm_set_APBASEL_APBADIV_bf(PM, CONF_APBA_DIV);
	hri_pm_set_APBBSEL_APBBDIV_bf(PM, CONF_APBB_DIV);
	hri_pm_set_APBCSEL_APBCDIV_bf(PM, CONF_APBC_DIV);
}
    1b5e:	4770      	bx	lr
    1b60:	40000400 	.word	0x40000400

00001b64 <_sercom_get_hardware_index>:
{
#ifdef _UNIT_TEST_
	return ((uint32_t)hw - (uint32_t)SERCOM0) / sizeof(Sercom);
#endif

	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
    1b64:	4b02      	ldr	r3, [pc, #8]	; (1b70 <_sercom_get_hardware_index+0xc>)
    1b66:	469c      	mov	ip, r3
    1b68:	4460      	add	r0, ip
    1b6a:	0a80      	lsrs	r0, r0, #10
    1b6c:	b2c0      	uxtb	r0, r0
}
    1b6e:	4770      	bx	lr
    1b70:	bdfff800 	.word	0xbdfff800

00001b74 <_sercom_usart_interrupt_handler>:
 * \internal Sercom interrupt handler
 *
 * \param[in] p The pointer to interrupt parameter
 */
static void _sercom_usart_interrupt_handler(struct _usart_async_device *device)
{
    1b74:	b510      	push	{r4, lr}
	void *hw = device->hw;
    1b76:	6984      	ldr	r4, [r0, #24]
	((Sercom *)hw)->USART.INTFLAG.reg = SERCOM_USART_INTFLAG_ERROR;
}

static inline bool hri_sercomusart_get_interrupt_DRE_bit(const void *const hw)
{
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) >> SERCOM_USART_INTFLAG_DRE_Pos;
    1b78:	7e23      	ldrb	r3, [r4, #24]

	if (hri_sercomusart_get_interrupt_DRE_bit(hw) && hri_sercomusart_get_INTEN_DRE_bit(hw)) {
    1b7a:	07db      	lsls	r3, r3, #31
    1b7c:	d502      	bpl.n	1b84 <_sercom_usart_interrupt_handler+0x10>
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_DRE;
}

static inline bool hri_sercomusart_get_INTEN_DRE_bit(const void *const hw)
{
	return (((Sercom *)hw)->USART.INTENSET.reg & SERCOM_USART_INTENSET_DRE) >> SERCOM_USART_INTENSET_DRE_Pos;
    1b7e:	7da3      	ldrb	r3, [r4, #22]
    1b80:	07db      	lsls	r3, r3, #31
    1b82:	d40f      	bmi.n	1ba4 <_sercom_usart_interrupt_handler+0x30>
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_TXC) >> SERCOM_USART_INTFLAG_TXC_Pos;
    1b84:	7e23      	ldrb	r3, [r4, #24]
		hri_sercomusart_clear_INTEN_DRE_bit(hw);
		device->usart_cb.tx_byte_sent(device);
	} else if (hri_sercomusart_get_interrupt_TXC_bit(hw) && hri_sercomusart_get_INTEN_TXC_bit(hw)) {
    1b86:	079b      	lsls	r3, r3, #30
    1b88:	d502      	bpl.n	1b90 <_sercom_usart_interrupt_handler+0x1c>
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_TXC;
}

static inline bool hri_sercomusart_get_INTEN_TXC_bit(const void *const hw)
{
	return (((Sercom *)hw)->USART.INTENSET.reg & SERCOM_USART_INTENSET_TXC) >> SERCOM_USART_INTENSET_TXC_Pos;
    1b8a:	7da3      	ldrb	r3, [r4, #22]
    1b8c:	079b      	lsls	r3, r3, #30
    1b8e:	d40e      	bmi.n	1bae <_sercom_usart_interrupt_handler+0x3a>
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC) >> SERCOM_USART_INTFLAG_RXC_Pos;
    1b90:	7e23      	ldrb	r3, [r4, #24]
		hri_sercomusart_clear_INTEN_TXC_bit(hw);
		device->usart_cb.tx_done_cb(device);
	} else if (hri_sercomusart_get_interrupt_RXC_bit(hw)) {
    1b92:	075b      	lsls	r3, r3, #29
    1b94:	d515      	bpl.n	1bc2 <_sercom_usart_interrupt_handler+0x4e>
	SERCOM_CRITICAL_SECTION_LEAVE();
}

static inline hri_sercomusart_status_reg_t hri_sercomusart_read_STATUS_reg(const void *const hw)
{
	return ((Sercom *)hw)->USART.STATUS.reg;
    1b96:	8b62      	ldrh	r2, [r4, #26]
		if (hri_sercomusart_read_STATUS_reg(hw)
    1b98:	2337      	movs	r3, #55	; 0x37
    1b9a:	421a      	tst	r2, r3
    1b9c:	d00c      	beq.n	1bb8 <_sercom_usart_interrupt_handler+0x44>
	((Sercom *)hw)->USART.STATUS.reg = mask;
    1b9e:	3308      	adds	r3, #8
    1ba0:	8363      	strh	r3, [r4, #26]
		hri_sercomusart_clear_interrupt_ERROR_bit(hw);
		device->usart_cb.error_cb(device);
		status = hri_sercomusart_read_STATUS_reg(hw);
		hri_sercomusart_clear_STATUS_reg(hw, status);
	}
}
    1ba2:	bd10      	pop	{r4, pc}
	((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_DRE;
    1ba4:	2301      	movs	r3, #1
    1ba6:	7523      	strb	r3, [r4, #20]
		device->usart_cb.tx_byte_sent(device);
    1ba8:	6803      	ldr	r3, [r0, #0]
    1baa:	4798      	blx	r3
    1bac:	e7f9      	b.n	1ba2 <_sercom_usart_interrupt_handler+0x2e>
	((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_TXC;
    1bae:	2302      	movs	r3, #2
    1bb0:	7523      	strb	r3, [r4, #20]
		device->usart_cb.tx_done_cb(device);
    1bb2:	6883      	ldr	r3, [r0, #8]
    1bb4:	4798      	blx	r3
    1bb6:	e7f4      	b.n	1ba2 <_sercom_usart_interrupt_handler+0x2e>
		device->usart_cb.rx_done_cb(device, hri_sercomusart_read_DATA_reg(hw));
    1bb8:	6843      	ldr	r3, [r0, #4]
	return ((Sercom *)hw)->USART.DATA.reg;
    1bba:	8d21      	ldrh	r1, [r4, #40]	; 0x28
    1bbc:	b2c9      	uxtb	r1, r1
    1bbe:	4798      	blx	r3
    1bc0:	e7ef      	b.n	1ba2 <_sercom_usart_interrupt_handler+0x2e>
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_ERROR) >> SERCOM_USART_INTFLAG_ERROR_Pos;
    1bc2:	7e23      	ldrb	r3, [r4, #24]
	} else if (hri_sercomusart_get_interrupt_ERROR_bit(hw)) {
    1bc4:	09db      	lsrs	r3, r3, #7
    1bc6:	d0ec      	beq.n	1ba2 <_sercom_usart_interrupt_handler+0x2e>
	((Sercom *)hw)->USART.INTFLAG.reg = SERCOM_USART_INTFLAG_ERROR;
    1bc8:	2380      	movs	r3, #128	; 0x80
    1bca:	7623      	strb	r3, [r4, #24]
		device->usart_cb.error_cb(device);
    1bcc:	68c3      	ldr	r3, [r0, #12]
    1bce:	4798      	blx	r3
	return ((Sercom *)hw)->USART.STATUS.reg;
    1bd0:	8b63      	ldrh	r3, [r4, #26]
    1bd2:	b29b      	uxth	r3, r3
	((Sercom *)hw)->USART.STATUS.reg = mask;
    1bd4:	8363      	strh	r3, [r4, #26]
    1bd6:	e7e4      	b.n	1ba2 <_sercom_usart_interrupt_handler+0x2e>

00001bd8 <_sercom_init_irq_param>:
 * \brief Init irq param with the given sercom hardware instance
 */
static void _sercom_init_irq_param(const void *const hw, void *dev)
{

	if (hw == SERCOM5) {
    1bd8:	4b03      	ldr	r3, [pc, #12]	; (1be8 <_sercom_init_irq_param+0x10>)
    1bda:	4298      	cmp	r0, r3
    1bdc:	d000      	beq.n	1be0 <_sercom_init_irq_param+0x8>
		_sercom5_dev = (struct _usart_async_device *)dev;
	}
}
    1bde:	4770      	bx	lr
		_sercom5_dev = (struct _usart_async_device *)dev;
    1be0:	4b02      	ldr	r3, [pc, #8]	; (1bec <_sercom_init_irq_param+0x14>)
    1be2:	6019      	str	r1, [r3, #0]
}
    1be4:	e7fb      	b.n	1bde <_sercom_init_irq_param+0x6>
    1be6:	46c0      	nop			; (mov r8, r8)
    1be8:	42001c00 	.word	0x42001c00
    1bec:	20000a2c 	.word	0x20000a2c

00001bf0 <_sercom_get_irq_num>:

/**
 * \brief Retrieve IRQ number for the given hardware instance
 */
static uint8_t _sercom_get_irq_num(const void *const hw)
{
    1bf0:	b510      	push	{r4, lr}
	return SERCOM0_IRQn + _sercom_get_hardware_index(hw);
    1bf2:	4b02      	ldr	r3, [pc, #8]	; (1bfc <_sercom_get_irq_num+0xc>)
    1bf4:	4798      	blx	r3
    1bf6:	3009      	adds	r0, #9
    1bf8:	b2c0      	uxtb	r0, r0
}
    1bfa:	bd10      	pop	{r4, pc}
    1bfc:	00001b65 	.word	0x00001b65

00001c00 <_spi_sync_enable>:
	return ((Sercom *)hw)->SPI.SYNCBUSY.reg & reg;
    1c00:	69c3      	ldr	r3, [r0, #28]
 *
 * \return Enabling status
 */
static int32_t _spi_sync_enable(void *const hw)
{
	if (hri_sercomspi_is_syncing(hw, SERCOM_SPI_SYNCBUSY_SWRST)) {
    1c02:	07db      	lsls	r3, r3, #31
    1c04:	d408      	bmi.n	1c18 <_spi_sync_enable+0x18>
	((Sercom *)hw)->SPI.CTRLA.reg |= SERCOM_SPI_CTRLA_ENABLE;
    1c06:	6803      	ldr	r3, [r0, #0]
    1c08:	2202      	movs	r2, #2
    1c0a:	4313      	orrs	r3, r2
    1c0c:	6003      	str	r3, [r0, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    1c0e:	69c3      	ldr	r3, [r0, #28]
    1c10:	079b      	lsls	r3, r3, #30
    1c12:	d1fc      	bne.n	1c0e <_spi_sync_enable+0xe>
		return ERR_BUSY;
	}

	hri_sercomspi_set_CTRLA_ENABLE_bit(hw);

	return ERR_NONE;
    1c14:	2000      	movs	r0, #0
}
    1c16:	4770      	bx	lr
		return ERR_BUSY;
    1c18:	2004      	movs	r0, #4
    1c1a:	4240      	negs	r0, r0
    1c1c:	e7fb      	b.n	1c16 <_spi_sync_enable+0x16>
	...

00001c20 <_get_sercom_index>:
{
    1c20:	b510      	push	{r4, lr}
	uint8_t sercom_offset = _sercom_get_hardware_index(hw);
    1c22:	4b0b      	ldr	r3, [pc, #44]	; (1c50 <_get_sercom_index+0x30>)
    1c24:	4798      	blx	r3
    1c26:	0002      	movs	r2, r0
	for (i = 0; i < ARRAY_SIZE(_usarts); i++) {
    1c28:	2000      	movs	r0, #0
    1c2a:	2800      	cmp	r0, #0
    1c2c:	d006      	beq.n	1c3c <_get_sercom_index+0x1c>
	ASSERT(false);
    1c2e:	4a09      	ldr	r2, [pc, #36]	; (1c54 <_get_sercom_index+0x34>)
    1c30:	4909      	ldr	r1, [pc, #36]	; (1c58 <_get_sercom_index+0x38>)
    1c32:	2000      	movs	r0, #0
    1c34:	4b09      	ldr	r3, [pc, #36]	; (1c5c <_get_sercom_index+0x3c>)
    1c36:	4798      	blx	r3
	return 0;
    1c38:	2000      	movs	r0, #0
}
    1c3a:	bd10      	pop	{r4, pc}
		if (_usarts[i].number == sercom_offset) {
    1c3c:	0083      	lsls	r3, r0, #2
    1c3e:	181b      	adds	r3, r3, r0
    1c40:	0099      	lsls	r1, r3, #2
    1c42:	4b07      	ldr	r3, [pc, #28]	; (1c60 <_get_sercom_index+0x40>)
    1c44:	5ccb      	ldrb	r3, [r1, r3]
    1c46:	429a      	cmp	r2, r3
    1c48:	d0f7      	beq.n	1c3a <_get_sercom_index+0x1a>
	for (i = 0; i < ARRAY_SIZE(_usarts); i++) {
    1c4a:	3001      	adds	r0, #1
    1c4c:	b2c0      	uxtb	r0, r0
    1c4e:	e7ec      	b.n	1c2a <_get_sercom_index+0xa>
    1c50:	00001b65 	.word	0x00001b65
    1c54:	0000025e 	.word	0x0000025e
    1c58:	00009bf4 	.word	0x00009bf4
    1c5c:	000019a5 	.word	0x000019a5
    1c60:	00009ba4 	.word	0x00009ba4

00001c64 <_usart_init>:
{
    1c64:	b570      	push	{r4, r5, r6, lr}
    1c66:	0004      	movs	r4, r0
	uint8_t i = _get_sercom_index(hw);
    1c68:	4b38      	ldr	r3, [pc, #224]	; (1d4c <_usart_init+0xe8>)
    1c6a:	4798      	blx	r3
	return ((Sercom *)hw)->USART.SYNCBUSY.reg & reg;
    1c6c:	69e3      	ldr	r3, [r4, #28]
	if (!hri_sercomusart_is_syncing(hw, SERCOM_USART_SYNCBUSY_SWRST)) {
    1c6e:	07db      	lsls	r3, r3, #31
    1c70:	d41d      	bmi.n	1cae <_usart_init+0x4a>
		uint32_t mode = _usarts[i].ctrl_a & SERCOM_USART_CTRLA_MODE_Msk;
    1c72:	0083      	lsls	r3, r0, #2
    1c74:	181b      	adds	r3, r3, r0
    1c76:	009a      	lsls	r2, r3, #2
    1c78:	4b35      	ldr	r3, [pc, #212]	; (1d50 <_usart_init+0xec>)
    1c7a:	189b      	adds	r3, r3, r2
    1c7c:	685a      	ldr	r2, [r3, #4]
    1c7e:	231c      	movs	r3, #28
    1c80:	401a      	ands	r2, r3
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1c82:	69e3      	ldr	r3, [r4, #28]
    1c84:	079b      	lsls	r3, r3, #30
    1c86:	d1fc      	bne.n	1c82 <_usart_init+0x1e>
	tmp = ((Sercom *)hw)->USART.CTRLA.reg;
    1c88:	6823      	ldr	r3, [r4, #0]
		if (hri_sercomusart_get_CTRLA_reg(hw, SERCOM_USART_CTRLA_ENABLE)) {
    1c8a:	079b      	lsls	r3, r3, #30
    1c8c:	d509      	bpl.n	1ca2 <_usart_init+0x3e>
	((Sercom *)hw)->USART.CTRLA.reg &= ~SERCOM_USART_CTRLA_ENABLE;
    1c8e:	6823      	ldr	r3, [r4, #0]
    1c90:	2102      	movs	r1, #2
    1c92:	438b      	bics	r3, r1
    1c94:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1c96:	69e3      	ldr	r3, [r4, #28]
    1c98:	079b      	lsls	r3, r3, #30
    1c9a:	d1fc      	bne.n	1c96 <_usart_init+0x32>
    1c9c:	69e3      	ldr	r3, [r4, #28]
    1c9e:	079b      	lsls	r3, r3, #30
    1ca0:	d4fc      	bmi.n	1c9c <_usart_init+0x38>
		hri_sercomusart_write_CTRLA_reg(hw, SERCOM_USART_CTRLA_SWRST | mode);
    1ca2:	2301      	movs	r3, #1
    1ca4:	4313      	orrs	r3, r2
	((Sercom *)hw)->USART.CTRLA.reg = data;
    1ca6:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1ca8:	69e3      	ldr	r3, [r4, #28]
    1caa:	079b      	lsls	r3, r3, #30
    1cac:	d1fc      	bne.n	1ca8 <_usart_init+0x44>
    1cae:	69e3      	ldr	r3, [r4, #28]
    1cb0:	07db      	lsls	r3, r3, #31
    1cb2:	d4fc      	bmi.n	1cae <_usart_init+0x4a>
	hri_sercomusart_write_CTRLA_reg(hw, _usarts[i].ctrl_a);
    1cb4:	0083      	lsls	r3, r0, #2
    1cb6:	181b      	adds	r3, r3, r0
    1cb8:	009a      	lsls	r2, r3, #2
    1cba:	4b25      	ldr	r3, [pc, #148]	; (1d50 <_usart_init+0xec>)
    1cbc:	189b      	adds	r3, r3, r2
    1cbe:	685b      	ldr	r3, [r3, #4]
	((Sercom *)hw)->USART.CTRLA.reg = data;
    1cc0:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1cc2:	69e3      	ldr	r3, [r4, #28]
    1cc4:	079b      	lsls	r3, r3, #30
    1cc6:	d1fc      	bne.n	1cc2 <_usart_init+0x5e>
	hri_sercomusart_write_CTRLB_reg(hw, _usarts[i].ctrl_b);
    1cc8:	0083      	lsls	r3, r0, #2
    1cca:	181b      	adds	r3, r3, r0
    1ccc:	009a      	lsls	r2, r3, #2
    1cce:	4b20      	ldr	r3, [pc, #128]	; (1d50 <_usart_init+0xec>)
    1cd0:	189b      	adds	r3, r3, r2
    1cd2:	689b      	ldr	r3, [r3, #8]
	((Sercom *)hw)->USART.CTRLB.reg = data;
    1cd4:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1cd6:	69e3      	ldr	r3, [r4, #28]
    1cd8:	075b      	lsls	r3, r3, #29
    1cda:	d1fc      	bne.n	1cd6 <_usart_init+0x72>
	if ((_usarts[i].ctrl_a & SERCOM_USART_CTRLA_SAMPR(0x1)) || (_usarts[i].ctrl_a & SERCOM_USART_CTRLA_SAMPR(0x3))) {
    1cdc:	0083      	lsls	r3, r0, #2
    1cde:	181b      	adds	r3, r3, r0
    1ce0:	009a      	lsls	r2, r3, #2
    1ce2:	4b1b      	ldr	r3, [pc, #108]	; (1d50 <_usart_init+0xec>)
    1ce4:	189b      	adds	r3, r3, r2
    1ce6:	685b      	ldr	r3, [r3, #4]
    1ce8:	049a      	lsls	r2, r3, #18
    1cea:	d40b      	bmi.n	1d04 <_usart_init+0xa0>
    1cec:	22c0      	movs	r2, #192	; 0xc0
    1cee:	01d2      	lsls	r2, r2, #7
    1cf0:	4213      	tst	r3, r2
    1cf2:	d107      	bne.n	1d04 <_usart_init+0xa0>
		hri_sercomusart_write_BAUD_reg(hw, _usarts[i].baud);
    1cf4:	0083      	lsls	r3, r0, #2
    1cf6:	181b      	adds	r3, r3, r0
    1cf8:	009a      	lsls	r2, r3, #2
    1cfa:	4b15      	ldr	r3, [pc, #84]	; (1d50 <_usart_init+0xec>)
    1cfc:	189b      	adds	r3, r3, r2
    1cfe:	899b      	ldrh	r3, [r3, #12]
	((Sercom *)hw)->USART.BAUD.reg = data;
    1d00:	81a3      	strh	r3, [r4, #12]
    1d02:	e015      	b.n	1d30 <_usart_init+0xcc>
		((Sercom *)hw)->USART.BAUD.FRAC.BAUD = _usarts[i].baud;
    1d04:	0083      	lsls	r3, r0, #2
    1d06:	181b      	adds	r3, r3, r0
    1d08:	009a      	lsls	r2, r3, #2
    1d0a:	4911      	ldr	r1, [pc, #68]	; (1d50 <_usart_init+0xec>)
    1d0c:	1889      	adds	r1, r1, r2
    1d0e:	898a      	ldrh	r2, [r1, #12]
    1d10:	89a3      	ldrh	r3, [r4, #12]
    1d12:	04d2      	lsls	r2, r2, #19
    1d14:	0cd2      	lsrs	r2, r2, #19
    1d16:	0b5b      	lsrs	r3, r3, #13
    1d18:	035b      	lsls	r3, r3, #13
    1d1a:	4313      	orrs	r3, r2
    1d1c:	81a3      	strh	r3, [r4, #12]
		((Sercom *)hw)->USART.BAUD.FRAC.FP   = _usarts[i].fractional;
    1d1e:	7b8b      	ldrb	r3, [r1, #14]
    1d20:	2207      	movs	r2, #7
    1d22:	401a      	ands	r2, r3
    1d24:	89a3      	ldrh	r3, [r4, #12]
    1d26:	0352      	lsls	r2, r2, #13
    1d28:	04db      	lsls	r3, r3, #19
    1d2a:	0cdb      	lsrs	r3, r3, #19
    1d2c:	4313      	orrs	r3, r2
    1d2e:	81a3      	strh	r3, [r4, #12]
	hri_sercomusart_write_RXPL_reg(hw, _usarts[i].rxpl);
    1d30:	4a07      	ldr	r2, [pc, #28]	; (1d50 <_usart_init+0xec>)
    1d32:	0083      	lsls	r3, r0, #2
    1d34:	181d      	adds	r5, r3, r0
    1d36:	00a9      	lsls	r1, r5, #2
    1d38:	000d      	movs	r5, r1
    1d3a:	1851      	adds	r1, r2, r1
    1d3c:	7bc9      	ldrb	r1, [r1, #15]
	((Sercom *)hw)->USART.RXPL.reg = data;
    1d3e:	73a1      	strb	r1, [r4, #14]
	hri_sercomusart_write_DBGCTRL_reg(hw, _usarts[i].debug_ctrl);
    1d40:	1952      	adds	r2, r2, r5
    1d42:	7c12      	ldrb	r2, [r2, #16]
	((Sercom *)hw)->USART.DBGCTRL.reg = data;
    1d44:	2330      	movs	r3, #48	; 0x30
    1d46:	54e2      	strb	r2, [r4, r3]
}
    1d48:	2000      	movs	r0, #0
    1d4a:	bd70      	pop	{r4, r5, r6, pc}
    1d4c:	00001c21 	.word	0x00001c21
    1d50:	00009ba4 	.word	0x00009ba4

00001d54 <_usart_async_init>:
{
    1d54:	b570      	push	{r4, r5, r6, lr}
    1d56:	0006      	movs	r6, r0
    1d58:	000c      	movs	r4, r1
	ASSERT(device);
    1d5a:	1e43      	subs	r3, r0, #1
    1d5c:	4198      	sbcs	r0, r3
    1d5e:	b2c0      	uxtb	r0, r0
    1d60:	22c4      	movs	r2, #196	; 0xc4
    1d62:	4919      	ldr	r1, [pc, #100]	; (1dc8 <_usart_async_init+0x74>)
    1d64:	4b19      	ldr	r3, [pc, #100]	; (1dcc <_usart_async_init+0x78>)
    1d66:	4798      	blx	r3
	init_status = _usart_init(hw);
    1d68:	0020      	movs	r0, r4
    1d6a:	4b19      	ldr	r3, [pc, #100]	; (1dd0 <_usart_async_init+0x7c>)
    1d6c:	4798      	blx	r3
    1d6e:	1e05      	subs	r5, r0, #0
	if (init_status) {
    1d70:	d001      	beq.n	1d76 <_usart_async_init+0x22>
}
    1d72:	0028      	movs	r0, r5
    1d74:	bd70      	pop	{r4, r5, r6, pc}
	device->hw = hw;
    1d76:	61b4      	str	r4, [r6, #24]
	_sercom_init_irq_param(hw, (void *)device);
    1d78:	0031      	movs	r1, r6
    1d7a:	0020      	movs	r0, r4
    1d7c:	4b15      	ldr	r3, [pc, #84]	; (1dd4 <_usart_async_init+0x80>)
    1d7e:	4798      	blx	r3
	NVIC_DisableIRQ((IRQn_Type)_sercom_get_irq_num(hw));
    1d80:	0020      	movs	r0, r4
    1d82:	4b15      	ldr	r3, [pc, #84]	; (1dd8 <_usart_async_init+0x84>)
    1d84:	4798      	blx	r3
    1d86:	b243      	sxtb	r3, r0
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
    1d88:	2b00      	cmp	r3, #0
    1d8a:	db0a      	blt.n	1da2 <_usart_async_init+0x4e>
  {
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1d8c:	211f      	movs	r1, #31
    1d8e:	4001      	ands	r1, r0
    1d90:	2201      	movs	r2, #1
    1d92:	408a      	lsls	r2, r1
    1d94:	2180      	movs	r1, #128	; 0x80
    1d96:	4c11      	ldr	r4, [pc, #68]	; (1ddc <_usart_async_init+0x88>)
    1d98:	5062      	str	r2, [r4, r1]
  __ASM volatile ("dsb 0xF":::"memory");
    1d9a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
    1d9e:	f3bf 8f6f 	isb	sy
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
    1da2:	2b00      	cmp	r3, #0
    1da4:	db07      	blt.n	1db6 <_usart_async_init+0x62>
  {
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1da6:	211f      	movs	r1, #31
    1da8:	4001      	ands	r1, r0
    1daa:	2201      	movs	r2, #1
    1dac:	408a      	lsls	r2, r1
    1dae:	21c0      	movs	r1, #192	; 0xc0
    1db0:	0049      	lsls	r1, r1, #1
    1db2:	4c0a      	ldr	r4, [pc, #40]	; (1ddc <_usart_async_init+0x88>)
    1db4:	5062      	str	r2, [r4, r1]
  if ((int32_t)(IRQn) >= 0)
    1db6:	2b00      	cmp	r3, #0
    1db8:	dbdb      	blt.n	1d72 <_usart_async_init+0x1e>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1dba:	231f      	movs	r3, #31
    1dbc:	4018      	ands	r0, r3
    1dbe:	3b1e      	subs	r3, #30
    1dc0:	4083      	lsls	r3, r0
    1dc2:	4a06      	ldr	r2, [pc, #24]	; (1ddc <_usart_async_init+0x88>)
    1dc4:	6013      	str	r3, [r2, #0]
    1dc6:	e7d4      	b.n	1d72 <_usart_async_init+0x1e>
    1dc8:	00009bf4 	.word	0x00009bf4
    1dcc:	000019a5 	.word	0x000019a5
    1dd0:	00001c65 	.word	0x00001c65
    1dd4:	00001bd9 	.word	0x00001bd9
    1dd8:	00001bf1 	.word	0x00001bf1
    1ddc:	e000e100 	.word	0xe000e100

00001de0 <_usart_async_enable>:
	hri_sercomusart_set_CTRLA_ENABLE_bit(device->hw);
    1de0:	6982      	ldr	r2, [r0, #24]
	((Sercom *)hw)->USART.CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    1de2:	6813      	ldr	r3, [r2, #0]
    1de4:	2102      	movs	r1, #2
    1de6:	430b      	orrs	r3, r1
    1de8:	6013      	str	r3, [r2, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1dea:	69d3      	ldr	r3, [r2, #28]
    1dec:	079b      	lsls	r3, r3, #30
    1dee:	d1fc      	bne.n	1dea <_usart_async_enable+0xa>
}
    1df0:	4770      	bx	lr

00001df2 <_usart_async_write_byte>:
	hri_sercomusart_write_DATA_reg(device->hw, data);
    1df2:	6983      	ldr	r3, [r0, #24]
    1df4:	b289      	uxth	r1, r1
	((Sercom *)hw)->USART.DATA.reg = data;
    1df6:	8519      	strh	r1, [r3, #40]	; 0x28
}
    1df8:	4770      	bx	lr

00001dfa <_usart_async_enable_byte_sent_irq>:
	hri_sercomusart_set_INTEN_DRE_bit(device->hw);
    1dfa:	6983      	ldr	r3, [r0, #24]
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_DRE;
    1dfc:	2201      	movs	r2, #1
    1dfe:	759a      	strb	r2, [r3, #22]
}
    1e00:	4770      	bx	lr

00001e02 <_usart_async_enable_tx_done_irq>:
	hri_sercomusart_set_INTEN_TXC_bit(device->hw);
    1e02:	6983      	ldr	r3, [r0, #24]
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_TXC;
    1e04:	2202      	movs	r2, #2
    1e06:	759a      	strb	r2, [r3, #22]
}
    1e08:	4770      	bx	lr
	...

00001e0c <SERCOM5_Handler>:

	return NULL;
}

void SERCOM5_Handler(void)
{
    1e0c:	b510      	push	{r4, lr}
	_sercom_usart_interrupt_handler(_sercom5_dev);
    1e0e:	4b02      	ldr	r3, [pc, #8]	; (1e18 <SERCOM5_Handler+0xc>)
    1e10:	6818      	ldr	r0, [r3, #0]
    1e12:	4b02      	ldr	r3, [pc, #8]	; (1e1c <SERCOM5_Handler+0x10>)
    1e14:	4798      	blx	r3
}
    1e16:	bd10      	pop	{r4, pc}
    1e18:	20000a2c 	.word	0x20000a2c
    1e1c:	00001b75 	.word	0x00001b75

00001e20 <_spi_m_sync_init>:

int32_t _spi_m_sync_init(struct _spi_m_sync_dev *dev, void *const hw)
{
    1e20:	b570      	push	{r4, r5, r6, lr}
    1e22:	0006      	movs	r6, r0
    1e24:	000c      	movs	r4, r1
	uint8_t n = _sercom_get_hardware_index((const void *)hw_addr);
    1e26:	0008      	movs	r0, r1
    1e28:	4b71      	ldr	r3, [pc, #452]	; (1ff0 <_spi_m_sync_init+0x1d0>)
    1e2a:	4798      	blx	r3
	for (i = 0; i < sizeof(sercomspi_regs) / sizeof(struct sercomspi_regs_cfg); i++) {
    1e2c:	2300      	movs	r3, #0
    1e2e:	2b00      	cmp	r3, #0
    1e30:	d100      	bne.n	1e34 <_spi_m_sync_init+0x14>
    1e32:	e084      	b.n	1f3e <_spi_m_sync_init+0x11e>
	return NULL;
    1e34:	2500      	movs	r5, #0
	const struct sercomspi_regs_cfg *regs = _spi_get_regs((uint32_t)hw);

	ASSERT(dev && hw);
    1e36:	2e00      	cmp	r6, #0
    1e38:	d100      	bne.n	1e3c <_spi_m_sync_init+0x1c>
    1e3a:	e08d      	b.n	1f58 <_spi_m_sync_init+0x138>
    1e3c:	2c00      	cmp	r4, #0
    1e3e:	d100      	bne.n	1e42 <_spi_m_sync_init+0x22>
    1e40:	e088      	b.n	1f54 <_spi_m_sync_init+0x134>
    1e42:	2001      	movs	r0, #1
    1e44:	4a6b      	ldr	r2, [pc, #428]	; (1ff4 <_spi_m_sync_init+0x1d4>)
    1e46:	496c      	ldr	r1, [pc, #432]	; (1ff8 <_spi_m_sync_init+0x1d8>)
    1e48:	4b6c      	ldr	r3, [pc, #432]	; (1ffc <_spi_m_sync_init+0x1dc>)
    1e4a:	4798      	blx	r3

	if (regs == NULL) {
    1e4c:	2d00      	cmp	r5, #0
    1e4e:	d100      	bne.n	1e52 <_spi_m_sync_init+0x32>
    1e50:	e0cb      	b.n	1fea <_spi_m_sync_init+0x1ca>
	return ((Sercom *)hw)->SPI.SYNCBUSY.reg & reg;
    1e52:	69e3      	ldr	r3, [r4, #28]
		return ERR_INVALID_ARG;
	}

	if (!hri_sercomspi_is_syncing(hw, SERCOM_SPI_SYNCBUSY_SWRST)) {
    1e54:	07db      	lsls	r3, r3, #31
    1e56:	d421      	bmi.n	1e9c <_spi_m_sync_init+0x7c>
		uint32_t mode = regs->ctrla & SERCOM_SPI_CTRLA_MODE_Msk;
    1e58:	782a      	ldrb	r2, [r5, #0]
    1e5a:	786b      	ldrb	r3, [r5, #1]
    1e5c:	021b      	lsls	r3, r3, #8
    1e5e:	4313      	orrs	r3, r2
    1e60:	78aa      	ldrb	r2, [r5, #2]
    1e62:	0412      	lsls	r2, r2, #16
    1e64:	4313      	orrs	r3, r2
    1e66:	78ea      	ldrb	r2, [r5, #3]
    1e68:	0612      	lsls	r2, r2, #24
    1e6a:	431a      	orrs	r2, r3
    1e6c:	231c      	movs	r3, #28
    1e6e:	401a      	ands	r2, r3
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    1e70:	69e3      	ldr	r3, [r4, #28]
    1e72:	079b      	lsls	r3, r3, #30
    1e74:	d1fc      	bne.n	1e70 <_spi_m_sync_init+0x50>
	tmp = ((Sercom *)hw)->SPI.CTRLA.reg;
    1e76:	6823      	ldr	r3, [r4, #0]
		if (hri_sercomspi_get_CTRLA_reg(hw, SERCOM_SPI_CTRLA_ENABLE)) {
    1e78:	079b      	lsls	r3, r3, #30
    1e7a:	d509      	bpl.n	1e90 <_spi_m_sync_init+0x70>
	((Sercom *)hw)->SPI.CTRLA.reg &= ~SERCOM_SPI_CTRLA_ENABLE;
    1e7c:	6823      	ldr	r3, [r4, #0]
    1e7e:	2102      	movs	r1, #2
    1e80:	438b      	bics	r3, r1
    1e82:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    1e84:	69e3      	ldr	r3, [r4, #28]
    1e86:	079b      	lsls	r3, r3, #30
    1e88:	d1fc      	bne.n	1e84 <_spi_m_sync_init+0x64>
    1e8a:	69e3      	ldr	r3, [r4, #28]
    1e8c:	079b      	lsls	r3, r3, #30
    1e8e:	d4fc      	bmi.n	1e8a <_spi_m_sync_init+0x6a>
			hri_sercomspi_clear_CTRLA_ENABLE_bit(hw);
			hri_sercomspi_wait_for_sync(hw, SERCOM_SPI_SYNCBUSY_ENABLE);
		}
		hri_sercomspi_write_CTRLA_reg(hw, SERCOM_SPI_CTRLA_SWRST | mode);
    1e90:	2301      	movs	r3, #1
    1e92:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    1e94:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    1e96:	69e3      	ldr	r3, [r4, #28]
    1e98:	079b      	lsls	r3, r3, #30
    1e9a:	d1fc      	bne.n	1e96 <_spi_m_sync_init+0x76>
    1e9c:	69e3      	ldr	r3, [r4, #28]
    1e9e:	07db      	lsls	r3, r3, #31
    1ea0:	d4fc      	bmi.n	1e9c <_spi_m_sync_init+0x7c>
	}
	hri_sercomspi_wait_for_sync(hw, SERCOM_SPI_SYNCBUSY_SWRST);

	dev->prvt = hw;
    1ea2:	6034      	str	r4, [r6, #0]

	if ((regs->ctrla & SERCOM_SPI_CTRLA_MODE_Msk) == SERCOM_USART_CTRLA_MODE_SPI_SLAVE) {
    1ea4:	782b      	ldrb	r3, [r5, #0]
    1ea6:	786a      	ldrb	r2, [r5, #1]
    1ea8:	0212      	lsls	r2, r2, #8
    1eaa:	431a      	orrs	r2, r3
    1eac:	78ab      	ldrb	r3, [r5, #2]
    1eae:	041b      	lsls	r3, r3, #16
    1eb0:	431a      	orrs	r2, r3
    1eb2:	78eb      	ldrb	r3, [r5, #3]
    1eb4:	061b      	lsls	r3, r3, #24
    1eb6:	4313      	orrs	r3, r2
    1eb8:	221c      	movs	r2, #28
    1eba:	4013      	ands	r3, r2
    1ebc:	2b08      	cmp	r3, #8
    1ebe:	d04d      	beq.n	1f5c <_spi_m_sync_init+0x13c>
	ASSERT(hw && regs);
    1ec0:	2c00      	cmp	r4, #0
    1ec2:	d100      	bne.n	1ec6 <_spi_m_sync_init+0xa6>
    1ec4:	e08d      	b.n	1fe2 <_spi_m_sync_init+0x1c2>
    1ec6:	2d00      	cmp	r5, #0
    1ec8:	d100      	bne.n	1ecc <_spi_m_sync_init+0xac>
    1eca:	e088      	b.n	1fde <_spi_m_sync_init+0x1be>
    1ecc:	2001      	movs	r0, #1
    1ece:	4a4c      	ldr	r2, [pc, #304]	; (2000 <STACK_SIZE>)
    1ed0:	4949      	ldr	r1, [pc, #292]	; (1ff8 <_spi_m_sync_init+0x1d8>)
    1ed2:	4b4a      	ldr	r3, [pc, #296]	; (1ffc <_spi_m_sync_init+0x1dc>)
    1ed4:	4798      	blx	r3
	    hw, regs->ctrla & ~(SERCOM_SPI_CTRLA_IBON | SERCOM_SPI_CTRLA_ENABLE | SERCOM_SPI_CTRLA_SWRST));
    1ed6:	782b      	ldrb	r3, [r5, #0]
    1ed8:	786a      	ldrb	r2, [r5, #1]
    1eda:	0212      	lsls	r2, r2, #8
    1edc:	431a      	orrs	r2, r3
    1ede:	78ab      	ldrb	r3, [r5, #2]
    1ee0:	041b      	lsls	r3, r3, #16
    1ee2:	431a      	orrs	r2, r3
    1ee4:	78eb      	ldrb	r3, [r5, #3]
    1ee6:	061b      	lsls	r3, r3, #24
    1ee8:	4313      	orrs	r3, r2
	hri_sercomspi_write_CTRLA_reg(
    1eea:	4a46      	ldr	r2, [pc, #280]	; (2004 <STACK_SIZE+0x4>)
    1eec:	4013      	ands	r3, r2
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    1eee:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    1ef0:	69e3      	ldr	r3, [r4, #28]
    1ef2:	079b      	lsls	r3, r3, #30
    1ef4:	d1fc      	bne.n	1ef0 <_spi_m_sync_init+0xd0>
	    (regs->ctrlb
    1ef6:	792b      	ldrb	r3, [r5, #4]
    1ef8:	796a      	ldrb	r2, [r5, #5]
    1efa:	0212      	lsls	r2, r2, #8
    1efc:	431a      	orrs	r2, r3
    1efe:	79ab      	ldrb	r3, [r5, #6]
    1f00:	041b      	lsls	r3, r3, #16
    1f02:	431a      	orrs	r2, r3
    1f04:	79eb      	ldrb	r3, [r5, #7]
    1f06:	061b      	lsls	r3, r3, #24
    1f08:	4313      	orrs	r3, r2
	        | (SERCOM_SPI_CTRLB_RXEN));
    1f0a:	4a3f      	ldr	r2, [pc, #252]	; (2008 <STACK_SIZE+0x8>)
    1f0c:	4013      	ands	r3, r2
	hri_sercomspi_write_CTRLB_reg(
    1f0e:	2280      	movs	r2, #128	; 0x80
    1f10:	0292      	lsls	r2, r2, #10
    1f12:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.CTRLB.reg = data;
    1f14:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    1f16:	69e3      	ldr	r3, [r4, #28]
    1f18:	075b      	lsls	r3, r3, #29
    1f1a:	d1fc      	bne.n	1f16 <_spi_m_sync_init+0xf6>
	hri_sercomspi_write_BAUD_reg(hw, regs->baud);
    1f1c:	7b2b      	ldrb	r3, [r5, #12]
	((Sercom *)hw)->SPI.BAUD.reg = data;
    1f1e:	7323      	strb	r3, [r4, #12]
	hri_sercomspi_write_DBGCTRL_reg(hw, regs->dbgctrl);
    1f20:	7b6a      	ldrb	r2, [r5, #13]
	((Sercom *)hw)->SPI.DBGCTRL.reg = data;
    1f22:	2330      	movs	r3, #48	; 0x30
    1f24:	54e2      	strb	r2, [r4, r3]
	} else {
		_spi_load_regs_master(hw, regs);
	}

	/* Load character size from default hardware configuration */
	dev->char_size = ((regs->ctrlb & SERCOM_SPI_CTRLB_CHSIZE_Msk) == 0) ? 1 : 2;
    1f26:	792b      	ldrb	r3, [r5, #4]
    1f28:	075b      	lsls	r3, r3, #29
    1f2a:	d15c      	bne.n	1fe6 <_spi_m_sync_init+0x1c6>
    1f2c:	2301      	movs	r3, #1
    1f2e:	7133      	strb	r3, [r6, #4]

	dev->dummy_byte = regs->dummy_byte;
    1f30:	7baa      	ldrb	r2, [r5, #14]
    1f32:	7beb      	ldrb	r3, [r5, #15]
    1f34:	021b      	lsls	r3, r3, #8
    1f36:	4313      	orrs	r3, r2
    1f38:	80f3      	strh	r3, [r6, #6]

	return ERR_NONE;
    1f3a:	2000      	movs	r0, #0
}
    1f3c:	bd70      	pop	{r4, r5, r6, pc}
		if (sercomspi_regs[i].n == n) {
    1f3e:	2800      	cmp	r0, #0
    1f40:	d002      	beq.n	1f48 <_spi_m_sync_init+0x128>
	for (i = 0; i < sizeof(sercomspi_regs) / sizeof(struct sercomspi_regs_cfg); i++) {
    1f42:	3301      	adds	r3, #1
    1f44:	b2db      	uxtb	r3, r3
    1f46:	e772      	b.n	1e2e <_spi_m_sync_init+0xe>
			return &sercomspi_regs[i];
    1f48:	011d      	lsls	r5, r3, #4
    1f4a:	18ea      	adds	r2, r5, r3
    1f4c:	4d2f      	ldr	r5, [pc, #188]	; (200c <STACK_SIZE+0xc>)
    1f4e:	353c      	adds	r5, #60	; 0x3c
    1f50:	18ad      	adds	r5, r5, r2
    1f52:	e770      	b.n	1e36 <_spi_m_sync_init+0x16>
	ASSERT(dev && hw);
    1f54:	2000      	movs	r0, #0
    1f56:	e775      	b.n	1e44 <_spi_m_sync_init+0x24>
    1f58:	2000      	movs	r0, #0
    1f5a:	e773      	b.n	1e44 <_spi_m_sync_init+0x24>
	ASSERT(hw && regs);
    1f5c:	2c00      	cmp	r4, #0
    1f5e:	d03c      	beq.n	1fda <_spi_m_sync_init+0x1ba>
    1f60:	2d00      	cmp	r5, #0
    1f62:	d038      	beq.n	1fd6 <_spi_m_sync_init+0x1b6>
    1f64:	2001      	movs	r0, #1
    1f66:	4a2a      	ldr	r2, [pc, #168]	; (2010 <STACK_SIZE+0x10>)
    1f68:	4923      	ldr	r1, [pc, #140]	; (1ff8 <_spi_m_sync_init+0x1d8>)
    1f6a:	4b24      	ldr	r3, [pc, #144]	; (1ffc <_spi_m_sync_init+0x1dc>)
    1f6c:	4798      	blx	r3
	    hw, regs->ctrla & ~(SERCOM_SPI_CTRLA_IBON | SERCOM_SPI_CTRLA_ENABLE | SERCOM_SPI_CTRLA_SWRST));
    1f6e:	782b      	ldrb	r3, [r5, #0]
    1f70:	786a      	ldrb	r2, [r5, #1]
    1f72:	0212      	lsls	r2, r2, #8
    1f74:	431a      	orrs	r2, r3
    1f76:	78ab      	ldrb	r3, [r5, #2]
    1f78:	041b      	lsls	r3, r3, #16
    1f7a:	431a      	orrs	r2, r3
    1f7c:	78eb      	ldrb	r3, [r5, #3]
    1f7e:	061b      	lsls	r3, r3, #24
    1f80:	4313      	orrs	r3, r2
	hri_sercomspi_write_CTRLA_reg(
    1f82:	4a20      	ldr	r2, [pc, #128]	; (2004 <STACK_SIZE+0x4>)
    1f84:	4013      	ands	r3, r2
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    1f86:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    1f88:	69e3      	ldr	r3, [r4, #28]
    1f8a:	079b      	lsls	r3, r3, #30
    1f8c:	d1fc      	bne.n	1f88 <_spi_m_sync_init+0x168>
	                              (regs->ctrlb & ~(SERCOM_SPI_CTRLB_MSSEN))
    1f8e:	792b      	ldrb	r3, [r5, #4]
    1f90:	796a      	ldrb	r2, [r5, #5]
    1f92:	0212      	lsls	r2, r2, #8
    1f94:	431a      	orrs	r2, r3
    1f96:	79ab      	ldrb	r3, [r5, #6]
    1f98:	041b      	lsls	r3, r3, #16
    1f9a:	431a      	orrs	r2, r3
    1f9c:	79eb      	ldrb	r3, [r5, #7]
    1f9e:	061b      	lsls	r3, r3, #24
    1fa0:	4313      	orrs	r3, r2
	                                  | (SERCOM_SPI_CTRLB_RXEN | SERCOM_SPI_CTRLB_SSDE | SERCOM_SPI_CTRLB_PLOADEN));
    1fa2:	4a1c      	ldr	r2, [pc, #112]	; (2014 <STACK_SIZE+0x14>)
    1fa4:	4013      	ands	r3, r2
	hri_sercomspi_write_CTRLB_reg(hw,
    1fa6:	4a1c      	ldr	r2, [pc, #112]	; (2018 <STACK_SIZE+0x18>)
    1fa8:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.CTRLB.reg = data;
    1faa:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    1fac:	69e3      	ldr	r3, [r4, #28]
    1fae:	075b      	lsls	r3, r3, #29
    1fb0:	d1fc      	bne.n	1fac <_spi_m_sync_init+0x18c>
	hri_sercomspi_write_ADDR_reg(hw, regs->addr);
    1fb2:	7a2b      	ldrb	r3, [r5, #8]
    1fb4:	7a6a      	ldrb	r2, [r5, #9]
    1fb6:	0212      	lsls	r2, r2, #8
    1fb8:	431a      	orrs	r2, r3
    1fba:	7aab      	ldrb	r3, [r5, #10]
    1fbc:	041b      	lsls	r3, r3, #16
    1fbe:	431a      	orrs	r2, r3
    1fc0:	7aeb      	ldrb	r3, [r5, #11]
    1fc2:	061b      	lsls	r3, r3, #24
    1fc4:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.ADDR.reg = data;
    1fc6:	6263      	str	r3, [r4, #36]	; 0x24
	hri_sercomspi_write_DBGCTRL_reg(hw, regs->dbgctrl);
    1fc8:	7b6a      	ldrb	r2, [r5, #13]
	((Sercom *)hw)->SPI.DBGCTRL.reg = data;
    1fca:	2330      	movs	r3, #48	; 0x30
    1fcc:	54e2      	strb	r2, [r4, r3]
	return ((Sercom *)hw)->SPI.SYNCBUSY.reg & reg;
    1fce:	69e3      	ldr	r3, [r4, #28]
	while (hri_sercomspi_is_syncing(hw, 0xFFFFFFFF))
    1fd0:	2b00      	cmp	r3, #0
    1fd2:	d1fc      	bne.n	1fce <_spi_m_sync_init+0x1ae>
    1fd4:	e7a7      	b.n	1f26 <_spi_m_sync_init+0x106>
	ASSERT(hw && regs);
    1fd6:	2000      	movs	r0, #0
    1fd8:	e7c5      	b.n	1f66 <_spi_m_sync_init+0x146>
    1fda:	2000      	movs	r0, #0
    1fdc:	e7c3      	b.n	1f66 <_spi_m_sync_init+0x146>
	ASSERT(hw && regs);
    1fde:	2000      	movs	r0, #0
    1fe0:	e775      	b.n	1ece <_spi_m_sync_init+0xae>
    1fe2:	2000      	movs	r0, #0
    1fe4:	e773      	b.n	1ece <_spi_m_sync_init+0xae>
	dev->char_size = ((regs->ctrlb & SERCOM_SPI_CTRLB_CHSIZE_Msk) == 0) ? 1 : 2;
    1fe6:	2302      	movs	r3, #2
    1fe8:	e7a1      	b.n	1f2e <_spi_m_sync_init+0x10e>
		return ERR_INVALID_ARG;
    1fea:	200d      	movs	r0, #13
    1fec:	4240      	negs	r0, r0
    1fee:	e7a5      	b.n	1f3c <_spi_m_sync_init+0x11c>
    1ff0:	00001b65 	.word	0x00001b65
    1ff4:	00000952 	.word	0x00000952
    1ff8:	00009bf4 	.word	0x00009bf4
    1ffc:	000019a5 	.word	0x000019a5
    2000:	00000917 	.word	0x00000917
    2004:	fffffefc 	.word	0xfffffefc
    2008:	fffd1dbf 	.word	0xfffd1dbf
    200c:	00009ba4 	.word	0x00009ba4
    2010:	0000092b 	.word	0x0000092b
    2014:	fffdddbf 	.word	0xfffdddbf
    2018:	00020240 	.word	0x00020240

0000201c <_spi_m_sync_enable>:
{
	return _spi_deinit(dev->prvt);
}

int32_t _spi_m_sync_enable(struct _spi_m_sync_dev *dev)
{
    201c:	b510      	push	{r4, lr}
    201e:	1e04      	subs	r4, r0, #0
	ASSERT(dev && dev->prvt);
    2020:	d00d      	beq.n	203e <_spi_m_sync_enable+0x22>
    2022:	6803      	ldr	r3, [r0, #0]
    2024:	2b00      	cmp	r3, #0
    2026:	d008      	beq.n	203a <_spi_m_sync_enable+0x1e>
    2028:	2001      	movs	r0, #1
    202a:	4a06      	ldr	r2, [pc, #24]	; (2044 <_spi_m_sync_enable+0x28>)
    202c:	4906      	ldr	r1, [pc, #24]	; (2048 <_spi_m_sync_enable+0x2c>)
    202e:	4b07      	ldr	r3, [pc, #28]	; (204c <_spi_m_sync_enable+0x30>)
    2030:	4798      	blx	r3

	return _spi_sync_enable(dev->prvt);
    2032:	6820      	ldr	r0, [r4, #0]
    2034:	4b06      	ldr	r3, [pc, #24]	; (2050 <_spi_m_sync_enable+0x34>)
    2036:	4798      	blx	r3
}
    2038:	bd10      	pop	{r4, pc}
	ASSERT(dev && dev->prvt);
    203a:	2000      	movs	r0, #0
    203c:	e7f5      	b.n	202a <_spi_m_sync_enable+0xe>
    203e:	2000      	movs	r0, #0
    2040:	e7f3      	b.n	202a <_spi_m_sync_enable+0xe>
    2042:	46c0      	nop			; (mov r8, r8)
    2044:	000009ad 	.word	0x000009ad
    2048:	00009bf4 	.word	0x00009bf4
    204c:	000019a5 	.word	0x000019a5
    2050:	00001c01 	.word	0x00001c01

00002054 <_spi_m_sync_trans>:

	return ERR_NONE;
}

int32_t _spi_m_sync_trans(struct _spi_m_sync_dev *dev, const struct spi_msg *msg)
{
    2054:	b5f0      	push	{r4, r5, r6, r7, lr}
    2056:	46ce      	mov	lr, r9
    2058:	4647      	mov	r7, r8
    205a:	b580      	push	{r7, lr}
    205c:	b089      	sub	sp, #36	; 0x24
    205e:	4681      	mov	r9, r0
    2060:	000d      	movs	r5, r1
	void *                 hw   = dev->prvt;
    2062:	6804      	ldr	r4, [r0, #0]
	int32_t                rc   = 0;
	struct _spi_trans_ctrl ctrl = {msg->txbuf, msg->rxbuf, 0, 0, dev->char_size};
    2064:	680b      	ldr	r3, [r1, #0]
    2066:	9303      	str	r3, [sp, #12]
    2068:	684b      	ldr	r3, [r1, #4]
    206a:	9304      	str	r3, [sp, #16]
    206c:	2300      	movs	r3, #0
    206e:	9305      	str	r3, [sp, #20]
    2070:	9306      	str	r3, [sp, #24]
    2072:	7906      	ldrb	r6, [r0, #4]

	ASSERT(dev && hw);
    2074:	2800      	cmp	r0, #0
    2076:	d014      	beq.n	20a2 <_spi_m_sync_trans+0x4e>
    2078:	2c00      	cmp	r4, #0
    207a:	d010      	beq.n	209e <_spi_m_sync_trans+0x4a>
    207c:	2001      	movs	r0, #1
    207e:	4a37      	ldr	r2, [pc, #220]	; (215c <_spi_m_sync_trans+0x108>)
    2080:	4937      	ldr	r1, [pc, #220]	; (2160 <_spi_m_sync_trans+0x10c>)
    2082:	4b38      	ldr	r3, [pc, #224]	; (2164 <_spi_m_sync_trans+0x110>)
    2084:	4798      	blx	r3
    2086:	69e3      	ldr	r3, [r4, #28]

	/* If settings are not applied (pending), we can not go on */
	if (hri_sercomspi_is_syncing(
    2088:	075b      	lsls	r3, r3, #29
    208a:	d164      	bne.n	2156 <_spi_m_sync_trans+0x102>
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    208c:	69e3      	ldr	r3, [r4, #28]
    208e:	079b      	lsls	r3, r3, #30
    2090:	d1fc      	bne.n	208c <_spi_m_sync_trans+0x38>
	tmp = ((Sercom *)hw)->SPI.CTRLA.reg;
    2092:	6823      	ldr	r3, [r4, #0]
	        hw, (SERCOM_SPI_SYNCBUSY_SWRST | SERCOM_SPI_SYNCBUSY_ENABLE | SERCOM_SPI_SYNCBUSY_CTRLB))) {
		return ERR_BUSY;
	}

	/* SPI must be enabled to start synchronous transfer */
	if (!hri_sercomspi_get_CTRLA_ENABLE_bit(hw)) {
    2094:	079b      	lsls	r3, r3, #30
    2096:	d420      	bmi.n	20da <_spi_m_sync_trans+0x86>
		return ERR_NOT_INITIALIZED;
    2098:	2014      	movs	r0, #20
    209a:	4240      	negs	r0, r0
    209c:	e056      	b.n	214c <_spi_m_sync_trans+0xf8>
	ASSERT(dev && hw);
    209e:	2000      	movs	r0, #0
    20a0:	e7ed      	b.n	207e <_spi_m_sync_trans+0x2a>
    20a2:	2000      	movs	r0, #0
    20a4:	e7eb      	b.n	207e <_spi_m_sync_trans+0x2a>
		return false;
    20a6:	2200      	movs	r2, #0
    20a8:	e02d      	b.n	2106 <_spi_m_sync_trans+0xb2>
			data |= (*ctrl->txbuf) << 8;
    20aa:	7848      	ldrb	r0, [r1, #1]
    20ac:	0200      	lsls	r0, r0, #8
    20ae:	4647      	mov	r7, r8
    20b0:	4307      	orrs	r7, r0
    20b2:	46b8      	mov	r8, r7
			ctrl->txbuf++;
    20b4:	3102      	adds	r1, #2
    20b6:	9103      	str	r1, [sp, #12]
	ctrl->txcnt++;
    20b8:	3201      	adds	r2, #1
    20ba:	9205      	str	r2, [sp, #20]
	((Sercom *)hw)->SPI.DATA.reg = data;
    20bc:	4642      	mov	r2, r8
    20be:	62a2      	str	r2, [r4, #40]	; 0x28
	if (SERCOM_SPI_INTFLAG_ERROR & iflag) {
    20c0:	b25b      	sxtb	r3, r3
    20c2:	2b00      	cmp	r3, #0
    20c4:	db35      	blt.n	2132 <_spi_m_sync_trans+0xde>
	return ERR_NONE;
    20c6:	2000      	movs	r0, #0
			}
		}

		rc = _spi_err_check(iflag, hw);

		if (rc < 0) {
    20c8:	2800      	cmp	r0, #0
    20ca:	db3a      	blt.n	2142 <_spi_m_sync_trans+0xee>
			break;
		}
		if (ctrl.txcnt >= msg->size && ctrl.rxcnt >= msg->size) {
    20cc:	9805      	ldr	r0, [sp, #20]
    20ce:	68ab      	ldr	r3, [r5, #8]
    20d0:	4298      	cmp	r0, r3
    20d2:	d302      	bcc.n	20da <_spi_m_sync_trans+0x86>
    20d4:	9a06      	ldr	r2, [sp, #24]
    20d6:	4293      	cmp	r3, r2
    20d8:	d933      	bls.n	2142 <_spi_m_sync_trans+0xee>
	return ((Sercom *)hw)->SPI.INTFLAG.reg;
    20da:	7e23      	ldrb	r3, [r4, #24]
    20dc:	b2db      	uxtb	r3, r3
	if (!(iflag & SERCOM_SPI_INTFLAG_RXC)) {
    20de:	075a      	lsls	r2, r3, #29
    20e0:	d5e1      	bpl.n	20a6 <_spi_m_sync_trans+0x52>
	return ((Sercom *)hw)->SPI.DATA.reg;
    20e2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
	if (ctrl->rxbuf) {
    20e4:	9a04      	ldr	r2, [sp, #16]
    20e6:	2a00      	cmp	r2, #0
    20e8:	d008      	beq.n	20fc <_spi_m_sync_trans+0xa8>
		*ctrl->rxbuf++ = (uint8_t)data;
    20ea:	1c50      	adds	r0, r2, #1
    20ec:	9004      	str	r0, [sp, #16]
    20ee:	7011      	strb	r1, [r2, #0]
		if (ctrl->char_size > 1) {
    20f0:	2e01      	cmp	r6, #1
    20f2:	d903      	bls.n	20fc <_spi_m_sync_trans+0xa8>
			*ctrl->rxbuf++ = (uint8_t)(data >> 8);
    20f4:	1c90      	adds	r0, r2, #2
    20f6:	9004      	str	r0, [sp, #16]
    20f8:	0a09      	lsrs	r1, r1, #8
    20fa:	7051      	strb	r1, [r2, #1]
	ctrl->rxcnt++;
    20fc:	9a06      	ldr	r2, [sp, #24]
    20fe:	9201      	str	r2, [sp, #4]
    2100:	3201      	adds	r2, #1
    2102:	9206      	str	r2, [sp, #24]
	return true;
    2104:	2201      	movs	r2, #1
		if (!_spi_rx_check_and_receive(hw, iflag, &ctrl)) {
    2106:	2a00      	cmp	r2, #0
    2108:	d1da      	bne.n	20c0 <_spi_m_sync_trans+0x6c>
			if (ctrl.rxcnt >= ctrl.txcnt) {
    210a:	9906      	ldr	r1, [sp, #24]
    210c:	9a05      	ldr	r2, [sp, #20]
    210e:	4291      	cmp	r1, r2
    2110:	d3d6      	bcc.n	20c0 <_spi_m_sync_trans+0x6c>
				_spi_tx_check_and_send(hw, iflag, &ctrl, dev->dummy_byte);
    2112:	4649      	mov	r1, r9
    2114:	88c8      	ldrh	r0, [r1, #6]
	if (!(SERCOM_SPI_INTFLAG_DRE & iflag)) {
    2116:	07d9      	lsls	r1, r3, #31
    2118:	d5d2      	bpl.n	20c0 <_spi_m_sync_trans+0x6c>
	if (ctrl->txbuf) {
    211a:	9903      	ldr	r1, [sp, #12]
    211c:	2900      	cmp	r1, #0
    211e:	d006      	beq.n	212e <_spi_m_sync_trans+0xda>
		data = *ctrl->txbuf++;
    2120:	1c48      	adds	r0, r1, #1
    2122:	9003      	str	r0, [sp, #12]
    2124:	7808      	ldrb	r0, [r1, #0]
    2126:	4680      	mov	r8, r0
		if (ctrl->char_size > 1) {
    2128:	2e01      	cmp	r6, #1
    212a:	d8be      	bhi.n	20aa <_spi_m_sync_trans+0x56>
    212c:	e7c4      	b.n	20b8 <_spi_m_sync_trans+0x64>
		data = dummy;
    212e:	4680      	mov	r8, r0
    2130:	e7c2      	b.n	20b8 <_spi_m_sync_trans+0x64>
	((Sercom *)hw)->SPI.STATUS.reg = mask;
    2132:	2301      	movs	r3, #1
    2134:	425b      	negs	r3, r3
    2136:	8363      	strh	r3, [r4, #26]
	((Sercom *)hw)->SPI.INTFLAG.reg = mask;
    2138:	3381      	adds	r3, #129	; 0x81
    213a:	7623      	strb	r3, [r4, #24]
		return ERR_OVERFLOW;
    213c:	2013      	movs	r0, #19
    213e:	4240      	negs	r0, r0
    2140:	e7c2      	b.n	20c8 <_spi_m_sync_trans+0x74>
	tmp = ((Sercom *)hw)->SPI.INTFLAG.reg;
    2142:	7e23      	ldrb	r3, [r4, #24]
	while (!(hri_sercomspi_get_INTFLAG_reg(hw, SERCOM_SPI_INTFLAG_TXC | SERCOM_SPI_INTFLAG_DRE))) {
    2144:	079b      	lsls	r3, r3, #30
    2146:	d0fc      	beq.n	2142 <_spi_m_sync_trans+0xee>
	((Sercom *)hw)->SPI.INTFLAG.reg = mask;
    2148:	2303      	movs	r3, #3
    214a:	7623      	strb	r3, [r4, #24]
	}
	/* Wait until SPI bus idle */
	_spi_wait_bus_idle(hw);

	return rc;
}
    214c:	b009      	add	sp, #36	; 0x24
    214e:	bc0c      	pop	{r2, r3}
    2150:	4690      	mov	r8, r2
    2152:	4699      	mov	r9, r3
    2154:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return ERR_BUSY;
    2156:	2004      	movs	r0, #4
    2158:	4240      	negs	r0, r0
    215a:	e7f7      	b.n	214c <_spi_m_sync_trans+0xf8>
    215c:	00000ab2 	.word	0x00000ab2
    2160:	00009bf4 	.word	0x00009bf4
    2164:	000019a5 	.word	0x000019a5

00002168 <_sysctrl_init_sources>:
}

static inline hri_sysctrl_osc8m_reg_t hri_sysctrl_read_OSC8M_CALIB_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Sysctrl *)hw)->OSC8M.reg;
    2168:	4a0e      	ldr	r2, [pc, #56]	; (21a4 <_sysctrl_init_sources+0x3c>)
    216a:	6a11      	ldr	r1, [r2, #32]
	tmp = (tmp & SYSCTRL_OSC8M_CALIB_Msk) >> SYSCTRL_OSC8M_CALIB_Pos;
    216c:	0c09      	lsrs	r1, r1, #16
}

static inline hri_sysctrl_osc8m_reg_t hri_sysctrl_read_OSC8M_FRANGE_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Sysctrl *)hw)->OSC8M.reg;
    216e:	6a13      	ldr	r3, [r2, #32]

#if CONF_OSC8M_CONFIG == 1
	calib = hri_sysctrl_read_OSC8M_CALIB_bf(hw);

	hri_sysctrl_write_OSC8M_reg(hw,
	                            SYSCTRL_OSC8M_FRANGE(hri_sysctrl_read_OSC8M_FRANGE_bf(hw)) |
    2170:	0f9b      	lsrs	r3, r3, #30
    2172:	079b      	lsls	r3, r3, #30
#if CONF_OSC8M_OVERWRITE_CALIBRATION == 1
	                                SYSCTRL_OSC8M_CALIB(CONF_OSC8M_CALIB) |
#else
	                                SYSCTRL_OSC8M_CALIB(calib) |
    2174:	0409      	lsls	r1, r1, #16
    2176:	480c      	ldr	r0, [pc, #48]	; (21a8 <_sysctrl_init_sources+0x40>)
    2178:	4001      	ands	r1, r0
#endif
	                                SYSCTRL_OSC8M_PRESC(CONF_OSC8M_PRESC)
	                                | (CONF_OSC8M_RUNSTDBY << SYSCTRL_OSC8M_RUNSTDBY_Pos)
    217a:	430b      	orrs	r3, r1
	hri_sysctrl_write_OSC8M_reg(hw,
    217c:	2102      	movs	r1, #2
    217e:	430b      	orrs	r3, r1
}

static inline void hri_sysctrl_write_OSC8M_reg(const void *const hw, hri_sysctrl_osc8m_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->OSC8M.reg = data;
    2180:	6213      	str	r3, [r2, #32]
	((Sysctrl *)hw)->OSC32K.reg |= SYSCTRL_OSC32K_ENABLE;
    2182:	6993      	ldr	r3, [r2, #24]
    2184:	430b      	orrs	r3, r1
    2186:	6193      	str	r3, [r2, #24]
	tmp = ((Sysctrl *)hw)->OSCULP32K.reg;
    2188:	7f13      	ldrb	r3, [r2, #28]
	tmp = (tmp & SYSCTRL_OSCULP32K_CALIB_Msk) >> SYSCTRL_OSCULP32K_CALIB_Pos;
    218a:	311d      	adds	r1, #29
    218c:	400b      	ands	r3, r1
	((Sysctrl *)hw)->OSCULP32K.reg = data;
    218e:	7713      	strb	r3, [r2, #28]
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_OSC8MRDY) >> SYSCTRL_PCLKSR_OSC8MRDY_Pos;
    2190:	4b04      	ldr	r3, [pc, #16]	; (21a4 <_sysctrl_init_sources+0x3c>)
    2192:	68db      	ldr	r3, [r3, #12]
#endif
#endif

#if CONF_OSC8M_CONFIG == 1
#if CONF_OSC8M_ENABLE == 1
	while (!hri_sysctrl_get_PCLKSR_OSC8MRDY_bit(hw))
    2194:	071b      	lsls	r3, r3, #28
    2196:	d5fb      	bpl.n	2190 <_sysctrl_init_sources+0x28>
	((Sysctrl *)hw)->OSC8M.reg |= SYSCTRL_OSC8M_ONDEMAND;
    2198:	4a02      	ldr	r2, [pc, #8]	; (21a4 <_sysctrl_init_sources+0x3c>)
    219a:	6a13      	ldr	r3, [r2, #32]
    219c:	2180      	movs	r1, #128	; 0x80
    219e:	430b      	orrs	r3, r1
    21a0:	6213      	str	r3, [r2, #32]
	hri_sysctrl_set_OSC8M_ONDEMAND_bit(hw);
#endif
#endif

	(void)calib, (void)hw;
}
    21a2:	4770      	bx	lr
    21a4:	40000800 	.word	0x40000800
    21a8:	0fff0000 	.word	0x0fff0000

000021ac <_sysctrl_init_referenced_generators>:
	((Sysctrl *)hw)->OSC32K.reg &= ~SYSCTRL_OSC32K_ENABLE;
    21ac:	4a02      	ldr	r2, [pc, #8]	; (21b8 <_sysctrl_init_referenced_generators+0xc>)
    21ae:	6993      	ldr	r3, [r2, #24]
    21b0:	2102      	movs	r1, #2
    21b2:	438b      	bics	r3, r1
    21b4:	6193      	str	r3, [r2, #24]
	/* Disable after all possible configurations needs sync written. */
	hri_sysctrl_clear_OSC32K_ENABLE_bit(hw);
#endif

	(void)hw;
}
    21b6:	4770      	bx	lr
    21b8:	40000800 	.word	0x40000800

000021bc <main>:
uint16_t totalSize, freeSpace, usedSpace;

/***End***/

int main(void)
{
    21bc:	b5f0      	push	{r4, r5, r6, r7, lr}
    21be:	46c6      	mov	lr, r8
    21c0:	b500      	push	{lr}
    21c2:	b084      	sub	sp, #16
	/* Initializes MCU, drivers and middle-ware */
	atmel_start_init();
    21c4:	4b58      	ldr	r3, [pc, #352]	; (2328 <main+0x16c>)
    21c6:	4798      	blx	r3
	
	err = e_25LCxx_basic_initialize(E_25LC160x_VARIANT, E_25LCXX_PAGE_SIZE_16_BYTE);
    21c8:	2110      	movs	r1, #16
    21ca:	2002      	movs	r0, #2
    21cc:	4b57      	ldr	r3, [pc, #348]	; (232c <main+0x170>)
    21ce:	4798      	blx	r3
    21d0:	4b57      	ldr	r3, [pc, #348]	; (2330 <main+0x174>)
    21d2:	4698      	mov	r8, r3
    21d4:	6018      	str	r0, [r3, #0]
	E_25LCxx_info(&e_25LCxxInfo);
    21d6:	4d57      	ldr	r5, [pc, #348]	; (2334 <main+0x178>)
    21d8:	0028      	movs	r0, r5
    21da:	4b57      	ldr	r3, [pc, #348]	; (2338 <main+0x17c>)
    21dc:	4798      	blx	r3
	
	e_25LCxx_interface_debug_print("Chip Name: \t%s\r\n", e_25LCxxInfo.chip_name);
    21de:	0029      	movs	r1, r5
    21e0:	4856      	ldr	r0, [pc, #344]	; (233c <main+0x180>)
    21e2:	4c57      	ldr	r4, [pc, #348]	; (2340 <main+0x184>)
    21e4:	47a0      	blx	r4
	e_25LCxx_interface_debug_print("Manufacture: \t%s\r\n", e_25LCxxInfo.manufacturer_name);
    21e6:	0029      	movs	r1, r5
    21e8:	310a      	adds	r1, #10
    21ea:	4856      	ldr	r0, [pc, #344]	; (2344 <main+0x188>)
    21ec:	47a0      	blx	r4
	e_25LCxx_interface_debug_print("Interface: \t%s\r\n", e_25LCxxInfo.interface);
    21ee:	0029      	movs	r1, r5
    21f0:	3123      	adds	r1, #35	; 0x23
    21f2:	4855      	ldr	r0, [pc, #340]	; (2348 <main+0x18c>)
    21f4:	47a0      	blx	r4
	e_25LCxx_interface_debug_print("Supply Volt Max: \t%.1fV\r\n", e_25LCxxInfo.supply_voltage_max_v);
    21f6:	4e55      	ldr	r6, [pc, #340]	; (234c <main+0x190>)
    21f8:	6b28      	ldr	r0, [r5, #48]	; 0x30
    21fa:	47b0      	blx	r6
    21fc:	0002      	movs	r2, r0
    21fe:	000b      	movs	r3, r1
    2200:	4853      	ldr	r0, [pc, #332]	; (2350 <main+0x194>)
    2202:	47a0      	blx	r4
	e_25LCxx_interface_debug_print("Supply Volt Min: \t%.1fV\r\n", e_25LCxxInfo.supply_voltage_min_v);
    2204:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
    2206:	47b0      	blx	r6
    2208:	0002      	movs	r2, r0
    220a:	000b      	movs	r3, r1
    220c:	4851      	ldr	r0, [pc, #324]	; (2354 <main+0x198>)
    220e:	47a0      	blx	r4
	e_25LCxx_interface_debug_print("Maximum Current: \t%.1fmA\r\n", e_25LCxxInfo.max_current_ma);
    2210:	6b68      	ldr	r0, [r5, #52]	; 0x34
    2212:	47b0      	blx	r6
    2214:	0002      	movs	r2, r0
    2216:	000b      	movs	r3, r1
    2218:	484f      	ldr	r0, [pc, #316]	; (2358 <main+0x19c>)
    221a:	47a0      	blx	r4
	e_25LCxx_interface_debug_print("Temperature Max: \t%.1fC\r\n", e_25LCxxInfo.temperature_max);
    221c:	6be8      	ldr	r0, [r5, #60]	; 0x3c
    221e:	47b0      	blx	r6
    2220:	0002      	movs	r2, r0
    2222:	000b      	movs	r3, r1
    2224:	484d      	ldr	r0, [pc, #308]	; (235c <main+0x1a0>)
    2226:	47a0      	blx	r4
	e_25LCxx_interface_debug_print("Temperature Min: \t%.1fC\r\n", e_25LCxxInfo.temperature_min);
    2228:	6ba8      	ldr	r0, [r5, #56]	; 0x38
    222a:	47b0      	blx	r6
    222c:	0002      	movs	r2, r0
    222e:	000b      	movs	r3, r1
    2230:	484b      	ldr	r0, [pc, #300]	; (2360 <main+0x1a4>)
    2232:	47a0      	blx	r4
	e_25LCxx_interface_debug_print("Driver Version: \tV%.1f.%.2d\r\n", (e_25LCxxInfo.driver_version /1000), (uint8_t)(e_25LCxxInfo.driver_version - (uint8_t)(e_25LCxxInfo.driver_version /100)*100));
    2234:	6c2d      	ldr	r5, [r5, #64]	; 0x40
    2236:	4f4b      	ldr	r7, [pc, #300]	; (2364 <main+0x1a8>)
    2238:	494b      	ldr	r1, [pc, #300]	; (2368 <main+0x1ac>)
    223a:	1c28      	adds	r0, r5, #0
    223c:	47b8      	blx	r7
    223e:	9003      	str	r0, [sp, #12]
    2240:	494a      	ldr	r1, [pc, #296]	; (236c <main+0x1b0>)
    2242:	1c28      	adds	r0, r5, #0
    2244:	47b8      	blx	r7
    2246:	4f4a      	ldr	r7, [pc, #296]	; (2370 <main+0x1b4>)
    2248:	47b8      	blx	r7
    224a:	b2c3      	uxtb	r3, r0
    224c:	2064      	movs	r0, #100	; 0x64
    224e:	4358      	muls	r0, r3
    2250:	4b48      	ldr	r3, [pc, #288]	; (2374 <main+0x1b8>)
    2252:	4798      	blx	r3
    2254:	1c01      	adds	r1, r0, #0
    2256:	1c28      	adds	r0, r5, #0
    2258:	4b47      	ldr	r3, [pc, #284]	; (2378 <main+0x1bc>)
    225a:	4798      	blx	r3
    225c:	47b8      	blx	r7
    225e:	b2c5      	uxtb	r5, r0
    2260:	9803      	ldr	r0, [sp, #12]
    2262:	47b0      	blx	r6
    2264:	0002      	movs	r2, r0
    2266:	000b      	movs	r3, r1
    2268:	9500      	str	r5, [sp, #0]
    226a:	4844      	ldr	r0, [pc, #272]	; (237c <main+0x1c0>)
    226c:	47a0      	blx	r4

	/* Replace with your application code */
	
		dataAddress = 0;          /**< start read operation at eeprom address 0*/
    226e:	4d44      	ldr	r5, [pc, #272]	; (2380 <main+0x1c4>)
    2270:	2300      	movs	r3, #0
    2272:	802b      	strh	r3, [r5, #0]
		numByteRead = 20;		  /**< read 20 bytes */
    2274:	4e43      	ldr	r6, [pc, #268]	; (2384 <main+0x1c8>)
    2276:	3314      	adds	r3, #20
    2278:	7033      	strb	r3, [r6, #0]
	
	    err = e_25LCxx_basic_get_bp_status((uint8_t *)&singleByteDataRead);
    227a:	4f43      	ldr	r7, [pc, #268]	; (2388 <main+0x1cc>)
    227c:	0038      	movs	r0, r7
    227e:	4b43      	ldr	r3, [pc, #268]	; (238c <main+0x1d0>)
    2280:	4798      	blx	r3
    2282:	4643      	mov	r3, r8
    2284:	6018      	str	r0, [r3, #0]
		e_25LCxx_interface_debug_print("Block protect status: %d\n", singleByteDataRead);
    2286:	7839      	ldrb	r1, [r7, #0]
    2288:	4841      	ldr	r0, [pc, #260]	; (2390 <main+0x1d4>)
    228a:	47a0      	blx	r4
	
		err= e_25LCxx_basic_read_byte(dataAddress, (uint8_t *)pDataRead, numByteRead);
    228c:	7832      	ldrb	r2, [r6, #0]
    228e:	8828      	ldrh	r0, [r5, #0]
    2290:	4940      	ldr	r1, [pc, #256]	; (2394 <main+0x1d8>)
    2292:	4b41      	ldr	r3, [pc, #260]	; (2398 <main+0x1dc>)
    2294:	4798      	blx	r3
    2296:	4643      	mov	r3, r8
    2298:	6018      	str	r0, [r3, #0]
		for (int index = 0; index < numByteRead; index++){
    229a:	2400      	movs	r4, #0
    229c:	e006      	b.n	22ac <main+0xf0>
			e_25LCxx_interface_debug_print("address read: %d Data Read :%x\n",index, pDataRead[index]);
    229e:	4b3d      	ldr	r3, [pc, #244]	; (2394 <main+0x1d8>)
    22a0:	5d1a      	ldrb	r2, [r3, r4]
    22a2:	0021      	movs	r1, r4
    22a4:	483d      	ldr	r0, [pc, #244]	; (239c <main+0x1e0>)
    22a6:	4b26      	ldr	r3, [pc, #152]	; (2340 <main+0x184>)
    22a8:	4798      	blx	r3
		for (int index = 0; index < numByteRead; index++){
    22aa:	3401      	adds	r4, #1
    22ac:	4b35      	ldr	r3, [pc, #212]	; (2384 <main+0x1c8>)
    22ae:	781b      	ldrb	r3, [r3, #0]
    22b0:	429c      	cmp	r4, r3
    22b2:	dbf4      	blt.n	229e <main+0xe2>
			e_25LCxx_interface_debug_print(" add: %d data: 0x%x", index, singleByteDataRead);
			if(index % 10 == 0)
			e_25LCxx_interface_debug_print("\n\r");
		}*/
		
		e_25LCxx_basic_put_byte(14, (uint32_t *)&dateTime,  sizeof(dateTime));
    22b4:	2204      	movs	r2, #4
    22b6:	493a      	ldr	r1, [pc, #232]	; (23a0 <main+0x1e4>)
    22b8:	200e      	movs	r0, #14
    22ba:	4b3a      	ldr	r3, [pc, #232]	; (23a4 <main+0x1e8>)
    22bc:	4798      	blx	r3
		
		//err = e_25LCxx_basic_update(12,(uint8_t *)pDataWrite, sizeof(pDataWrite));
		
		err = e_25LCxx_basic_get_byte(14, (uint32_t *)&byteGet, sizeof(byteGet)); 
    22be:	4d3a      	ldr	r5, [pc, #232]	; (23a8 <main+0x1ec>)
    22c0:	2204      	movs	r2, #4
    22c2:	0029      	movs	r1, r5
    22c4:	200e      	movs	r0, #14
    22c6:	4b39      	ldr	r3, [pc, #228]	; (23ac <main+0x1f0>)
    22c8:	4798      	blx	r3
    22ca:	4c19      	ldr	r4, [pc, #100]	; (2330 <main+0x174>)
    22cc:	6020      	str	r0, [r4, #0]
		e_25LCxx_interface_debug_print("\nGet date: %lu\n", byteGet);
    22ce:	6829      	ldr	r1, [r5, #0]
    22d0:	4837      	ldr	r0, [pc, #220]	; (23b0 <main+0x1f4>)
    22d2:	4d1b      	ldr	r5, [pc, #108]	; (2340 <main+0x184>)
    22d4:	47a8      	blx	r5
		
		err = e_25LCxx_basic_erase_page(64);											  /**< erasing memory page 64 (address: 1008 - 1023)*/
    22d6:	2040      	movs	r0, #64	; 0x40
    22d8:	4b36      	ldr	r3, [pc, #216]	; (23b4 <main+0x1f8>)
    22da:	4798      	blx	r3
    22dc:	6020      	str	r0, [r4, #0]
		err = e_25LCxx_basic_erase_sector(1532, 1540);									  /**< attempt to erase a protected region */
    22de:	4936      	ldr	r1, [pc, #216]	; (23b8 <main+0x1fc>)
    22e0:	4836      	ldr	r0, [pc, #216]	; (23bc <main+0x200>)
    22e2:	4b37      	ldr	r3, [pc, #220]	; (23c0 <main+0x204>)
    22e4:	4798      	blx	r3
    22e6:	6020      	str	r0, [r4, #0]
		err = e_25LCxx_basic_write_byte(2011,(uint8_t *)pDataWrite, sizeof(pDataWrite));  /**< attempt to write block of data bigger than page size, in a protected region*/
    22e8:	220a      	movs	r2, #10
    22ea:	4936      	ldr	r1, [pc, #216]	; (23c4 <main+0x208>)
    22ec:	4836      	ldr	r0, [pc, #216]	; (23c8 <main+0x20c>)
    22ee:	4b37      	ldr	r3, [pc, #220]	; (23cc <main+0x210>)
    22f0:	4798      	blx	r3
    22f2:	6020      	str	r0, [r4, #0]
		
		err = e_25LCxx_basic_get_memory_properties((uint16_t*) &totalSize, (uint16_t *)&freeSpace, (uint16_t *)&usedSpace);
    22f4:	4b36      	ldr	r3, [pc, #216]	; (23d0 <main+0x214>)
    22f6:	4698      	mov	r8, r3
    22f8:	4f36      	ldr	r7, [pc, #216]	; (23d4 <main+0x218>)
    22fa:	4e37      	ldr	r6, [pc, #220]	; (23d8 <main+0x21c>)
    22fc:	001a      	movs	r2, r3
    22fe:	0039      	movs	r1, r7
    2300:	0030      	movs	r0, r6
    2302:	4b36      	ldr	r3, [pc, #216]	; (23dc <main+0x220>)
    2304:	4798      	blx	r3
    2306:	6020      	str	r0, [r4, #0]
		e_25LCxx_interface_debug_print("Total size : %d Bytes\nFree space: %d Bytes\nUsed space: %d Bytes\n", totalSize, freeSpace, usedSpace);
    2308:	4643      	mov	r3, r8
    230a:	881b      	ldrh	r3, [r3, #0]
    230c:	883a      	ldrh	r2, [r7, #0]
    230e:	8831      	ldrh	r1, [r6, #0]
    2310:	4833      	ldr	r0, [pc, #204]	; (23e0 <main+0x224>)
    2312:	47a8      	blx	r5
	((Port *)hw)->Group[submodule_index].OUTTGL.reg = mask;
    2314:	2280      	movs	r2, #128	; 0x80
    2316:	0392      	lsls	r2, r2, #14
    2318:	23c0      	movs	r3, #192	; 0xc0
    231a:	05db      	lsls	r3, r3, #23
    231c:	61da      	str	r2, [r3, #28]

	while (1) {
		gpio_toggle_pin_level(led_blue);
		e_25LCxx_interface_delay_ms(500);
    231e:	20fa      	movs	r0, #250	; 0xfa
    2320:	0040      	lsls	r0, r0, #1
    2322:	4b30      	ldr	r3, [pc, #192]	; (23e4 <main+0x228>)
    2324:	4798      	blx	r3
    2326:	e7f5      	b.n	2314 <main+0x158>
    2328:	00001261 	.word	0x00001261
    232c:	00000e71 	.word	0x00000e71
    2330:	20000b28 	.word	0x20000b28
    2334:	20000ae4 	.word	0x20000ae4
    2338:	00000df9 	.word	0x00000df9
    233c:	00009c1c 	.word	0x00009c1c
    2340:	00001201 	.word	0x00001201
    2344:	00009c30 	.word	0x00009c30
    2348:	00009c44 	.word	0x00009c44
    234c:	00004de9 	.word	0x00004de9
    2350:	00009c58 	.word	0x00009c58
    2354:	00009c74 	.word	0x00009c74
    2358:	00009c90 	.word	0x00009c90
    235c:	00009cac 	.word	0x00009cac
    2360:	00009cc8 	.word	0x00009cc8
    2364:	00002ba5 	.word	0x00002ba5
    2368:	447a0000 	.word	0x447a0000
    236c:	42c80000 	.word	0x42c80000
    2370:	000029b9 	.word	0x000029b9
    2374:	000031ad 	.word	0x000031ad
    2378:	00002e35 	.word	0x00002e35
    237c:	00009ce4 	.word	0x00009ce4
    2380:	20000acc 	.word	0x20000acc
    2384:	20000b2f 	.word	0x20000b2f
    2388:	20000b2e 	.word	0x20000b2e
    238c:	00001135 	.word	0x00001135
    2390:	00009d04 	.word	0x00009d04
    2394:	20000ad0 	.word	0x20000ad0
    2398:	00000f71 	.word	0x00000f71
    239c:	00009d20 	.word	0x00009d20
    23a0:	20000000 	.word	0x20000000
    23a4:	00001055 	.word	0x00001055
    23a8:	20000b34 	.word	0x20000b34
    23ac:	00000f91 	.word	0x00000f91
    23b0:	00009d40 	.word	0x00009d40
    23b4:	00001085 	.word	0x00001085
    23b8:	00000604 	.word	0x00000604
    23bc:	000005fc 	.word	0x000005fc
    23c0:	000010b1 	.word	0x000010b1
    23c4:	00009c10 	.word	0x00009c10
    23c8:	000007db 	.word	0x000007db
    23cc:	00001025 	.word	0x00001025
    23d0:	20000b30 	.word	0x20000b30
    23d4:	20000b2c 	.word	0x20000b2c
    23d8:	20000ace 	.word	0x20000ace
    23dc:	00001151 	.word	0x00001151
    23e0:	00009d50 	.word	0x00009d50
    23e4:	000011f5 	.word	0x000011f5

000023e8 <print>:
	}
}


void print (char *const string, size_t length)
{
    23e8:	b570      	push	{r4, r5, r6, lr}
    23ea:	b082      	sub	sp, #8
    23ec:	0006      	movs	r6, r0
    23ee:	000c      	movs	r4, r1
	struct io_descriptor *io;
	usart_async_get_io_descriptor(&USART_0, &io);
    23f0:	4d07      	ldr	r5, [pc, #28]	; (2410 <print+0x28>)
    23f2:	a901      	add	r1, sp, #4
    23f4:	0028      	movs	r0, r5
    23f6:	4b07      	ldr	r3, [pc, #28]	; (2414 <print+0x2c>)
    23f8:	4798      	blx	r3
	usart_async_enable(&USART_0);
    23fa:	0028      	movs	r0, r5
    23fc:	4b06      	ldr	r3, [pc, #24]	; (2418 <print+0x30>)
    23fe:	4798      	blx	r3

	io_write(io, (char *)string, length);
    2400:	b2a2      	uxth	r2, r4
    2402:	0031      	movs	r1, r6
    2404:	9801      	ldr	r0, [sp, #4]
    2406:	4b05      	ldr	r3, [pc, #20]	; (241c <print+0x34>)
    2408:	4798      	blx	r3
}
    240a:	b002      	add	sp, #8
    240c:	bd70      	pop	{r4, r5, r6, pc}
    240e:	46c0      	nop			; (mov r8, r8)
    2410:	20000a7c 	.word	0x20000a7c
    2414:	00001975 	.word	0x00001975
    2418:	00001949 	.word	0x00001949
    241c:	00001561 	.word	0x00001561

00002420 <spi_transmit>:

uint8_t spi_transmit(uint16_t u16Register, uint8_t *pData, uint8_t u16Length)
{
    2420:	b5f0      	push	{r4, r5, r6, r7, lr}
    2422:	b085      	sub	sp, #20
    2424:	000e      	movs	r6, r1
    2426:	0014      	movs	r4, r2
    2428:	466b      	mov	r3, sp
    242a:	1d9d      	adds	r5, r3, #6
    242c:	80d8      	strh	r0, [r3, #6]
	struct io_descriptor *io;
	spi_m_sync_get_io_descriptor(&SPI_0, &io);
    242e:	4f0c      	ldr	r7, [pc, #48]	; (2460 <spi_transmit+0x40>)
    2430:	a903      	add	r1, sp, #12
    2432:	0038      	movs	r0, r7
    2434:	4b0b      	ldr	r3, [pc, #44]	; (2464 <spi_transmit+0x44>)
    2436:	4798      	blx	r3
	spi_m_sync_enable(&SPI_0);
    2438:	0038      	movs	r0, r7
    243a:	4b0b      	ldr	r3, [pc, #44]	; (2468 <spi_transmit+0x48>)
    243c:	4798      	blx	r3
	
	io_write(io, (uint8_t *)&u16Register, 1);
    243e:	2201      	movs	r2, #1
    2440:	0029      	movs	r1, r5
    2442:	9803      	ldr	r0, [sp, #12]
    2444:	4b09      	ldr	r3, [pc, #36]	; (246c <spi_transmit+0x4c>)
    2446:	4798      	blx	r3
	if(u16Length == 0){return 0;}
    2448:	2c00      	cmp	r4, #0
    244a:	d102      	bne.n	2452 <spi_transmit+0x32>
	io_write(io, (uint8_t *)pData, u16Length);	
	return 0;
}
    244c:	2000      	movs	r0, #0
    244e:	b005      	add	sp, #20
    2450:	bdf0      	pop	{r4, r5, r6, r7, pc}
	io_write(io, (uint8_t *)pData, u16Length);	
    2452:	b2a2      	uxth	r2, r4
    2454:	0031      	movs	r1, r6
    2456:	9803      	ldr	r0, [sp, #12]
    2458:	4b04      	ldr	r3, [pc, #16]	; (246c <spi_transmit+0x4c>)
    245a:	4798      	blx	r3
	return 0;
    245c:	e7f6      	b.n	244c <spi_transmit+0x2c>
    245e:	46c0      	nop			; (mov r8, r8)
    2460:	20000a64 	.word	0x20000a64
    2464:	00001711 	.word	0x00001711
    2468:	00001629 	.word	0x00001629
    246c:	00001561 	.word	0x00001561

00002470 <spi_receive>:

uint8_t spi_receive(uint16_t u16Register, uint8_t *pData, uint8_t u16Length)
{
    2470:	b5f0      	push	{r4, r5, r6, r7, lr}
    2472:	b085      	sub	sp, #20
    2474:	000e      	movs	r6, r1
    2476:	0014      	movs	r4, r2
    2478:	466b      	mov	r3, sp
    247a:	1d9d      	adds	r5, r3, #6
    247c:	80d8      	strh	r0, [r3, #6]
	struct io_descriptor *io;
	spi_m_sync_get_io_descriptor(&SPI_0, &io);
    247e:	4f0e      	ldr	r7, [pc, #56]	; (24b8 <spi_receive+0x48>)
    2480:	a903      	add	r1, sp, #12
    2482:	0038      	movs	r0, r7
    2484:	4b0d      	ldr	r3, [pc, #52]	; (24bc <spi_receive+0x4c>)
    2486:	4798      	blx	r3
	spi_m_sync_enable(&SPI_0);
    2488:	0038      	movs	r0, r7
    248a:	4b0d      	ldr	r3, [pc, #52]	; (24c0 <spi_receive+0x50>)
    248c:	4798      	blx	r3
	
	io_write(io, (uint8_t *)&u16Register, 1);
    248e:	2201      	movs	r2, #1
    2490:	0029      	movs	r1, r5
    2492:	9803      	ldr	r0, [sp, #12]
    2494:	4b0b      	ldr	r3, [pc, #44]	; (24c4 <spi_receive+0x54>)
    2496:	4798      	blx	r3
	if(u16Length == 1)
    2498:	2c01      	cmp	r4, #1
    249a:	d007      	beq.n	24ac <spi_receive+0x3c>
	{
		io_read(io, (uint8_t *)pData, 1);
	}
	io_read(io, (uint8_t *)pData, u16Length);
    249c:	b2a2      	uxth	r2, r4
    249e:	0031      	movs	r1, r6
    24a0:	9803      	ldr	r0, [sp, #12]
    24a2:	4b09      	ldr	r3, [pc, #36]	; (24c8 <spi_receive+0x58>)
    24a4:	4798      	blx	r3
	return 0;
}
    24a6:	2000      	movs	r0, #0
    24a8:	b005      	add	sp, #20
    24aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
		io_read(io, (uint8_t *)pData, 1);
    24ac:	2201      	movs	r2, #1
    24ae:	0031      	movs	r1, r6
    24b0:	9803      	ldr	r0, [sp, #12]
    24b2:	4b05      	ldr	r3, [pc, #20]	; (24c8 <spi_receive+0x58>)
    24b4:	4798      	blx	r3
    24b6:	e7f1      	b.n	249c <spi_receive+0x2c>
    24b8:	20000a64 	.word	0x20000a64
    24bc:	00001711 	.word	0x00001711
    24c0:	00001629 	.word	0x00001629
    24c4:	00001561 	.word	0x00001561
    24c8:	00001599 	.word	0x00001599

000024cc <spi_chip_select>:
/**
 * \brief Set output level on port with mask
 */
static inline void _gpio_set_level(const enum gpio_port port, const uint32_t mask, const bool level)
{
	if (level) {
    24cc:	2800      	cmp	r0, #0
    24ce:	d104      	bne.n	24da <spi_chip_select+0xe>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    24d0:	2240      	movs	r2, #64	; 0x40
    24d2:	23c0      	movs	r3, #192	; 0xc0
    24d4:	05db      	lsls	r3, r3, #23
    24d6:	615a      	str	r2, [r3, #20]

void spi_chip_select(uint8_t status)
{
	gpio_set_pin_level(SPI_CS, status);
    24d8:	4770      	bx	lr
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    24da:	2240      	movs	r2, #64	; 0x40
    24dc:	23c0      	movs	r3, #192	; 0xc0
    24de:	05db      	lsls	r3, r3, #23
    24e0:	619a      	str	r2, [r3, #24]
    24e2:	e7f9      	b.n	24d8 <spi_chip_select+0xc>

000024e4 <ceil>:
    24e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    24e6:	4657      	mov	r7, sl
    24e8:	464e      	mov	r6, r9
    24ea:	4645      	mov	r5, r8
    24ec:	46de      	mov	lr, fp
    24ee:	004b      	lsls	r3, r1, #1
    24f0:	4a41      	ldr	r2, [pc, #260]	; (25f8 <ceil+0x114>)
    24f2:	0d5b      	lsrs	r3, r3, #21
    24f4:	b5e0      	push	{r5, r6, r7, lr}
    24f6:	189f      	adds	r7, r3, r2
    24f8:	0005      	movs	r5, r0
    24fa:	000c      	movs	r4, r1
    24fc:	4680      	mov	r8, r0
    24fe:	000e      	movs	r6, r1
    2500:	4689      	mov	r9, r1
    2502:	4682      	mov	sl, r0
    2504:	2f13      	cmp	r7, #19
    2506:	dc26      	bgt.n	2556 <ceil+0x72>
    2508:	2f00      	cmp	r7, #0
    250a:	db56      	blt.n	25ba <ceil+0xd6>
    250c:	4b3b      	ldr	r3, [pc, #236]	; (25fc <ceil+0x118>)
    250e:	413b      	asrs	r3, r7
    2510:	4698      	mov	r8, r3
    2512:	000b      	movs	r3, r1
    2514:	4642      	mov	r2, r8
    2516:	4013      	ands	r3, r2
    2518:	4303      	orrs	r3, r0
    251a:	d016      	beq.n	254a <ceil+0x66>
    251c:	4a38      	ldr	r2, [pc, #224]	; (2600 <ceil+0x11c>)
    251e:	4b39      	ldr	r3, [pc, #228]	; (2604 <ceil+0x120>)
    2520:	f000 feda 	bl	32d8 <__aeabi_dadd>
    2524:	2200      	movs	r2, #0
    2526:	2300      	movs	r3, #0
    2528:	f000 fa12 	bl	2950 <__aeabi_dcmpgt>
    252c:	2800      	cmp	r0, #0
    252e:	d00a      	beq.n	2546 <ceil+0x62>
    2530:	2c00      	cmp	r4, #0
    2532:	dd03      	ble.n	253c <ceil+0x58>
    2534:	2380      	movs	r3, #128	; 0x80
    2536:	035b      	lsls	r3, r3, #13
    2538:	413b      	asrs	r3, r7
    253a:	4499      	add	r9, r3
    253c:	4643      	mov	r3, r8
    253e:	464e      	mov	r6, r9
    2540:	439e      	bics	r6, r3
    2542:	2300      	movs	r3, #0
    2544:	469a      	mov	sl, r3
    2546:	4650      	mov	r0, sl
    2548:	0031      	movs	r1, r6
    254a:	bc3c      	pop	{r2, r3, r4, r5}
    254c:	4690      	mov	r8, r2
    254e:	4699      	mov	r9, r3
    2550:	46a2      	mov	sl, r4
    2552:	46ab      	mov	fp, r5
    2554:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2556:	2f33      	cmp	r7, #51	; 0x33
    2558:	dd08      	ble.n	256c <ceil+0x88>
    255a:	2380      	movs	r3, #128	; 0x80
    255c:	00db      	lsls	r3, r3, #3
    255e:	429f      	cmp	r7, r3
    2560:	d1f3      	bne.n	254a <ceil+0x66>
    2562:	0002      	movs	r2, r0
    2564:	000b      	movs	r3, r1
    2566:	f000 feb7 	bl	32d8 <__aeabi_dadd>
    256a:	e7ee      	b.n	254a <ceil+0x66>
    256c:	4a26      	ldr	r2, [pc, #152]	; (2608 <ceil+0x124>)
    256e:	4694      	mov	ip, r2
    2570:	2201      	movs	r2, #1
    2572:	4463      	add	r3, ip
    2574:	4252      	negs	r2, r2
    2576:	40da      	lsrs	r2, r3
    2578:	4693      	mov	fp, r2
    257a:	4202      	tst	r2, r0
    257c:	d0e5      	beq.n	254a <ceil+0x66>
    257e:	4a20      	ldr	r2, [pc, #128]	; (2600 <ceil+0x11c>)
    2580:	4b20      	ldr	r3, [pc, #128]	; (2604 <ceil+0x120>)
    2582:	f000 fea9 	bl	32d8 <__aeabi_dadd>
    2586:	2200      	movs	r2, #0
    2588:	2300      	movs	r3, #0
    258a:	f000 f9e1 	bl	2950 <__aeabi_dcmpgt>
    258e:	2800      	cmp	r0, #0
    2590:	d0d9      	beq.n	2546 <ceil+0x62>
    2592:	2c00      	cmp	r4, #0
    2594:	dd28      	ble.n	25e8 <ceil+0x104>
    2596:	2f14      	cmp	r7, #20
    2598:	d023      	beq.n	25e2 <ceil+0xfe>
    259a:	2334      	movs	r3, #52	; 0x34
    259c:	1bdb      	subs	r3, r3, r7
    259e:	2701      	movs	r7, #1
    25a0:	409f      	lsls	r7, r3
    25a2:	197f      	adds	r7, r7, r5
    25a4:	42af      	cmp	r7, r5
    25a6:	419b      	sbcs	r3, r3
    25a8:	425b      	negs	r3, r3
    25aa:	4499      	add	r9, r3
    25ac:	465b      	mov	r3, fp
    25ae:	439f      	bics	r7, r3
    25b0:	464e      	mov	r6, r9
    25b2:	46ba      	mov	sl, r7
    25b4:	0031      	movs	r1, r6
    25b6:	4650      	mov	r0, sl
    25b8:	e7c7      	b.n	254a <ceil+0x66>
    25ba:	4a11      	ldr	r2, [pc, #68]	; (2600 <ceil+0x11c>)
    25bc:	4b11      	ldr	r3, [pc, #68]	; (2604 <ceil+0x120>)
    25be:	f000 fe8b 	bl	32d8 <__aeabi_dadd>
    25c2:	2200      	movs	r2, #0
    25c4:	2300      	movs	r3, #0
    25c6:	f000 f9c3 	bl	2950 <__aeabi_dcmpgt>
    25ca:	2800      	cmp	r0, #0
    25cc:	d0bb      	beq.n	2546 <ceil+0x62>
    25ce:	2c00      	cmp	r4, #0
    25d0:	db0c      	blt.n	25ec <ceil+0x108>
    25d2:	2300      	movs	r3, #0
    25d4:	432c      	orrs	r4, r5
    25d6:	469a      	mov	sl, r3
    25d8:	2600      	movs	r6, #0
    25da:	2c00      	cmp	r4, #0
    25dc:	d0b3      	beq.n	2546 <ceil+0x62>
    25de:	4e0b      	ldr	r6, [pc, #44]	; (260c <ceil+0x128>)
    25e0:	e7b1      	b.n	2546 <ceil+0x62>
    25e2:	2301      	movs	r3, #1
    25e4:	469c      	mov	ip, r3
    25e6:	44e1      	add	r9, ip
    25e8:	4647      	mov	r7, r8
    25ea:	e7df      	b.n	25ac <ceil+0xc8>
    25ec:	2300      	movs	r3, #0
    25ee:	2680      	movs	r6, #128	; 0x80
    25f0:	469a      	mov	sl, r3
    25f2:	0636      	lsls	r6, r6, #24
    25f4:	e7a7      	b.n	2546 <ceil+0x62>
    25f6:	46c0      	nop			; (mov r8, r8)
    25f8:	fffffc01 	.word	0xfffffc01
    25fc:	000fffff 	.word	0x000fffff
    2600:	8800759c 	.word	0x8800759c
    2604:	7e37e43c 	.word	0x7e37e43c
    2608:	fffffbed 	.word	0xfffffbed
    260c:	3ff00000 	.word	0x3ff00000

00002610 <__udivsi3>:
    2610:	2200      	movs	r2, #0
    2612:	0843      	lsrs	r3, r0, #1
    2614:	428b      	cmp	r3, r1
    2616:	d374      	bcc.n	2702 <__udivsi3+0xf2>
    2618:	0903      	lsrs	r3, r0, #4
    261a:	428b      	cmp	r3, r1
    261c:	d35f      	bcc.n	26de <__udivsi3+0xce>
    261e:	0a03      	lsrs	r3, r0, #8
    2620:	428b      	cmp	r3, r1
    2622:	d344      	bcc.n	26ae <__udivsi3+0x9e>
    2624:	0b03      	lsrs	r3, r0, #12
    2626:	428b      	cmp	r3, r1
    2628:	d328      	bcc.n	267c <__udivsi3+0x6c>
    262a:	0c03      	lsrs	r3, r0, #16
    262c:	428b      	cmp	r3, r1
    262e:	d30d      	bcc.n	264c <__udivsi3+0x3c>
    2630:	22ff      	movs	r2, #255	; 0xff
    2632:	0209      	lsls	r1, r1, #8
    2634:	ba12      	rev	r2, r2
    2636:	0c03      	lsrs	r3, r0, #16
    2638:	428b      	cmp	r3, r1
    263a:	d302      	bcc.n	2642 <__udivsi3+0x32>
    263c:	1212      	asrs	r2, r2, #8
    263e:	0209      	lsls	r1, r1, #8
    2640:	d065      	beq.n	270e <__udivsi3+0xfe>
    2642:	0b03      	lsrs	r3, r0, #12
    2644:	428b      	cmp	r3, r1
    2646:	d319      	bcc.n	267c <__udivsi3+0x6c>
    2648:	e000      	b.n	264c <__udivsi3+0x3c>
    264a:	0a09      	lsrs	r1, r1, #8
    264c:	0bc3      	lsrs	r3, r0, #15
    264e:	428b      	cmp	r3, r1
    2650:	d301      	bcc.n	2656 <__udivsi3+0x46>
    2652:	03cb      	lsls	r3, r1, #15
    2654:	1ac0      	subs	r0, r0, r3
    2656:	4152      	adcs	r2, r2
    2658:	0b83      	lsrs	r3, r0, #14
    265a:	428b      	cmp	r3, r1
    265c:	d301      	bcc.n	2662 <__udivsi3+0x52>
    265e:	038b      	lsls	r3, r1, #14
    2660:	1ac0      	subs	r0, r0, r3
    2662:	4152      	adcs	r2, r2
    2664:	0b43      	lsrs	r3, r0, #13
    2666:	428b      	cmp	r3, r1
    2668:	d301      	bcc.n	266e <__udivsi3+0x5e>
    266a:	034b      	lsls	r3, r1, #13
    266c:	1ac0      	subs	r0, r0, r3
    266e:	4152      	adcs	r2, r2
    2670:	0b03      	lsrs	r3, r0, #12
    2672:	428b      	cmp	r3, r1
    2674:	d301      	bcc.n	267a <__udivsi3+0x6a>
    2676:	030b      	lsls	r3, r1, #12
    2678:	1ac0      	subs	r0, r0, r3
    267a:	4152      	adcs	r2, r2
    267c:	0ac3      	lsrs	r3, r0, #11
    267e:	428b      	cmp	r3, r1
    2680:	d301      	bcc.n	2686 <__udivsi3+0x76>
    2682:	02cb      	lsls	r3, r1, #11
    2684:	1ac0      	subs	r0, r0, r3
    2686:	4152      	adcs	r2, r2
    2688:	0a83      	lsrs	r3, r0, #10
    268a:	428b      	cmp	r3, r1
    268c:	d301      	bcc.n	2692 <__udivsi3+0x82>
    268e:	028b      	lsls	r3, r1, #10
    2690:	1ac0      	subs	r0, r0, r3
    2692:	4152      	adcs	r2, r2
    2694:	0a43      	lsrs	r3, r0, #9
    2696:	428b      	cmp	r3, r1
    2698:	d301      	bcc.n	269e <__udivsi3+0x8e>
    269a:	024b      	lsls	r3, r1, #9
    269c:	1ac0      	subs	r0, r0, r3
    269e:	4152      	adcs	r2, r2
    26a0:	0a03      	lsrs	r3, r0, #8
    26a2:	428b      	cmp	r3, r1
    26a4:	d301      	bcc.n	26aa <__udivsi3+0x9a>
    26a6:	020b      	lsls	r3, r1, #8
    26a8:	1ac0      	subs	r0, r0, r3
    26aa:	4152      	adcs	r2, r2
    26ac:	d2cd      	bcs.n	264a <__udivsi3+0x3a>
    26ae:	09c3      	lsrs	r3, r0, #7
    26b0:	428b      	cmp	r3, r1
    26b2:	d301      	bcc.n	26b8 <__udivsi3+0xa8>
    26b4:	01cb      	lsls	r3, r1, #7
    26b6:	1ac0      	subs	r0, r0, r3
    26b8:	4152      	adcs	r2, r2
    26ba:	0983      	lsrs	r3, r0, #6
    26bc:	428b      	cmp	r3, r1
    26be:	d301      	bcc.n	26c4 <__udivsi3+0xb4>
    26c0:	018b      	lsls	r3, r1, #6
    26c2:	1ac0      	subs	r0, r0, r3
    26c4:	4152      	adcs	r2, r2
    26c6:	0943      	lsrs	r3, r0, #5
    26c8:	428b      	cmp	r3, r1
    26ca:	d301      	bcc.n	26d0 <__udivsi3+0xc0>
    26cc:	014b      	lsls	r3, r1, #5
    26ce:	1ac0      	subs	r0, r0, r3
    26d0:	4152      	adcs	r2, r2
    26d2:	0903      	lsrs	r3, r0, #4
    26d4:	428b      	cmp	r3, r1
    26d6:	d301      	bcc.n	26dc <__udivsi3+0xcc>
    26d8:	010b      	lsls	r3, r1, #4
    26da:	1ac0      	subs	r0, r0, r3
    26dc:	4152      	adcs	r2, r2
    26de:	08c3      	lsrs	r3, r0, #3
    26e0:	428b      	cmp	r3, r1
    26e2:	d301      	bcc.n	26e8 <__udivsi3+0xd8>
    26e4:	00cb      	lsls	r3, r1, #3
    26e6:	1ac0      	subs	r0, r0, r3
    26e8:	4152      	adcs	r2, r2
    26ea:	0883      	lsrs	r3, r0, #2
    26ec:	428b      	cmp	r3, r1
    26ee:	d301      	bcc.n	26f4 <__udivsi3+0xe4>
    26f0:	008b      	lsls	r3, r1, #2
    26f2:	1ac0      	subs	r0, r0, r3
    26f4:	4152      	adcs	r2, r2
    26f6:	0843      	lsrs	r3, r0, #1
    26f8:	428b      	cmp	r3, r1
    26fa:	d301      	bcc.n	2700 <__udivsi3+0xf0>
    26fc:	004b      	lsls	r3, r1, #1
    26fe:	1ac0      	subs	r0, r0, r3
    2700:	4152      	adcs	r2, r2
    2702:	1a41      	subs	r1, r0, r1
    2704:	d200      	bcs.n	2708 <__udivsi3+0xf8>
    2706:	4601      	mov	r1, r0
    2708:	4152      	adcs	r2, r2
    270a:	4610      	mov	r0, r2
    270c:	4770      	bx	lr
    270e:	e7ff      	b.n	2710 <__udivsi3+0x100>
    2710:	b501      	push	{r0, lr}
    2712:	2000      	movs	r0, #0
    2714:	f000 f8f0 	bl	28f8 <__aeabi_idiv0>
    2718:	bd02      	pop	{r1, pc}
    271a:	46c0      	nop			; (mov r8, r8)

0000271c <__aeabi_uidivmod>:
    271c:	2900      	cmp	r1, #0
    271e:	d0f7      	beq.n	2710 <__udivsi3+0x100>
    2720:	e776      	b.n	2610 <__udivsi3>
    2722:	4770      	bx	lr

00002724 <__divsi3>:
    2724:	4603      	mov	r3, r0
    2726:	430b      	orrs	r3, r1
    2728:	d47f      	bmi.n	282a <__divsi3+0x106>
    272a:	2200      	movs	r2, #0
    272c:	0843      	lsrs	r3, r0, #1
    272e:	428b      	cmp	r3, r1
    2730:	d374      	bcc.n	281c <__divsi3+0xf8>
    2732:	0903      	lsrs	r3, r0, #4
    2734:	428b      	cmp	r3, r1
    2736:	d35f      	bcc.n	27f8 <__divsi3+0xd4>
    2738:	0a03      	lsrs	r3, r0, #8
    273a:	428b      	cmp	r3, r1
    273c:	d344      	bcc.n	27c8 <__divsi3+0xa4>
    273e:	0b03      	lsrs	r3, r0, #12
    2740:	428b      	cmp	r3, r1
    2742:	d328      	bcc.n	2796 <__divsi3+0x72>
    2744:	0c03      	lsrs	r3, r0, #16
    2746:	428b      	cmp	r3, r1
    2748:	d30d      	bcc.n	2766 <__divsi3+0x42>
    274a:	22ff      	movs	r2, #255	; 0xff
    274c:	0209      	lsls	r1, r1, #8
    274e:	ba12      	rev	r2, r2
    2750:	0c03      	lsrs	r3, r0, #16
    2752:	428b      	cmp	r3, r1
    2754:	d302      	bcc.n	275c <__divsi3+0x38>
    2756:	1212      	asrs	r2, r2, #8
    2758:	0209      	lsls	r1, r1, #8
    275a:	d065      	beq.n	2828 <__divsi3+0x104>
    275c:	0b03      	lsrs	r3, r0, #12
    275e:	428b      	cmp	r3, r1
    2760:	d319      	bcc.n	2796 <__divsi3+0x72>
    2762:	e000      	b.n	2766 <__divsi3+0x42>
    2764:	0a09      	lsrs	r1, r1, #8
    2766:	0bc3      	lsrs	r3, r0, #15
    2768:	428b      	cmp	r3, r1
    276a:	d301      	bcc.n	2770 <__divsi3+0x4c>
    276c:	03cb      	lsls	r3, r1, #15
    276e:	1ac0      	subs	r0, r0, r3
    2770:	4152      	adcs	r2, r2
    2772:	0b83      	lsrs	r3, r0, #14
    2774:	428b      	cmp	r3, r1
    2776:	d301      	bcc.n	277c <__divsi3+0x58>
    2778:	038b      	lsls	r3, r1, #14
    277a:	1ac0      	subs	r0, r0, r3
    277c:	4152      	adcs	r2, r2
    277e:	0b43      	lsrs	r3, r0, #13
    2780:	428b      	cmp	r3, r1
    2782:	d301      	bcc.n	2788 <__divsi3+0x64>
    2784:	034b      	lsls	r3, r1, #13
    2786:	1ac0      	subs	r0, r0, r3
    2788:	4152      	adcs	r2, r2
    278a:	0b03      	lsrs	r3, r0, #12
    278c:	428b      	cmp	r3, r1
    278e:	d301      	bcc.n	2794 <__divsi3+0x70>
    2790:	030b      	lsls	r3, r1, #12
    2792:	1ac0      	subs	r0, r0, r3
    2794:	4152      	adcs	r2, r2
    2796:	0ac3      	lsrs	r3, r0, #11
    2798:	428b      	cmp	r3, r1
    279a:	d301      	bcc.n	27a0 <__divsi3+0x7c>
    279c:	02cb      	lsls	r3, r1, #11
    279e:	1ac0      	subs	r0, r0, r3
    27a0:	4152      	adcs	r2, r2
    27a2:	0a83      	lsrs	r3, r0, #10
    27a4:	428b      	cmp	r3, r1
    27a6:	d301      	bcc.n	27ac <__divsi3+0x88>
    27a8:	028b      	lsls	r3, r1, #10
    27aa:	1ac0      	subs	r0, r0, r3
    27ac:	4152      	adcs	r2, r2
    27ae:	0a43      	lsrs	r3, r0, #9
    27b0:	428b      	cmp	r3, r1
    27b2:	d301      	bcc.n	27b8 <__divsi3+0x94>
    27b4:	024b      	lsls	r3, r1, #9
    27b6:	1ac0      	subs	r0, r0, r3
    27b8:	4152      	adcs	r2, r2
    27ba:	0a03      	lsrs	r3, r0, #8
    27bc:	428b      	cmp	r3, r1
    27be:	d301      	bcc.n	27c4 <__divsi3+0xa0>
    27c0:	020b      	lsls	r3, r1, #8
    27c2:	1ac0      	subs	r0, r0, r3
    27c4:	4152      	adcs	r2, r2
    27c6:	d2cd      	bcs.n	2764 <__divsi3+0x40>
    27c8:	09c3      	lsrs	r3, r0, #7
    27ca:	428b      	cmp	r3, r1
    27cc:	d301      	bcc.n	27d2 <__divsi3+0xae>
    27ce:	01cb      	lsls	r3, r1, #7
    27d0:	1ac0      	subs	r0, r0, r3
    27d2:	4152      	adcs	r2, r2
    27d4:	0983      	lsrs	r3, r0, #6
    27d6:	428b      	cmp	r3, r1
    27d8:	d301      	bcc.n	27de <__divsi3+0xba>
    27da:	018b      	lsls	r3, r1, #6
    27dc:	1ac0      	subs	r0, r0, r3
    27de:	4152      	adcs	r2, r2
    27e0:	0943      	lsrs	r3, r0, #5
    27e2:	428b      	cmp	r3, r1
    27e4:	d301      	bcc.n	27ea <__divsi3+0xc6>
    27e6:	014b      	lsls	r3, r1, #5
    27e8:	1ac0      	subs	r0, r0, r3
    27ea:	4152      	adcs	r2, r2
    27ec:	0903      	lsrs	r3, r0, #4
    27ee:	428b      	cmp	r3, r1
    27f0:	d301      	bcc.n	27f6 <__divsi3+0xd2>
    27f2:	010b      	lsls	r3, r1, #4
    27f4:	1ac0      	subs	r0, r0, r3
    27f6:	4152      	adcs	r2, r2
    27f8:	08c3      	lsrs	r3, r0, #3
    27fa:	428b      	cmp	r3, r1
    27fc:	d301      	bcc.n	2802 <__divsi3+0xde>
    27fe:	00cb      	lsls	r3, r1, #3
    2800:	1ac0      	subs	r0, r0, r3
    2802:	4152      	adcs	r2, r2
    2804:	0883      	lsrs	r3, r0, #2
    2806:	428b      	cmp	r3, r1
    2808:	d301      	bcc.n	280e <__divsi3+0xea>
    280a:	008b      	lsls	r3, r1, #2
    280c:	1ac0      	subs	r0, r0, r3
    280e:	4152      	adcs	r2, r2
    2810:	0843      	lsrs	r3, r0, #1
    2812:	428b      	cmp	r3, r1
    2814:	d301      	bcc.n	281a <__divsi3+0xf6>
    2816:	004b      	lsls	r3, r1, #1
    2818:	1ac0      	subs	r0, r0, r3
    281a:	4152      	adcs	r2, r2
    281c:	1a41      	subs	r1, r0, r1
    281e:	d200      	bcs.n	2822 <__divsi3+0xfe>
    2820:	4601      	mov	r1, r0
    2822:	4152      	adcs	r2, r2
    2824:	4610      	mov	r0, r2
    2826:	4770      	bx	lr
    2828:	e05d      	b.n	28e6 <__divsi3+0x1c2>
    282a:	0fca      	lsrs	r2, r1, #31
    282c:	d000      	beq.n	2830 <__divsi3+0x10c>
    282e:	4249      	negs	r1, r1
    2830:	1003      	asrs	r3, r0, #32
    2832:	d300      	bcc.n	2836 <__divsi3+0x112>
    2834:	4240      	negs	r0, r0
    2836:	4053      	eors	r3, r2
    2838:	2200      	movs	r2, #0
    283a:	469c      	mov	ip, r3
    283c:	0903      	lsrs	r3, r0, #4
    283e:	428b      	cmp	r3, r1
    2840:	d32d      	bcc.n	289e <__divsi3+0x17a>
    2842:	0a03      	lsrs	r3, r0, #8
    2844:	428b      	cmp	r3, r1
    2846:	d312      	bcc.n	286e <__divsi3+0x14a>
    2848:	22fc      	movs	r2, #252	; 0xfc
    284a:	0189      	lsls	r1, r1, #6
    284c:	ba12      	rev	r2, r2
    284e:	0a03      	lsrs	r3, r0, #8
    2850:	428b      	cmp	r3, r1
    2852:	d30c      	bcc.n	286e <__divsi3+0x14a>
    2854:	0189      	lsls	r1, r1, #6
    2856:	1192      	asrs	r2, r2, #6
    2858:	428b      	cmp	r3, r1
    285a:	d308      	bcc.n	286e <__divsi3+0x14a>
    285c:	0189      	lsls	r1, r1, #6
    285e:	1192      	asrs	r2, r2, #6
    2860:	428b      	cmp	r3, r1
    2862:	d304      	bcc.n	286e <__divsi3+0x14a>
    2864:	0189      	lsls	r1, r1, #6
    2866:	d03a      	beq.n	28de <__divsi3+0x1ba>
    2868:	1192      	asrs	r2, r2, #6
    286a:	e000      	b.n	286e <__divsi3+0x14a>
    286c:	0989      	lsrs	r1, r1, #6
    286e:	09c3      	lsrs	r3, r0, #7
    2870:	428b      	cmp	r3, r1
    2872:	d301      	bcc.n	2878 <__divsi3+0x154>
    2874:	01cb      	lsls	r3, r1, #7
    2876:	1ac0      	subs	r0, r0, r3
    2878:	4152      	adcs	r2, r2
    287a:	0983      	lsrs	r3, r0, #6
    287c:	428b      	cmp	r3, r1
    287e:	d301      	bcc.n	2884 <__divsi3+0x160>
    2880:	018b      	lsls	r3, r1, #6
    2882:	1ac0      	subs	r0, r0, r3
    2884:	4152      	adcs	r2, r2
    2886:	0943      	lsrs	r3, r0, #5
    2888:	428b      	cmp	r3, r1
    288a:	d301      	bcc.n	2890 <__divsi3+0x16c>
    288c:	014b      	lsls	r3, r1, #5
    288e:	1ac0      	subs	r0, r0, r3
    2890:	4152      	adcs	r2, r2
    2892:	0903      	lsrs	r3, r0, #4
    2894:	428b      	cmp	r3, r1
    2896:	d301      	bcc.n	289c <__divsi3+0x178>
    2898:	010b      	lsls	r3, r1, #4
    289a:	1ac0      	subs	r0, r0, r3
    289c:	4152      	adcs	r2, r2
    289e:	08c3      	lsrs	r3, r0, #3
    28a0:	428b      	cmp	r3, r1
    28a2:	d301      	bcc.n	28a8 <__divsi3+0x184>
    28a4:	00cb      	lsls	r3, r1, #3
    28a6:	1ac0      	subs	r0, r0, r3
    28a8:	4152      	adcs	r2, r2
    28aa:	0883      	lsrs	r3, r0, #2
    28ac:	428b      	cmp	r3, r1
    28ae:	d301      	bcc.n	28b4 <__divsi3+0x190>
    28b0:	008b      	lsls	r3, r1, #2
    28b2:	1ac0      	subs	r0, r0, r3
    28b4:	4152      	adcs	r2, r2
    28b6:	d2d9      	bcs.n	286c <__divsi3+0x148>
    28b8:	0843      	lsrs	r3, r0, #1
    28ba:	428b      	cmp	r3, r1
    28bc:	d301      	bcc.n	28c2 <__divsi3+0x19e>
    28be:	004b      	lsls	r3, r1, #1
    28c0:	1ac0      	subs	r0, r0, r3
    28c2:	4152      	adcs	r2, r2
    28c4:	1a41      	subs	r1, r0, r1
    28c6:	d200      	bcs.n	28ca <__divsi3+0x1a6>
    28c8:	4601      	mov	r1, r0
    28ca:	4663      	mov	r3, ip
    28cc:	4152      	adcs	r2, r2
    28ce:	105b      	asrs	r3, r3, #1
    28d0:	4610      	mov	r0, r2
    28d2:	d301      	bcc.n	28d8 <__divsi3+0x1b4>
    28d4:	4240      	negs	r0, r0
    28d6:	2b00      	cmp	r3, #0
    28d8:	d500      	bpl.n	28dc <__divsi3+0x1b8>
    28da:	4249      	negs	r1, r1
    28dc:	4770      	bx	lr
    28de:	4663      	mov	r3, ip
    28e0:	105b      	asrs	r3, r3, #1
    28e2:	d300      	bcc.n	28e6 <__divsi3+0x1c2>
    28e4:	4240      	negs	r0, r0
    28e6:	b501      	push	{r0, lr}
    28e8:	2000      	movs	r0, #0
    28ea:	f000 f805 	bl	28f8 <__aeabi_idiv0>
    28ee:	bd02      	pop	{r1, pc}

000028f0 <__aeabi_idivmod>:
    28f0:	2900      	cmp	r1, #0
    28f2:	d0f8      	beq.n	28e6 <__divsi3+0x1c2>
    28f4:	e716      	b.n	2724 <__divsi3>
    28f6:	4770      	bx	lr

000028f8 <__aeabi_idiv0>:
    28f8:	4770      	bx	lr
    28fa:	46c0      	nop			; (mov r8, r8)

000028fc <__aeabi_cdrcmple>:
    28fc:	4684      	mov	ip, r0
    28fe:	1c10      	adds	r0, r2, #0
    2900:	4662      	mov	r2, ip
    2902:	468c      	mov	ip, r1
    2904:	1c19      	adds	r1, r3, #0
    2906:	4663      	mov	r3, ip
    2908:	e000      	b.n	290c <__aeabi_cdcmpeq>
    290a:	46c0      	nop			; (mov r8, r8)

0000290c <__aeabi_cdcmpeq>:
    290c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    290e:	f001 fbc5 	bl	409c <__ledf2>
    2912:	2800      	cmp	r0, #0
    2914:	d401      	bmi.n	291a <__aeabi_cdcmpeq+0xe>
    2916:	2100      	movs	r1, #0
    2918:	42c8      	cmn	r0, r1
    291a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0000291c <__aeabi_dcmpeq>:
    291c:	b510      	push	{r4, lr}
    291e:	f001 fb1f 	bl	3f60 <__eqdf2>
    2922:	4240      	negs	r0, r0
    2924:	3001      	adds	r0, #1
    2926:	bd10      	pop	{r4, pc}

00002928 <__aeabi_dcmplt>:
    2928:	b510      	push	{r4, lr}
    292a:	f001 fbb7 	bl	409c <__ledf2>
    292e:	2800      	cmp	r0, #0
    2930:	db01      	blt.n	2936 <__aeabi_dcmplt+0xe>
    2932:	2000      	movs	r0, #0
    2934:	bd10      	pop	{r4, pc}
    2936:	2001      	movs	r0, #1
    2938:	bd10      	pop	{r4, pc}
    293a:	46c0      	nop			; (mov r8, r8)

0000293c <__aeabi_dcmple>:
    293c:	b510      	push	{r4, lr}
    293e:	f001 fbad 	bl	409c <__ledf2>
    2942:	2800      	cmp	r0, #0
    2944:	dd01      	ble.n	294a <__aeabi_dcmple+0xe>
    2946:	2000      	movs	r0, #0
    2948:	bd10      	pop	{r4, pc}
    294a:	2001      	movs	r0, #1
    294c:	bd10      	pop	{r4, pc}
    294e:	46c0      	nop			; (mov r8, r8)

00002950 <__aeabi_dcmpgt>:
    2950:	b510      	push	{r4, lr}
    2952:	f001 fb3f 	bl	3fd4 <__gedf2>
    2956:	2800      	cmp	r0, #0
    2958:	dc01      	bgt.n	295e <__aeabi_dcmpgt+0xe>
    295a:	2000      	movs	r0, #0
    295c:	bd10      	pop	{r4, pc}
    295e:	2001      	movs	r0, #1
    2960:	bd10      	pop	{r4, pc}
    2962:	46c0      	nop			; (mov r8, r8)

00002964 <__aeabi_dcmpge>:
    2964:	b510      	push	{r4, lr}
    2966:	f001 fb35 	bl	3fd4 <__gedf2>
    296a:	2800      	cmp	r0, #0
    296c:	da01      	bge.n	2972 <__aeabi_dcmpge+0xe>
    296e:	2000      	movs	r0, #0
    2970:	bd10      	pop	{r4, pc}
    2972:	2001      	movs	r0, #1
    2974:	bd10      	pop	{r4, pc}
    2976:	46c0      	nop			; (mov r8, r8)

00002978 <__aeabi_uldivmod>:
    2978:	2b00      	cmp	r3, #0
    297a:	d111      	bne.n	29a0 <__aeabi_uldivmod+0x28>
    297c:	2a00      	cmp	r2, #0
    297e:	d10f      	bne.n	29a0 <__aeabi_uldivmod+0x28>
    2980:	2900      	cmp	r1, #0
    2982:	d100      	bne.n	2986 <__aeabi_uldivmod+0xe>
    2984:	2800      	cmp	r0, #0
    2986:	d002      	beq.n	298e <__aeabi_uldivmod+0x16>
    2988:	2100      	movs	r1, #0
    298a:	43c9      	mvns	r1, r1
    298c:	1c08      	adds	r0, r1, #0
    298e:	b407      	push	{r0, r1, r2}
    2990:	4802      	ldr	r0, [pc, #8]	; (299c <__aeabi_uldivmod+0x24>)
    2992:	a102      	add	r1, pc, #8	; (adr r1, 299c <__aeabi_uldivmod+0x24>)
    2994:	1840      	adds	r0, r0, r1
    2996:	9002      	str	r0, [sp, #8]
    2998:	bd03      	pop	{r0, r1, pc}
    299a:	46c0      	nop			; (mov r8, r8)
    299c:	ffffff5d 	.word	0xffffff5d
    29a0:	b403      	push	{r0, r1}
    29a2:	4668      	mov	r0, sp
    29a4:	b501      	push	{r0, lr}
    29a6:	9802      	ldr	r0, [sp, #8]
    29a8:	f000 f83c 	bl	2a24 <__udivmoddi4>
    29ac:	9b01      	ldr	r3, [sp, #4]
    29ae:	469e      	mov	lr, r3
    29b0:	b002      	add	sp, #8
    29b2:	bc0c      	pop	{r2, r3}
    29b4:	4770      	bx	lr
    29b6:	46c0      	nop			; (mov r8, r8)

000029b8 <__aeabi_f2uiz>:
    29b8:	219e      	movs	r1, #158	; 0x9e
    29ba:	b510      	push	{r4, lr}
    29bc:	05c9      	lsls	r1, r1, #23
    29be:	1c04      	adds	r4, r0, #0
    29c0:	f002 fa94 	bl	4eec <__aeabi_fcmpge>
    29c4:	2800      	cmp	r0, #0
    29c6:	d103      	bne.n	29d0 <__aeabi_f2uiz+0x18>
    29c8:	1c20      	adds	r0, r4, #0
    29ca:	f000 fbcf 	bl	316c <__aeabi_f2iz>
    29ce:	bd10      	pop	{r4, pc}
    29d0:	219e      	movs	r1, #158	; 0x9e
    29d2:	1c20      	adds	r0, r4, #0
    29d4:	05c9      	lsls	r1, r1, #23
    29d6:	f000 fa2d 	bl	2e34 <__aeabi_fsub>
    29da:	f000 fbc7 	bl	316c <__aeabi_f2iz>
    29de:	2380      	movs	r3, #128	; 0x80
    29e0:	061b      	lsls	r3, r3, #24
    29e2:	469c      	mov	ip, r3
    29e4:	4460      	add	r0, ip
    29e6:	e7f2      	b.n	29ce <__aeabi_f2uiz+0x16>

000029e8 <__aeabi_d2uiz>:
    29e8:	b570      	push	{r4, r5, r6, lr}
    29ea:	2200      	movs	r2, #0
    29ec:	4b0c      	ldr	r3, [pc, #48]	; (2a20 <__aeabi_d2uiz+0x38>)
    29ee:	0004      	movs	r4, r0
    29f0:	000d      	movs	r5, r1
    29f2:	f7ff ffb7 	bl	2964 <__aeabi_dcmpge>
    29f6:	2800      	cmp	r0, #0
    29f8:	d104      	bne.n	2a04 <__aeabi_d2uiz+0x1c>
    29fa:	0020      	movs	r0, r4
    29fc:	0029      	movs	r1, r5
    29fe:	f002 f945 	bl	4c8c <__aeabi_d2iz>
    2a02:	bd70      	pop	{r4, r5, r6, pc}
    2a04:	4b06      	ldr	r3, [pc, #24]	; (2a20 <__aeabi_d2uiz+0x38>)
    2a06:	2200      	movs	r2, #0
    2a08:	0020      	movs	r0, r4
    2a0a:	0029      	movs	r1, r5
    2a0c:	f001 fe28 	bl	4660 <__aeabi_dsub>
    2a10:	f002 f93c 	bl	4c8c <__aeabi_d2iz>
    2a14:	2380      	movs	r3, #128	; 0x80
    2a16:	061b      	lsls	r3, r3, #24
    2a18:	469c      	mov	ip, r3
    2a1a:	4460      	add	r0, ip
    2a1c:	e7f1      	b.n	2a02 <__aeabi_d2uiz+0x1a>
    2a1e:	46c0      	nop			; (mov r8, r8)
    2a20:	41e00000 	.word	0x41e00000

00002a24 <__udivmoddi4>:
    2a24:	b5f0      	push	{r4, r5, r6, r7, lr}
    2a26:	4657      	mov	r7, sl
    2a28:	464e      	mov	r6, r9
    2a2a:	4645      	mov	r5, r8
    2a2c:	46de      	mov	lr, fp
    2a2e:	b5e0      	push	{r5, r6, r7, lr}
    2a30:	0004      	movs	r4, r0
    2a32:	b083      	sub	sp, #12
    2a34:	000d      	movs	r5, r1
    2a36:	4692      	mov	sl, r2
    2a38:	4699      	mov	r9, r3
    2a3a:	428b      	cmp	r3, r1
    2a3c:	d82f      	bhi.n	2a9e <__udivmoddi4+0x7a>
    2a3e:	d02c      	beq.n	2a9a <__udivmoddi4+0x76>
    2a40:	4649      	mov	r1, r9
    2a42:	4650      	mov	r0, sl
    2a44:	f002 fa7a 	bl	4f3c <__clzdi2>
    2a48:	0029      	movs	r1, r5
    2a4a:	0006      	movs	r6, r0
    2a4c:	0020      	movs	r0, r4
    2a4e:	f002 fa75 	bl	4f3c <__clzdi2>
    2a52:	1a33      	subs	r3, r6, r0
    2a54:	4698      	mov	r8, r3
    2a56:	3b20      	subs	r3, #32
    2a58:	469b      	mov	fp, r3
    2a5a:	d500      	bpl.n	2a5e <__udivmoddi4+0x3a>
    2a5c:	e074      	b.n	2b48 <__udivmoddi4+0x124>
    2a5e:	4653      	mov	r3, sl
    2a60:	465a      	mov	r2, fp
    2a62:	4093      	lsls	r3, r2
    2a64:	001f      	movs	r7, r3
    2a66:	4653      	mov	r3, sl
    2a68:	4642      	mov	r2, r8
    2a6a:	4093      	lsls	r3, r2
    2a6c:	001e      	movs	r6, r3
    2a6e:	42af      	cmp	r7, r5
    2a70:	d829      	bhi.n	2ac6 <__udivmoddi4+0xa2>
    2a72:	d026      	beq.n	2ac2 <__udivmoddi4+0x9e>
    2a74:	465b      	mov	r3, fp
    2a76:	1ba4      	subs	r4, r4, r6
    2a78:	41bd      	sbcs	r5, r7
    2a7a:	2b00      	cmp	r3, #0
    2a7c:	da00      	bge.n	2a80 <__udivmoddi4+0x5c>
    2a7e:	e079      	b.n	2b74 <__udivmoddi4+0x150>
    2a80:	2200      	movs	r2, #0
    2a82:	2300      	movs	r3, #0
    2a84:	9200      	str	r2, [sp, #0]
    2a86:	9301      	str	r3, [sp, #4]
    2a88:	2301      	movs	r3, #1
    2a8a:	465a      	mov	r2, fp
    2a8c:	4093      	lsls	r3, r2
    2a8e:	9301      	str	r3, [sp, #4]
    2a90:	2301      	movs	r3, #1
    2a92:	4642      	mov	r2, r8
    2a94:	4093      	lsls	r3, r2
    2a96:	9300      	str	r3, [sp, #0]
    2a98:	e019      	b.n	2ace <__udivmoddi4+0xaa>
    2a9a:	4282      	cmp	r2, r0
    2a9c:	d9d0      	bls.n	2a40 <__udivmoddi4+0x1c>
    2a9e:	2200      	movs	r2, #0
    2aa0:	2300      	movs	r3, #0
    2aa2:	9200      	str	r2, [sp, #0]
    2aa4:	9301      	str	r3, [sp, #4]
    2aa6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    2aa8:	2b00      	cmp	r3, #0
    2aaa:	d001      	beq.n	2ab0 <__udivmoddi4+0x8c>
    2aac:	601c      	str	r4, [r3, #0]
    2aae:	605d      	str	r5, [r3, #4]
    2ab0:	9800      	ldr	r0, [sp, #0]
    2ab2:	9901      	ldr	r1, [sp, #4]
    2ab4:	b003      	add	sp, #12
    2ab6:	bc3c      	pop	{r2, r3, r4, r5}
    2ab8:	4690      	mov	r8, r2
    2aba:	4699      	mov	r9, r3
    2abc:	46a2      	mov	sl, r4
    2abe:	46ab      	mov	fp, r5
    2ac0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2ac2:	42a3      	cmp	r3, r4
    2ac4:	d9d6      	bls.n	2a74 <__udivmoddi4+0x50>
    2ac6:	2200      	movs	r2, #0
    2ac8:	2300      	movs	r3, #0
    2aca:	9200      	str	r2, [sp, #0]
    2acc:	9301      	str	r3, [sp, #4]
    2ace:	4643      	mov	r3, r8
    2ad0:	2b00      	cmp	r3, #0
    2ad2:	d0e8      	beq.n	2aa6 <__udivmoddi4+0x82>
    2ad4:	07fb      	lsls	r3, r7, #31
    2ad6:	0872      	lsrs	r2, r6, #1
    2ad8:	431a      	orrs	r2, r3
    2ada:	4646      	mov	r6, r8
    2adc:	087b      	lsrs	r3, r7, #1
    2ade:	e00e      	b.n	2afe <__udivmoddi4+0xda>
    2ae0:	42ab      	cmp	r3, r5
    2ae2:	d101      	bne.n	2ae8 <__udivmoddi4+0xc4>
    2ae4:	42a2      	cmp	r2, r4
    2ae6:	d80c      	bhi.n	2b02 <__udivmoddi4+0xde>
    2ae8:	1aa4      	subs	r4, r4, r2
    2aea:	419d      	sbcs	r5, r3
    2aec:	2001      	movs	r0, #1
    2aee:	1924      	adds	r4, r4, r4
    2af0:	416d      	adcs	r5, r5
    2af2:	2100      	movs	r1, #0
    2af4:	3e01      	subs	r6, #1
    2af6:	1824      	adds	r4, r4, r0
    2af8:	414d      	adcs	r5, r1
    2afa:	2e00      	cmp	r6, #0
    2afc:	d006      	beq.n	2b0c <__udivmoddi4+0xe8>
    2afe:	42ab      	cmp	r3, r5
    2b00:	d9ee      	bls.n	2ae0 <__udivmoddi4+0xbc>
    2b02:	3e01      	subs	r6, #1
    2b04:	1924      	adds	r4, r4, r4
    2b06:	416d      	adcs	r5, r5
    2b08:	2e00      	cmp	r6, #0
    2b0a:	d1f8      	bne.n	2afe <__udivmoddi4+0xda>
    2b0c:	465b      	mov	r3, fp
    2b0e:	9800      	ldr	r0, [sp, #0]
    2b10:	9901      	ldr	r1, [sp, #4]
    2b12:	1900      	adds	r0, r0, r4
    2b14:	4169      	adcs	r1, r5
    2b16:	2b00      	cmp	r3, #0
    2b18:	db22      	blt.n	2b60 <__udivmoddi4+0x13c>
    2b1a:	002b      	movs	r3, r5
    2b1c:	465a      	mov	r2, fp
    2b1e:	40d3      	lsrs	r3, r2
    2b20:	002a      	movs	r2, r5
    2b22:	4644      	mov	r4, r8
    2b24:	40e2      	lsrs	r2, r4
    2b26:	001c      	movs	r4, r3
    2b28:	465b      	mov	r3, fp
    2b2a:	0015      	movs	r5, r2
    2b2c:	2b00      	cmp	r3, #0
    2b2e:	db2c      	blt.n	2b8a <__udivmoddi4+0x166>
    2b30:	0026      	movs	r6, r4
    2b32:	409e      	lsls	r6, r3
    2b34:	0033      	movs	r3, r6
    2b36:	0026      	movs	r6, r4
    2b38:	4647      	mov	r7, r8
    2b3a:	40be      	lsls	r6, r7
    2b3c:	0032      	movs	r2, r6
    2b3e:	1a80      	subs	r0, r0, r2
    2b40:	4199      	sbcs	r1, r3
    2b42:	9000      	str	r0, [sp, #0]
    2b44:	9101      	str	r1, [sp, #4]
    2b46:	e7ae      	b.n	2aa6 <__udivmoddi4+0x82>
    2b48:	4642      	mov	r2, r8
    2b4a:	2320      	movs	r3, #32
    2b4c:	1a9b      	subs	r3, r3, r2
    2b4e:	4652      	mov	r2, sl
    2b50:	40da      	lsrs	r2, r3
    2b52:	4641      	mov	r1, r8
    2b54:	0013      	movs	r3, r2
    2b56:	464a      	mov	r2, r9
    2b58:	408a      	lsls	r2, r1
    2b5a:	0017      	movs	r7, r2
    2b5c:	431f      	orrs	r7, r3
    2b5e:	e782      	b.n	2a66 <__udivmoddi4+0x42>
    2b60:	4642      	mov	r2, r8
    2b62:	2320      	movs	r3, #32
    2b64:	1a9b      	subs	r3, r3, r2
    2b66:	002a      	movs	r2, r5
    2b68:	4646      	mov	r6, r8
    2b6a:	409a      	lsls	r2, r3
    2b6c:	0023      	movs	r3, r4
    2b6e:	40f3      	lsrs	r3, r6
    2b70:	4313      	orrs	r3, r2
    2b72:	e7d5      	b.n	2b20 <__udivmoddi4+0xfc>
    2b74:	4642      	mov	r2, r8
    2b76:	2320      	movs	r3, #32
    2b78:	2100      	movs	r1, #0
    2b7a:	1a9b      	subs	r3, r3, r2
    2b7c:	2200      	movs	r2, #0
    2b7e:	9100      	str	r1, [sp, #0]
    2b80:	9201      	str	r2, [sp, #4]
    2b82:	2201      	movs	r2, #1
    2b84:	40da      	lsrs	r2, r3
    2b86:	9201      	str	r2, [sp, #4]
    2b88:	e782      	b.n	2a90 <__udivmoddi4+0x6c>
    2b8a:	4642      	mov	r2, r8
    2b8c:	2320      	movs	r3, #32
    2b8e:	0026      	movs	r6, r4
    2b90:	1a9b      	subs	r3, r3, r2
    2b92:	40de      	lsrs	r6, r3
    2b94:	002f      	movs	r7, r5
    2b96:	46b4      	mov	ip, r6
    2b98:	4097      	lsls	r7, r2
    2b9a:	4666      	mov	r6, ip
    2b9c:	003b      	movs	r3, r7
    2b9e:	4333      	orrs	r3, r6
    2ba0:	e7c9      	b.n	2b36 <__udivmoddi4+0x112>
    2ba2:	46c0      	nop			; (mov r8, r8)

00002ba4 <__aeabi_fdiv>:
    2ba4:	b5f0      	push	{r4, r5, r6, r7, lr}
    2ba6:	4657      	mov	r7, sl
    2ba8:	464e      	mov	r6, r9
    2baa:	46de      	mov	lr, fp
    2bac:	4645      	mov	r5, r8
    2bae:	b5e0      	push	{r5, r6, r7, lr}
    2bb0:	0244      	lsls	r4, r0, #9
    2bb2:	0043      	lsls	r3, r0, #1
    2bb4:	0fc6      	lsrs	r6, r0, #31
    2bb6:	b083      	sub	sp, #12
    2bb8:	1c0f      	adds	r7, r1, #0
    2bba:	0a64      	lsrs	r4, r4, #9
    2bbc:	0e1b      	lsrs	r3, r3, #24
    2bbe:	46b2      	mov	sl, r6
    2bc0:	d053      	beq.n	2c6a <__aeabi_fdiv+0xc6>
    2bc2:	2bff      	cmp	r3, #255	; 0xff
    2bc4:	d027      	beq.n	2c16 <__aeabi_fdiv+0x72>
    2bc6:	2280      	movs	r2, #128	; 0x80
    2bc8:	00e4      	lsls	r4, r4, #3
    2bca:	04d2      	lsls	r2, r2, #19
    2bcc:	4314      	orrs	r4, r2
    2bce:	227f      	movs	r2, #127	; 0x7f
    2bd0:	4252      	negs	r2, r2
    2bd2:	4690      	mov	r8, r2
    2bd4:	4498      	add	r8, r3
    2bd6:	2300      	movs	r3, #0
    2bd8:	4699      	mov	r9, r3
    2bda:	469b      	mov	fp, r3
    2bdc:	027d      	lsls	r5, r7, #9
    2bde:	0078      	lsls	r0, r7, #1
    2be0:	0ffb      	lsrs	r3, r7, #31
    2be2:	0a6d      	lsrs	r5, r5, #9
    2be4:	0e00      	lsrs	r0, r0, #24
    2be6:	9300      	str	r3, [sp, #0]
    2be8:	d024      	beq.n	2c34 <__aeabi_fdiv+0x90>
    2bea:	28ff      	cmp	r0, #255	; 0xff
    2bec:	d046      	beq.n	2c7c <__aeabi_fdiv+0xd8>
    2bee:	2380      	movs	r3, #128	; 0x80
    2bf0:	2100      	movs	r1, #0
    2bf2:	00ed      	lsls	r5, r5, #3
    2bf4:	04db      	lsls	r3, r3, #19
    2bf6:	431d      	orrs	r5, r3
    2bf8:	387f      	subs	r0, #127	; 0x7f
    2bfa:	4647      	mov	r7, r8
    2bfc:	1a38      	subs	r0, r7, r0
    2bfe:	464f      	mov	r7, r9
    2c00:	430f      	orrs	r7, r1
    2c02:	00bf      	lsls	r7, r7, #2
    2c04:	46b9      	mov	r9, r7
    2c06:	0033      	movs	r3, r6
    2c08:	9a00      	ldr	r2, [sp, #0]
    2c0a:	4f87      	ldr	r7, [pc, #540]	; (2e28 <__aeabi_fdiv+0x284>)
    2c0c:	4053      	eors	r3, r2
    2c0e:	464a      	mov	r2, r9
    2c10:	58ba      	ldr	r2, [r7, r2]
    2c12:	9301      	str	r3, [sp, #4]
    2c14:	4697      	mov	pc, r2
    2c16:	2c00      	cmp	r4, #0
    2c18:	d14e      	bne.n	2cb8 <__aeabi_fdiv+0x114>
    2c1a:	2308      	movs	r3, #8
    2c1c:	4699      	mov	r9, r3
    2c1e:	33f7      	adds	r3, #247	; 0xf7
    2c20:	4698      	mov	r8, r3
    2c22:	3bfd      	subs	r3, #253	; 0xfd
    2c24:	469b      	mov	fp, r3
    2c26:	027d      	lsls	r5, r7, #9
    2c28:	0078      	lsls	r0, r7, #1
    2c2a:	0ffb      	lsrs	r3, r7, #31
    2c2c:	0a6d      	lsrs	r5, r5, #9
    2c2e:	0e00      	lsrs	r0, r0, #24
    2c30:	9300      	str	r3, [sp, #0]
    2c32:	d1da      	bne.n	2bea <__aeabi_fdiv+0x46>
    2c34:	2d00      	cmp	r5, #0
    2c36:	d126      	bne.n	2c86 <__aeabi_fdiv+0xe2>
    2c38:	2000      	movs	r0, #0
    2c3a:	2101      	movs	r1, #1
    2c3c:	0033      	movs	r3, r6
    2c3e:	9a00      	ldr	r2, [sp, #0]
    2c40:	4f7a      	ldr	r7, [pc, #488]	; (2e2c <__aeabi_fdiv+0x288>)
    2c42:	4053      	eors	r3, r2
    2c44:	4642      	mov	r2, r8
    2c46:	1a10      	subs	r0, r2, r0
    2c48:	464a      	mov	r2, r9
    2c4a:	430a      	orrs	r2, r1
    2c4c:	0092      	lsls	r2, r2, #2
    2c4e:	58ba      	ldr	r2, [r7, r2]
    2c50:	001d      	movs	r5, r3
    2c52:	4697      	mov	pc, r2
    2c54:	9b00      	ldr	r3, [sp, #0]
    2c56:	002c      	movs	r4, r5
    2c58:	469a      	mov	sl, r3
    2c5a:	468b      	mov	fp, r1
    2c5c:	465b      	mov	r3, fp
    2c5e:	2b02      	cmp	r3, #2
    2c60:	d131      	bne.n	2cc6 <__aeabi_fdiv+0x122>
    2c62:	4653      	mov	r3, sl
    2c64:	21ff      	movs	r1, #255	; 0xff
    2c66:	2400      	movs	r4, #0
    2c68:	e038      	b.n	2cdc <__aeabi_fdiv+0x138>
    2c6a:	2c00      	cmp	r4, #0
    2c6c:	d117      	bne.n	2c9e <__aeabi_fdiv+0xfa>
    2c6e:	2304      	movs	r3, #4
    2c70:	4699      	mov	r9, r3
    2c72:	2300      	movs	r3, #0
    2c74:	4698      	mov	r8, r3
    2c76:	3301      	adds	r3, #1
    2c78:	469b      	mov	fp, r3
    2c7a:	e7af      	b.n	2bdc <__aeabi_fdiv+0x38>
    2c7c:	20ff      	movs	r0, #255	; 0xff
    2c7e:	2d00      	cmp	r5, #0
    2c80:	d10b      	bne.n	2c9a <__aeabi_fdiv+0xf6>
    2c82:	2102      	movs	r1, #2
    2c84:	e7da      	b.n	2c3c <__aeabi_fdiv+0x98>
    2c86:	0028      	movs	r0, r5
    2c88:	f002 f93a 	bl	4f00 <__clzsi2>
    2c8c:	1f43      	subs	r3, r0, #5
    2c8e:	409d      	lsls	r5, r3
    2c90:	2376      	movs	r3, #118	; 0x76
    2c92:	425b      	negs	r3, r3
    2c94:	1a18      	subs	r0, r3, r0
    2c96:	2100      	movs	r1, #0
    2c98:	e7af      	b.n	2bfa <__aeabi_fdiv+0x56>
    2c9a:	2103      	movs	r1, #3
    2c9c:	e7ad      	b.n	2bfa <__aeabi_fdiv+0x56>
    2c9e:	0020      	movs	r0, r4
    2ca0:	f002 f92e 	bl	4f00 <__clzsi2>
    2ca4:	1f43      	subs	r3, r0, #5
    2ca6:	409c      	lsls	r4, r3
    2ca8:	2376      	movs	r3, #118	; 0x76
    2caa:	425b      	negs	r3, r3
    2cac:	1a1b      	subs	r3, r3, r0
    2cae:	4698      	mov	r8, r3
    2cb0:	2300      	movs	r3, #0
    2cb2:	4699      	mov	r9, r3
    2cb4:	469b      	mov	fp, r3
    2cb6:	e791      	b.n	2bdc <__aeabi_fdiv+0x38>
    2cb8:	230c      	movs	r3, #12
    2cba:	4699      	mov	r9, r3
    2cbc:	33f3      	adds	r3, #243	; 0xf3
    2cbe:	4698      	mov	r8, r3
    2cc0:	3bfc      	subs	r3, #252	; 0xfc
    2cc2:	469b      	mov	fp, r3
    2cc4:	e78a      	b.n	2bdc <__aeabi_fdiv+0x38>
    2cc6:	2b03      	cmp	r3, #3
    2cc8:	d100      	bne.n	2ccc <__aeabi_fdiv+0x128>
    2cca:	e0a5      	b.n	2e18 <__aeabi_fdiv+0x274>
    2ccc:	4655      	mov	r5, sl
    2cce:	2b01      	cmp	r3, #1
    2cd0:	d000      	beq.n	2cd4 <__aeabi_fdiv+0x130>
    2cd2:	e081      	b.n	2dd8 <__aeabi_fdiv+0x234>
    2cd4:	2301      	movs	r3, #1
    2cd6:	2100      	movs	r1, #0
    2cd8:	2400      	movs	r4, #0
    2cda:	402b      	ands	r3, r5
    2cdc:	0264      	lsls	r4, r4, #9
    2cde:	05c9      	lsls	r1, r1, #23
    2ce0:	0a60      	lsrs	r0, r4, #9
    2ce2:	07db      	lsls	r3, r3, #31
    2ce4:	4308      	orrs	r0, r1
    2ce6:	4318      	orrs	r0, r3
    2ce8:	b003      	add	sp, #12
    2cea:	bc3c      	pop	{r2, r3, r4, r5}
    2cec:	4690      	mov	r8, r2
    2cee:	4699      	mov	r9, r3
    2cf0:	46a2      	mov	sl, r4
    2cf2:	46ab      	mov	fp, r5
    2cf4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2cf6:	2480      	movs	r4, #128	; 0x80
    2cf8:	2300      	movs	r3, #0
    2cfa:	03e4      	lsls	r4, r4, #15
    2cfc:	21ff      	movs	r1, #255	; 0xff
    2cfe:	e7ed      	b.n	2cdc <__aeabi_fdiv+0x138>
    2d00:	21ff      	movs	r1, #255	; 0xff
    2d02:	2400      	movs	r4, #0
    2d04:	e7ea      	b.n	2cdc <__aeabi_fdiv+0x138>
    2d06:	2301      	movs	r3, #1
    2d08:	1a59      	subs	r1, r3, r1
    2d0a:	291b      	cmp	r1, #27
    2d0c:	dd66      	ble.n	2ddc <__aeabi_fdiv+0x238>
    2d0e:	9a01      	ldr	r2, [sp, #4]
    2d10:	4013      	ands	r3, r2
    2d12:	2100      	movs	r1, #0
    2d14:	2400      	movs	r4, #0
    2d16:	e7e1      	b.n	2cdc <__aeabi_fdiv+0x138>
    2d18:	2380      	movs	r3, #128	; 0x80
    2d1a:	03db      	lsls	r3, r3, #15
    2d1c:	421c      	tst	r4, r3
    2d1e:	d038      	beq.n	2d92 <__aeabi_fdiv+0x1ee>
    2d20:	421d      	tst	r5, r3
    2d22:	d051      	beq.n	2dc8 <__aeabi_fdiv+0x224>
    2d24:	431c      	orrs	r4, r3
    2d26:	0264      	lsls	r4, r4, #9
    2d28:	0a64      	lsrs	r4, r4, #9
    2d2a:	0033      	movs	r3, r6
    2d2c:	21ff      	movs	r1, #255	; 0xff
    2d2e:	e7d5      	b.n	2cdc <__aeabi_fdiv+0x138>
    2d30:	0163      	lsls	r3, r4, #5
    2d32:	016c      	lsls	r4, r5, #5
    2d34:	42a3      	cmp	r3, r4
    2d36:	d23b      	bcs.n	2db0 <__aeabi_fdiv+0x20c>
    2d38:	261b      	movs	r6, #27
    2d3a:	2100      	movs	r1, #0
    2d3c:	3801      	subs	r0, #1
    2d3e:	2501      	movs	r5, #1
    2d40:	001f      	movs	r7, r3
    2d42:	0049      	lsls	r1, r1, #1
    2d44:	005b      	lsls	r3, r3, #1
    2d46:	2f00      	cmp	r7, #0
    2d48:	db01      	blt.n	2d4e <__aeabi_fdiv+0x1aa>
    2d4a:	429c      	cmp	r4, r3
    2d4c:	d801      	bhi.n	2d52 <__aeabi_fdiv+0x1ae>
    2d4e:	1b1b      	subs	r3, r3, r4
    2d50:	4329      	orrs	r1, r5
    2d52:	3e01      	subs	r6, #1
    2d54:	2e00      	cmp	r6, #0
    2d56:	d1f3      	bne.n	2d40 <__aeabi_fdiv+0x19c>
    2d58:	001c      	movs	r4, r3
    2d5a:	1e63      	subs	r3, r4, #1
    2d5c:	419c      	sbcs	r4, r3
    2d5e:	430c      	orrs	r4, r1
    2d60:	0001      	movs	r1, r0
    2d62:	317f      	adds	r1, #127	; 0x7f
    2d64:	2900      	cmp	r1, #0
    2d66:	ddce      	ble.n	2d06 <__aeabi_fdiv+0x162>
    2d68:	0763      	lsls	r3, r4, #29
    2d6a:	d004      	beq.n	2d76 <__aeabi_fdiv+0x1d2>
    2d6c:	230f      	movs	r3, #15
    2d6e:	4023      	ands	r3, r4
    2d70:	2b04      	cmp	r3, #4
    2d72:	d000      	beq.n	2d76 <__aeabi_fdiv+0x1d2>
    2d74:	3404      	adds	r4, #4
    2d76:	0123      	lsls	r3, r4, #4
    2d78:	d503      	bpl.n	2d82 <__aeabi_fdiv+0x1de>
    2d7a:	0001      	movs	r1, r0
    2d7c:	4b2c      	ldr	r3, [pc, #176]	; (2e30 <__aeabi_fdiv+0x28c>)
    2d7e:	3180      	adds	r1, #128	; 0x80
    2d80:	401c      	ands	r4, r3
    2d82:	29fe      	cmp	r1, #254	; 0xfe
    2d84:	dd0d      	ble.n	2da2 <__aeabi_fdiv+0x1fe>
    2d86:	2301      	movs	r3, #1
    2d88:	9a01      	ldr	r2, [sp, #4]
    2d8a:	21ff      	movs	r1, #255	; 0xff
    2d8c:	4013      	ands	r3, r2
    2d8e:	2400      	movs	r4, #0
    2d90:	e7a4      	b.n	2cdc <__aeabi_fdiv+0x138>
    2d92:	2380      	movs	r3, #128	; 0x80
    2d94:	03db      	lsls	r3, r3, #15
    2d96:	431c      	orrs	r4, r3
    2d98:	0264      	lsls	r4, r4, #9
    2d9a:	0a64      	lsrs	r4, r4, #9
    2d9c:	0033      	movs	r3, r6
    2d9e:	21ff      	movs	r1, #255	; 0xff
    2da0:	e79c      	b.n	2cdc <__aeabi_fdiv+0x138>
    2da2:	2301      	movs	r3, #1
    2da4:	9a01      	ldr	r2, [sp, #4]
    2da6:	01a4      	lsls	r4, r4, #6
    2da8:	0a64      	lsrs	r4, r4, #9
    2daa:	b2c9      	uxtb	r1, r1
    2dac:	4013      	ands	r3, r2
    2dae:	e795      	b.n	2cdc <__aeabi_fdiv+0x138>
    2db0:	1b1b      	subs	r3, r3, r4
    2db2:	261a      	movs	r6, #26
    2db4:	2101      	movs	r1, #1
    2db6:	e7c2      	b.n	2d3e <__aeabi_fdiv+0x19a>
    2db8:	9b00      	ldr	r3, [sp, #0]
    2dba:	468b      	mov	fp, r1
    2dbc:	469a      	mov	sl, r3
    2dbe:	2400      	movs	r4, #0
    2dc0:	e74c      	b.n	2c5c <__aeabi_fdiv+0xb8>
    2dc2:	0263      	lsls	r3, r4, #9
    2dc4:	d5e5      	bpl.n	2d92 <__aeabi_fdiv+0x1ee>
    2dc6:	2500      	movs	r5, #0
    2dc8:	2480      	movs	r4, #128	; 0x80
    2dca:	03e4      	lsls	r4, r4, #15
    2dcc:	432c      	orrs	r4, r5
    2dce:	0264      	lsls	r4, r4, #9
    2dd0:	0a64      	lsrs	r4, r4, #9
    2dd2:	9b00      	ldr	r3, [sp, #0]
    2dd4:	21ff      	movs	r1, #255	; 0xff
    2dd6:	e781      	b.n	2cdc <__aeabi_fdiv+0x138>
    2dd8:	9501      	str	r5, [sp, #4]
    2dda:	e7c1      	b.n	2d60 <__aeabi_fdiv+0x1bc>
    2ddc:	0023      	movs	r3, r4
    2dde:	2020      	movs	r0, #32
    2de0:	40cb      	lsrs	r3, r1
    2de2:	1a41      	subs	r1, r0, r1
    2de4:	408c      	lsls	r4, r1
    2de6:	1e61      	subs	r1, r4, #1
    2de8:	418c      	sbcs	r4, r1
    2dea:	431c      	orrs	r4, r3
    2dec:	0763      	lsls	r3, r4, #29
    2dee:	d004      	beq.n	2dfa <__aeabi_fdiv+0x256>
    2df0:	230f      	movs	r3, #15
    2df2:	4023      	ands	r3, r4
    2df4:	2b04      	cmp	r3, #4
    2df6:	d000      	beq.n	2dfa <__aeabi_fdiv+0x256>
    2df8:	3404      	adds	r4, #4
    2dfa:	0163      	lsls	r3, r4, #5
    2dfc:	d505      	bpl.n	2e0a <__aeabi_fdiv+0x266>
    2dfe:	2301      	movs	r3, #1
    2e00:	9a01      	ldr	r2, [sp, #4]
    2e02:	2101      	movs	r1, #1
    2e04:	4013      	ands	r3, r2
    2e06:	2400      	movs	r4, #0
    2e08:	e768      	b.n	2cdc <__aeabi_fdiv+0x138>
    2e0a:	2301      	movs	r3, #1
    2e0c:	9a01      	ldr	r2, [sp, #4]
    2e0e:	01a4      	lsls	r4, r4, #6
    2e10:	0a64      	lsrs	r4, r4, #9
    2e12:	4013      	ands	r3, r2
    2e14:	2100      	movs	r1, #0
    2e16:	e761      	b.n	2cdc <__aeabi_fdiv+0x138>
    2e18:	2380      	movs	r3, #128	; 0x80
    2e1a:	03db      	lsls	r3, r3, #15
    2e1c:	431c      	orrs	r4, r3
    2e1e:	0264      	lsls	r4, r4, #9
    2e20:	0a64      	lsrs	r4, r4, #9
    2e22:	4653      	mov	r3, sl
    2e24:	21ff      	movs	r1, #255	; 0xff
    2e26:	e759      	b.n	2cdc <__aeabi_fdiv+0x138>
    2e28:	00009d94 	.word	0x00009d94
    2e2c:	00009dd4 	.word	0x00009dd4
    2e30:	f7ffffff 	.word	0xf7ffffff

00002e34 <__aeabi_fsub>:
    2e34:	b5f0      	push	{r4, r5, r6, r7, lr}
    2e36:	464f      	mov	r7, r9
    2e38:	46d6      	mov	lr, sl
    2e3a:	4646      	mov	r6, r8
    2e3c:	0044      	lsls	r4, r0, #1
    2e3e:	b5c0      	push	{r6, r7, lr}
    2e40:	0fc2      	lsrs	r2, r0, #31
    2e42:	0247      	lsls	r7, r0, #9
    2e44:	0248      	lsls	r0, r1, #9
    2e46:	0a40      	lsrs	r0, r0, #9
    2e48:	4684      	mov	ip, r0
    2e4a:	4666      	mov	r6, ip
    2e4c:	0a7b      	lsrs	r3, r7, #9
    2e4e:	0048      	lsls	r0, r1, #1
    2e50:	0fc9      	lsrs	r1, r1, #31
    2e52:	469a      	mov	sl, r3
    2e54:	0e24      	lsrs	r4, r4, #24
    2e56:	0015      	movs	r5, r2
    2e58:	00db      	lsls	r3, r3, #3
    2e5a:	0e00      	lsrs	r0, r0, #24
    2e5c:	4689      	mov	r9, r1
    2e5e:	00f6      	lsls	r6, r6, #3
    2e60:	28ff      	cmp	r0, #255	; 0xff
    2e62:	d100      	bne.n	2e66 <__aeabi_fsub+0x32>
    2e64:	e08f      	b.n	2f86 <__aeabi_fsub+0x152>
    2e66:	2101      	movs	r1, #1
    2e68:	464f      	mov	r7, r9
    2e6a:	404f      	eors	r7, r1
    2e6c:	0039      	movs	r1, r7
    2e6e:	4291      	cmp	r1, r2
    2e70:	d066      	beq.n	2f40 <__aeabi_fsub+0x10c>
    2e72:	1a22      	subs	r2, r4, r0
    2e74:	2a00      	cmp	r2, #0
    2e76:	dc00      	bgt.n	2e7a <__aeabi_fsub+0x46>
    2e78:	e09d      	b.n	2fb6 <__aeabi_fsub+0x182>
    2e7a:	2800      	cmp	r0, #0
    2e7c:	d13d      	bne.n	2efa <__aeabi_fsub+0xc6>
    2e7e:	2e00      	cmp	r6, #0
    2e80:	d100      	bne.n	2e84 <__aeabi_fsub+0x50>
    2e82:	e08b      	b.n	2f9c <__aeabi_fsub+0x168>
    2e84:	1e51      	subs	r1, r2, #1
    2e86:	2900      	cmp	r1, #0
    2e88:	d000      	beq.n	2e8c <__aeabi_fsub+0x58>
    2e8a:	e0b5      	b.n	2ff8 <__aeabi_fsub+0x1c4>
    2e8c:	2401      	movs	r4, #1
    2e8e:	1b9b      	subs	r3, r3, r6
    2e90:	015a      	lsls	r2, r3, #5
    2e92:	d544      	bpl.n	2f1e <__aeabi_fsub+0xea>
    2e94:	019b      	lsls	r3, r3, #6
    2e96:	099f      	lsrs	r7, r3, #6
    2e98:	0038      	movs	r0, r7
    2e9a:	f002 f831 	bl	4f00 <__clzsi2>
    2e9e:	3805      	subs	r0, #5
    2ea0:	4087      	lsls	r7, r0
    2ea2:	4284      	cmp	r4, r0
    2ea4:	dd00      	ble.n	2ea8 <__aeabi_fsub+0x74>
    2ea6:	e096      	b.n	2fd6 <__aeabi_fsub+0x1a2>
    2ea8:	1b04      	subs	r4, r0, r4
    2eaa:	003a      	movs	r2, r7
    2eac:	2020      	movs	r0, #32
    2eae:	3401      	adds	r4, #1
    2eb0:	40e2      	lsrs	r2, r4
    2eb2:	1b04      	subs	r4, r0, r4
    2eb4:	40a7      	lsls	r7, r4
    2eb6:	003b      	movs	r3, r7
    2eb8:	1e5f      	subs	r7, r3, #1
    2eba:	41bb      	sbcs	r3, r7
    2ebc:	2400      	movs	r4, #0
    2ebe:	4313      	orrs	r3, r2
    2ec0:	075a      	lsls	r2, r3, #29
    2ec2:	d004      	beq.n	2ece <__aeabi_fsub+0x9a>
    2ec4:	220f      	movs	r2, #15
    2ec6:	401a      	ands	r2, r3
    2ec8:	2a04      	cmp	r2, #4
    2eca:	d000      	beq.n	2ece <__aeabi_fsub+0x9a>
    2ecc:	3304      	adds	r3, #4
    2ece:	015a      	lsls	r2, r3, #5
    2ed0:	d527      	bpl.n	2f22 <__aeabi_fsub+0xee>
    2ed2:	3401      	adds	r4, #1
    2ed4:	2cff      	cmp	r4, #255	; 0xff
    2ed6:	d100      	bne.n	2eda <__aeabi_fsub+0xa6>
    2ed8:	e079      	b.n	2fce <__aeabi_fsub+0x19a>
    2eda:	2201      	movs	r2, #1
    2edc:	019b      	lsls	r3, r3, #6
    2ede:	0a5b      	lsrs	r3, r3, #9
    2ee0:	b2e4      	uxtb	r4, r4
    2ee2:	402a      	ands	r2, r5
    2ee4:	025b      	lsls	r3, r3, #9
    2ee6:	05e4      	lsls	r4, r4, #23
    2ee8:	0a58      	lsrs	r0, r3, #9
    2eea:	07d2      	lsls	r2, r2, #31
    2eec:	4320      	orrs	r0, r4
    2eee:	4310      	orrs	r0, r2
    2ef0:	bc1c      	pop	{r2, r3, r4}
    2ef2:	4690      	mov	r8, r2
    2ef4:	4699      	mov	r9, r3
    2ef6:	46a2      	mov	sl, r4
    2ef8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2efa:	2cff      	cmp	r4, #255	; 0xff
    2efc:	d0e0      	beq.n	2ec0 <__aeabi_fsub+0x8c>
    2efe:	2180      	movs	r1, #128	; 0x80
    2f00:	04c9      	lsls	r1, r1, #19
    2f02:	430e      	orrs	r6, r1
    2f04:	2a1b      	cmp	r2, #27
    2f06:	dc7b      	bgt.n	3000 <__aeabi_fsub+0x1cc>
    2f08:	0031      	movs	r1, r6
    2f0a:	2020      	movs	r0, #32
    2f0c:	40d1      	lsrs	r1, r2
    2f0e:	1a82      	subs	r2, r0, r2
    2f10:	4096      	lsls	r6, r2
    2f12:	1e72      	subs	r2, r6, #1
    2f14:	4196      	sbcs	r6, r2
    2f16:	430e      	orrs	r6, r1
    2f18:	1b9b      	subs	r3, r3, r6
    2f1a:	015a      	lsls	r2, r3, #5
    2f1c:	d4ba      	bmi.n	2e94 <__aeabi_fsub+0x60>
    2f1e:	075a      	lsls	r2, r3, #29
    2f20:	d1d0      	bne.n	2ec4 <__aeabi_fsub+0x90>
    2f22:	2201      	movs	r2, #1
    2f24:	08df      	lsrs	r7, r3, #3
    2f26:	402a      	ands	r2, r5
    2f28:	2cff      	cmp	r4, #255	; 0xff
    2f2a:	d133      	bne.n	2f94 <__aeabi_fsub+0x160>
    2f2c:	2f00      	cmp	r7, #0
    2f2e:	d100      	bne.n	2f32 <__aeabi_fsub+0xfe>
    2f30:	e0a8      	b.n	3084 <__aeabi_fsub+0x250>
    2f32:	2380      	movs	r3, #128	; 0x80
    2f34:	03db      	lsls	r3, r3, #15
    2f36:	433b      	orrs	r3, r7
    2f38:	025b      	lsls	r3, r3, #9
    2f3a:	0a5b      	lsrs	r3, r3, #9
    2f3c:	24ff      	movs	r4, #255	; 0xff
    2f3e:	e7d1      	b.n	2ee4 <__aeabi_fsub+0xb0>
    2f40:	1a21      	subs	r1, r4, r0
    2f42:	2900      	cmp	r1, #0
    2f44:	dd4c      	ble.n	2fe0 <__aeabi_fsub+0x1ac>
    2f46:	2800      	cmp	r0, #0
    2f48:	d02a      	beq.n	2fa0 <__aeabi_fsub+0x16c>
    2f4a:	2cff      	cmp	r4, #255	; 0xff
    2f4c:	d0b8      	beq.n	2ec0 <__aeabi_fsub+0x8c>
    2f4e:	2080      	movs	r0, #128	; 0x80
    2f50:	04c0      	lsls	r0, r0, #19
    2f52:	4306      	orrs	r6, r0
    2f54:	291b      	cmp	r1, #27
    2f56:	dd00      	ble.n	2f5a <__aeabi_fsub+0x126>
    2f58:	e0af      	b.n	30ba <__aeabi_fsub+0x286>
    2f5a:	0030      	movs	r0, r6
    2f5c:	2720      	movs	r7, #32
    2f5e:	40c8      	lsrs	r0, r1
    2f60:	1a79      	subs	r1, r7, r1
    2f62:	408e      	lsls	r6, r1
    2f64:	1e71      	subs	r1, r6, #1
    2f66:	418e      	sbcs	r6, r1
    2f68:	4306      	orrs	r6, r0
    2f6a:	199b      	adds	r3, r3, r6
    2f6c:	0159      	lsls	r1, r3, #5
    2f6e:	d5d6      	bpl.n	2f1e <__aeabi_fsub+0xea>
    2f70:	3401      	adds	r4, #1
    2f72:	2cff      	cmp	r4, #255	; 0xff
    2f74:	d100      	bne.n	2f78 <__aeabi_fsub+0x144>
    2f76:	e085      	b.n	3084 <__aeabi_fsub+0x250>
    2f78:	2201      	movs	r2, #1
    2f7a:	497a      	ldr	r1, [pc, #488]	; (3164 <__aeabi_fsub+0x330>)
    2f7c:	401a      	ands	r2, r3
    2f7e:	085b      	lsrs	r3, r3, #1
    2f80:	400b      	ands	r3, r1
    2f82:	4313      	orrs	r3, r2
    2f84:	e79c      	b.n	2ec0 <__aeabi_fsub+0x8c>
    2f86:	2e00      	cmp	r6, #0
    2f88:	d000      	beq.n	2f8c <__aeabi_fsub+0x158>
    2f8a:	e770      	b.n	2e6e <__aeabi_fsub+0x3a>
    2f8c:	e76b      	b.n	2e66 <__aeabi_fsub+0x32>
    2f8e:	1e3b      	subs	r3, r7, #0
    2f90:	d1c5      	bne.n	2f1e <__aeabi_fsub+0xea>
    2f92:	2200      	movs	r2, #0
    2f94:	027b      	lsls	r3, r7, #9
    2f96:	0a5b      	lsrs	r3, r3, #9
    2f98:	b2e4      	uxtb	r4, r4
    2f9a:	e7a3      	b.n	2ee4 <__aeabi_fsub+0xb0>
    2f9c:	0014      	movs	r4, r2
    2f9e:	e78f      	b.n	2ec0 <__aeabi_fsub+0x8c>
    2fa0:	2e00      	cmp	r6, #0
    2fa2:	d04d      	beq.n	3040 <__aeabi_fsub+0x20c>
    2fa4:	1e48      	subs	r0, r1, #1
    2fa6:	2800      	cmp	r0, #0
    2fa8:	d157      	bne.n	305a <__aeabi_fsub+0x226>
    2faa:	199b      	adds	r3, r3, r6
    2fac:	2401      	movs	r4, #1
    2fae:	015a      	lsls	r2, r3, #5
    2fb0:	d5b5      	bpl.n	2f1e <__aeabi_fsub+0xea>
    2fb2:	2402      	movs	r4, #2
    2fb4:	e7e0      	b.n	2f78 <__aeabi_fsub+0x144>
    2fb6:	2a00      	cmp	r2, #0
    2fb8:	d125      	bne.n	3006 <__aeabi_fsub+0x1d2>
    2fba:	1c62      	adds	r2, r4, #1
    2fbc:	b2d2      	uxtb	r2, r2
    2fbe:	2a01      	cmp	r2, #1
    2fc0:	dd72      	ble.n	30a8 <__aeabi_fsub+0x274>
    2fc2:	1b9f      	subs	r7, r3, r6
    2fc4:	017a      	lsls	r2, r7, #5
    2fc6:	d535      	bpl.n	3034 <__aeabi_fsub+0x200>
    2fc8:	1af7      	subs	r7, r6, r3
    2fca:	000d      	movs	r5, r1
    2fcc:	e764      	b.n	2e98 <__aeabi_fsub+0x64>
    2fce:	2201      	movs	r2, #1
    2fd0:	2300      	movs	r3, #0
    2fd2:	402a      	ands	r2, r5
    2fd4:	e786      	b.n	2ee4 <__aeabi_fsub+0xb0>
    2fd6:	003b      	movs	r3, r7
    2fd8:	4a63      	ldr	r2, [pc, #396]	; (3168 <__aeabi_fsub+0x334>)
    2fda:	1a24      	subs	r4, r4, r0
    2fdc:	4013      	ands	r3, r2
    2fde:	e76f      	b.n	2ec0 <__aeabi_fsub+0x8c>
    2fe0:	2900      	cmp	r1, #0
    2fe2:	d16c      	bne.n	30be <__aeabi_fsub+0x28a>
    2fe4:	1c61      	adds	r1, r4, #1
    2fe6:	b2c8      	uxtb	r0, r1
    2fe8:	2801      	cmp	r0, #1
    2fea:	dd4e      	ble.n	308a <__aeabi_fsub+0x256>
    2fec:	29ff      	cmp	r1, #255	; 0xff
    2fee:	d049      	beq.n	3084 <__aeabi_fsub+0x250>
    2ff0:	199b      	adds	r3, r3, r6
    2ff2:	085b      	lsrs	r3, r3, #1
    2ff4:	000c      	movs	r4, r1
    2ff6:	e763      	b.n	2ec0 <__aeabi_fsub+0x8c>
    2ff8:	2aff      	cmp	r2, #255	; 0xff
    2ffa:	d041      	beq.n	3080 <__aeabi_fsub+0x24c>
    2ffc:	000a      	movs	r2, r1
    2ffe:	e781      	b.n	2f04 <__aeabi_fsub+0xd0>
    3000:	2601      	movs	r6, #1
    3002:	1b9b      	subs	r3, r3, r6
    3004:	e789      	b.n	2f1a <__aeabi_fsub+0xe6>
    3006:	2c00      	cmp	r4, #0
    3008:	d01c      	beq.n	3044 <__aeabi_fsub+0x210>
    300a:	28ff      	cmp	r0, #255	; 0xff
    300c:	d021      	beq.n	3052 <__aeabi_fsub+0x21e>
    300e:	2480      	movs	r4, #128	; 0x80
    3010:	04e4      	lsls	r4, r4, #19
    3012:	4252      	negs	r2, r2
    3014:	4323      	orrs	r3, r4
    3016:	2a1b      	cmp	r2, #27
    3018:	dd00      	ble.n	301c <__aeabi_fsub+0x1e8>
    301a:	e096      	b.n	314a <__aeabi_fsub+0x316>
    301c:	001c      	movs	r4, r3
    301e:	2520      	movs	r5, #32
    3020:	40d4      	lsrs	r4, r2
    3022:	1aaa      	subs	r2, r5, r2
    3024:	4093      	lsls	r3, r2
    3026:	1e5a      	subs	r2, r3, #1
    3028:	4193      	sbcs	r3, r2
    302a:	4323      	orrs	r3, r4
    302c:	1af3      	subs	r3, r6, r3
    302e:	0004      	movs	r4, r0
    3030:	000d      	movs	r5, r1
    3032:	e72d      	b.n	2e90 <__aeabi_fsub+0x5c>
    3034:	2f00      	cmp	r7, #0
    3036:	d000      	beq.n	303a <__aeabi_fsub+0x206>
    3038:	e72e      	b.n	2e98 <__aeabi_fsub+0x64>
    303a:	2200      	movs	r2, #0
    303c:	2400      	movs	r4, #0
    303e:	e7a9      	b.n	2f94 <__aeabi_fsub+0x160>
    3040:	000c      	movs	r4, r1
    3042:	e73d      	b.n	2ec0 <__aeabi_fsub+0x8c>
    3044:	2b00      	cmp	r3, #0
    3046:	d058      	beq.n	30fa <__aeabi_fsub+0x2c6>
    3048:	43d2      	mvns	r2, r2
    304a:	2a00      	cmp	r2, #0
    304c:	d0ee      	beq.n	302c <__aeabi_fsub+0x1f8>
    304e:	28ff      	cmp	r0, #255	; 0xff
    3050:	d1e1      	bne.n	3016 <__aeabi_fsub+0x1e2>
    3052:	0033      	movs	r3, r6
    3054:	24ff      	movs	r4, #255	; 0xff
    3056:	000d      	movs	r5, r1
    3058:	e732      	b.n	2ec0 <__aeabi_fsub+0x8c>
    305a:	29ff      	cmp	r1, #255	; 0xff
    305c:	d010      	beq.n	3080 <__aeabi_fsub+0x24c>
    305e:	0001      	movs	r1, r0
    3060:	e778      	b.n	2f54 <__aeabi_fsub+0x120>
    3062:	2b00      	cmp	r3, #0
    3064:	d06e      	beq.n	3144 <__aeabi_fsub+0x310>
    3066:	24ff      	movs	r4, #255	; 0xff
    3068:	2e00      	cmp	r6, #0
    306a:	d100      	bne.n	306e <__aeabi_fsub+0x23a>
    306c:	e728      	b.n	2ec0 <__aeabi_fsub+0x8c>
    306e:	2280      	movs	r2, #128	; 0x80
    3070:	4651      	mov	r1, sl
    3072:	03d2      	lsls	r2, r2, #15
    3074:	4211      	tst	r1, r2
    3076:	d003      	beq.n	3080 <__aeabi_fsub+0x24c>
    3078:	4661      	mov	r1, ip
    307a:	4211      	tst	r1, r2
    307c:	d100      	bne.n	3080 <__aeabi_fsub+0x24c>
    307e:	0033      	movs	r3, r6
    3080:	24ff      	movs	r4, #255	; 0xff
    3082:	e71d      	b.n	2ec0 <__aeabi_fsub+0x8c>
    3084:	24ff      	movs	r4, #255	; 0xff
    3086:	2300      	movs	r3, #0
    3088:	e72c      	b.n	2ee4 <__aeabi_fsub+0xb0>
    308a:	2c00      	cmp	r4, #0
    308c:	d1e9      	bne.n	3062 <__aeabi_fsub+0x22e>
    308e:	2b00      	cmp	r3, #0
    3090:	d063      	beq.n	315a <__aeabi_fsub+0x326>
    3092:	2e00      	cmp	r6, #0
    3094:	d100      	bne.n	3098 <__aeabi_fsub+0x264>
    3096:	e713      	b.n	2ec0 <__aeabi_fsub+0x8c>
    3098:	199b      	adds	r3, r3, r6
    309a:	015a      	lsls	r2, r3, #5
    309c:	d400      	bmi.n	30a0 <__aeabi_fsub+0x26c>
    309e:	e73e      	b.n	2f1e <__aeabi_fsub+0xea>
    30a0:	4a31      	ldr	r2, [pc, #196]	; (3168 <__aeabi_fsub+0x334>)
    30a2:	000c      	movs	r4, r1
    30a4:	4013      	ands	r3, r2
    30a6:	e70b      	b.n	2ec0 <__aeabi_fsub+0x8c>
    30a8:	2c00      	cmp	r4, #0
    30aa:	d11e      	bne.n	30ea <__aeabi_fsub+0x2b6>
    30ac:	2b00      	cmp	r3, #0
    30ae:	d12f      	bne.n	3110 <__aeabi_fsub+0x2dc>
    30b0:	2e00      	cmp	r6, #0
    30b2:	d04f      	beq.n	3154 <__aeabi_fsub+0x320>
    30b4:	0033      	movs	r3, r6
    30b6:	000d      	movs	r5, r1
    30b8:	e702      	b.n	2ec0 <__aeabi_fsub+0x8c>
    30ba:	2601      	movs	r6, #1
    30bc:	e755      	b.n	2f6a <__aeabi_fsub+0x136>
    30be:	2c00      	cmp	r4, #0
    30c0:	d11f      	bne.n	3102 <__aeabi_fsub+0x2ce>
    30c2:	2b00      	cmp	r3, #0
    30c4:	d043      	beq.n	314e <__aeabi_fsub+0x31a>
    30c6:	43c9      	mvns	r1, r1
    30c8:	2900      	cmp	r1, #0
    30ca:	d00b      	beq.n	30e4 <__aeabi_fsub+0x2b0>
    30cc:	28ff      	cmp	r0, #255	; 0xff
    30ce:	d039      	beq.n	3144 <__aeabi_fsub+0x310>
    30d0:	291b      	cmp	r1, #27
    30d2:	dc44      	bgt.n	315e <__aeabi_fsub+0x32a>
    30d4:	001c      	movs	r4, r3
    30d6:	2720      	movs	r7, #32
    30d8:	40cc      	lsrs	r4, r1
    30da:	1a79      	subs	r1, r7, r1
    30dc:	408b      	lsls	r3, r1
    30de:	1e59      	subs	r1, r3, #1
    30e0:	418b      	sbcs	r3, r1
    30e2:	4323      	orrs	r3, r4
    30e4:	199b      	adds	r3, r3, r6
    30e6:	0004      	movs	r4, r0
    30e8:	e740      	b.n	2f6c <__aeabi_fsub+0x138>
    30ea:	2b00      	cmp	r3, #0
    30ec:	d11a      	bne.n	3124 <__aeabi_fsub+0x2f0>
    30ee:	2e00      	cmp	r6, #0
    30f0:	d124      	bne.n	313c <__aeabi_fsub+0x308>
    30f2:	2780      	movs	r7, #128	; 0x80
    30f4:	2200      	movs	r2, #0
    30f6:	03ff      	lsls	r7, r7, #15
    30f8:	e71b      	b.n	2f32 <__aeabi_fsub+0xfe>
    30fa:	0033      	movs	r3, r6
    30fc:	0004      	movs	r4, r0
    30fe:	000d      	movs	r5, r1
    3100:	e6de      	b.n	2ec0 <__aeabi_fsub+0x8c>
    3102:	28ff      	cmp	r0, #255	; 0xff
    3104:	d01e      	beq.n	3144 <__aeabi_fsub+0x310>
    3106:	2480      	movs	r4, #128	; 0x80
    3108:	04e4      	lsls	r4, r4, #19
    310a:	4249      	negs	r1, r1
    310c:	4323      	orrs	r3, r4
    310e:	e7df      	b.n	30d0 <__aeabi_fsub+0x29c>
    3110:	2e00      	cmp	r6, #0
    3112:	d100      	bne.n	3116 <__aeabi_fsub+0x2e2>
    3114:	e6d4      	b.n	2ec0 <__aeabi_fsub+0x8c>
    3116:	1b9f      	subs	r7, r3, r6
    3118:	017a      	lsls	r2, r7, #5
    311a:	d400      	bmi.n	311e <__aeabi_fsub+0x2ea>
    311c:	e737      	b.n	2f8e <__aeabi_fsub+0x15a>
    311e:	1af3      	subs	r3, r6, r3
    3120:	000d      	movs	r5, r1
    3122:	e6cd      	b.n	2ec0 <__aeabi_fsub+0x8c>
    3124:	24ff      	movs	r4, #255	; 0xff
    3126:	2e00      	cmp	r6, #0
    3128:	d100      	bne.n	312c <__aeabi_fsub+0x2f8>
    312a:	e6c9      	b.n	2ec0 <__aeabi_fsub+0x8c>
    312c:	2280      	movs	r2, #128	; 0x80
    312e:	4650      	mov	r0, sl
    3130:	03d2      	lsls	r2, r2, #15
    3132:	4210      	tst	r0, r2
    3134:	d0a4      	beq.n	3080 <__aeabi_fsub+0x24c>
    3136:	4660      	mov	r0, ip
    3138:	4210      	tst	r0, r2
    313a:	d1a1      	bne.n	3080 <__aeabi_fsub+0x24c>
    313c:	0033      	movs	r3, r6
    313e:	000d      	movs	r5, r1
    3140:	24ff      	movs	r4, #255	; 0xff
    3142:	e6bd      	b.n	2ec0 <__aeabi_fsub+0x8c>
    3144:	0033      	movs	r3, r6
    3146:	24ff      	movs	r4, #255	; 0xff
    3148:	e6ba      	b.n	2ec0 <__aeabi_fsub+0x8c>
    314a:	2301      	movs	r3, #1
    314c:	e76e      	b.n	302c <__aeabi_fsub+0x1f8>
    314e:	0033      	movs	r3, r6
    3150:	0004      	movs	r4, r0
    3152:	e6b5      	b.n	2ec0 <__aeabi_fsub+0x8c>
    3154:	2700      	movs	r7, #0
    3156:	2200      	movs	r2, #0
    3158:	e71c      	b.n	2f94 <__aeabi_fsub+0x160>
    315a:	0033      	movs	r3, r6
    315c:	e6b0      	b.n	2ec0 <__aeabi_fsub+0x8c>
    315e:	2301      	movs	r3, #1
    3160:	e7c0      	b.n	30e4 <__aeabi_fsub+0x2b0>
    3162:	46c0      	nop			; (mov r8, r8)
    3164:	7dffffff 	.word	0x7dffffff
    3168:	fbffffff 	.word	0xfbffffff

0000316c <__aeabi_f2iz>:
    316c:	0241      	lsls	r1, r0, #9
    316e:	0043      	lsls	r3, r0, #1
    3170:	0fc2      	lsrs	r2, r0, #31
    3172:	0a49      	lsrs	r1, r1, #9
    3174:	0e1b      	lsrs	r3, r3, #24
    3176:	2000      	movs	r0, #0
    3178:	2b7e      	cmp	r3, #126	; 0x7e
    317a:	dd0d      	ble.n	3198 <__aeabi_f2iz+0x2c>
    317c:	2b9d      	cmp	r3, #157	; 0x9d
    317e:	dc0c      	bgt.n	319a <__aeabi_f2iz+0x2e>
    3180:	2080      	movs	r0, #128	; 0x80
    3182:	0400      	lsls	r0, r0, #16
    3184:	4301      	orrs	r1, r0
    3186:	2b95      	cmp	r3, #149	; 0x95
    3188:	dc0a      	bgt.n	31a0 <__aeabi_f2iz+0x34>
    318a:	2096      	movs	r0, #150	; 0x96
    318c:	1ac3      	subs	r3, r0, r3
    318e:	40d9      	lsrs	r1, r3
    3190:	4248      	negs	r0, r1
    3192:	2a00      	cmp	r2, #0
    3194:	d100      	bne.n	3198 <__aeabi_f2iz+0x2c>
    3196:	0008      	movs	r0, r1
    3198:	4770      	bx	lr
    319a:	4b03      	ldr	r3, [pc, #12]	; (31a8 <__aeabi_f2iz+0x3c>)
    319c:	18d0      	adds	r0, r2, r3
    319e:	e7fb      	b.n	3198 <__aeabi_f2iz+0x2c>
    31a0:	3b96      	subs	r3, #150	; 0x96
    31a2:	4099      	lsls	r1, r3
    31a4:	e7f4      	b.n	3190 <__aeabi_f2iz+0x24>
    31a6:	46c0      	nop			; (mov r8, r8)
    31a8:	7fffffff 	.word	0x7fffffff

000031ac <__aeabi_i2f>:
    31ac:	b570      	push	{r4, r5, r6, lr}
    31ae:	2800      	cmp	r0, #0
    31b0:	d030      	beq.n	3214 <__aeabi_i2f+0x68>
    31b2:	17c3      	asrs	r3, r0, #31
    31b4:	18c4      	adds	r4, r0, r3
    31b6:	405c      	eors	r4, r3
    31b8:	0fc5      	lsrs	r5, r0, #31
    31ba:	0020      	movs	r0, r4
    31bc:	f001 fea0 	bl	4f00 <__clzsi2>
    31c0:	239e      	movs	r3, #158	; 0x9e
    31c2:	1a1b      	subs	r3, r3, r0
    31c4:	2b96      	cmp	r3, #150	; 0x96
    31c6:	dc0d      	bgt.n	31e4 <__aeabi_i2f+0x38>
    31c8:	2296      	movs	r2, #150	; 0x96
    31ca:	1ad2      	subs	r2, r2, r3
    31cc:	4094      	lsls	r4, r2
    31ce:	002a      	movs	r2, r5
    31d0:	0264      	lsls	r4, r4, #9
    31d2:	0a64      	lsrs	r4, r4, #9
    31d4:	b2db      	uxtb	r3, r3
    31d6:	0264      	lsls	r4, r4, #9
    31d8:	05db      	lsls	r3, r3, #23
    31da:	0a60      	lsrs	r0, r4, #9
    31dc:	07d2      	lsls	r2, r2, #31
    31de:	4318      	orrs	r0, r3
    31e0:	4310      	orrs	r0, r2
    31e2:	bd70      	pop	{r4, r5, r6, pc}
    31e4:	2b99      	cmp	r3, #153	; 0x99
    31e6:	dc19      	bgt.n	321c <__aeabi_i2f+0x70>
    31e8:	2299      	movs	r2, #153	; 0x99
    31ea:	1ad2      	subs	r2, r2, r3
    31ec:	2a00      	cmp	r2, #0
    31ee:	dd29      	ble.n	3244 <__aeabi_i2f+0x98>
    31f0:	4094      	lsls	r4, r2
    31f2:	0022      	movs	r2, r4
    31f4:	4c14      	ldr	r4, [pc, #80]	; (3248 <__aeabi_i2f+0x9c>)
    31f6:	4014      	ands	r4, r2
    31f8:	0751      	lsls	r1, r2, #29
    31fa:	d004      	beq.n	3206 <__aeabi_i2f+0x5a>
    31fc:	210f      	movs	r1, #15
    31fe:	400a      	ands	r2, r1
    3200:	2a04      	cmp	r2, #4
    3202:	d000      	beq.n	3206 <__aeabi_i2f+0x5a>
    3204:	3404      	adds	r4, #4
    3206:	0162      	lsls	r2, r4, #5
    3208:	d413      	bmi.n	3232 <__aeabi_i2f+0x86>
    320a:	01a4      	lsls	r4, r4, #6
    320c:	0a64      	lsrs	r4, r4, #9
    320e:	b2db      	uxtb	r3, r3
    3210:	002a      	movs	r2, r5
    3212:	e7e0      	b.n	31d6 <__aeabi_i2f+0x2a>
    3214:	2200      	movs	r2, #0
    3216:	2300      	movs	r3, #0
    3218:	2400      	movs	r4, #0
    321a:	e7dc      	b.n	31d6 <__aeabi_i2f+0x2a>
    321c:	2205      	movs	r2, #5
    321e:	0021      	movs	r1, r4
    3220:	1a12      	subs	r2, r2, r0
    3222:	40d1      	lsrs	r1, r2
    3224:	22b9      	movs	r2, #185	; 0xb9
    3226:	1ad2      	subs	r2, r2, r3
    3228:	4094      	lsls	r4, r2
    322a:	1e62      	subs	r2, r4, #1
    322c:	4194      	sbcs	r4, r2
    322e:	430c      	orrs	r4, r1
    3230:	e7da      	b.n	31e8 <__aeabi_i2f+0x3c>
    3232:	4b05      	ldr	r3, [pc, #20]	; (3248 <__aeabi_i2f+0x9c>)
    3234:	002a      	movs	r2, r5
    3236:	401c      	ands	r4, r3
    3238:	239f      	movs	r3, #159	; 0x9f
    323a:	01a4      	lsls	r4, r4, #6
    323c:	1a1b      	subs	r3, r3, r0
    323e:	0a64      	lsrs	r4, r4, #9
    3240:	b2db      	uxtb	r3, r3
    3242:	e7c8      	b.n	31d6 <__aeabi_i2f+0x2a>
    3244:	0022      	movs	r2, r4
    3246:	e7d5      	b.n	31f4 <__aeabi_i2f+0x48>
    3248:	fbffffff 	.word	0xfbffffff

0000324c <__aeabi_ui2f>:
    324c:	b510      	push	{r4, lr}
    324e:	1e04      	subs	r4, r0, #0
    3250:	d027      	beq.n	32a2 <__aeabi_ui2f+0x56>
    3252:	f001 fe55 	bl	4f00 <__clzsi2>
    3256:	239e      	movs	r3, #158	; 0x9e
    3258:	1a1b      	subs	r3, r3, r0
    325a:	2b96      	cmp	r3, #150	; 0x96
    325c:	dc0a      	bgt.n	3274 <__aeabi_ui2f+0x28>
    325e:	2296      	movs	r2, #150	; 0x96
    3260:	1ad2      	subs	r2, r2, r3
    3262:	4094      	lsls	r4, r2
    3264:	0264      	lsls	r4, r4, #9
    3266:	0a64      	lsrs	r4, r4, #9
    3268:	b2db      	uxtb	r3, r3
    326a:	0264      	lsls	r4, r4, #9
    326c:	05db      	lsls	r3, r3, #23
    326e:	0a60      	lsrs	r0, r4, #9
    3270:	4318      	orrs	r0, r3
    3272:	bd10      	pop	{r4, pc}
    3274:	2b99      	cmp	r3, #153	; 0x99
    3276:	dc17      	bgt.n	32a8 <__aeabi_ui2f+0x5c>
    3278:	2299      	movs	r2, #153	; 0x99
    327a:	1ad2      	subs	r2, r2, r3
    327c:	2a00      	cmp	r2, #0
    327e:	dd27      	ble.n	32d0 <__aeabi_ui2f+0x84>
    3280:	4094      	lsls	r4, r2
    3282:	0022      	movs	r2, r4
    3284:	4c13      	ldr	r4, [pc, #76]	; (32d4 <__aeabi_ui2f+0x88>)
    3286:	4014      	ands	r4, r2
    3288:	0751      	lsls	r1, r2, #29
    328a:	d004      	beq.n	3296 <__aeabi_ui2f+0x4a>
    328c:	210f      	movs	r1, #15
    328e:	400a      	ands	r2, r1
    3290:	2a04      	cmp	r2, #4
    3292:	d000      	beq.n	3296 <__aeabi_ui2f+0x4a>
    3294:	3404      	adds	r4, #4
    3296:	0162      	lsls	r2, r4, #5
    3298:	d412      	bmi.n	32c0 <__aeabi_ui2f+0x74>
    329a:	01a4      	lsls	r4, r4, #6
    329c:	0a64      	lsrs	r4, r4, #9
    329e:	b2db      	uxtb	r3, r3
    32a0:	e7e3      	b.n	326a <__aeabi_ui2f+0x1e>
    32a2:	2300      	movs	r3, #0
    32a4:	2400      	movs	r4, #0
    32a6:	e7e0      	b.n	326a <__aeabi_ui2f+0x1e>
    32a8:	22b9      	movs	r2, #185	; 0xb9
    32aa:	0021      	movs	r1, r4
    32ac:	1ad2      	subs	r2, r2, r3
    32ae:	4091      	lsls	r1, r2
    32b0:	000a      	movs	r2, r1
    32b2:	1e51      	subs	r1, r2, #1
    32b4:	418a      	sbcs	r2, r1
    32b6:	2105      	movs	r1, #5
    32b8:	1a09      	subs	r1, r1, r0
    32ba:	40cc      	lsrs	r4, r1
    32bc:	4314      	orrs	r4, r2
    32be:	e7db      	b.n	3278 <__aeabi_ui2f+0x2c>
    32c0:	4b04      	ldr	r3, [pc, #16]	; (32d4 <__aeabi_ui2f+0x88>)
    32c2:	401c      	ands	r4, r3
    32c4:	239f      	movs	r3, #159	; 0x9f
    32c6:	01a4      	lsls	r4, r4, #6
    32c8:	1a1b      	subs	r3, r3, r0
    32ca:	0a64      	lsrs	r4, r4, #9
    32cc:	b2db      	uxtb	r3, r3
    32ce:	e7cc      	b.n	326a <__aeabi_ui2f+0x1e>
    32d0:	0022      	movs	r2, r4
    32d2:	e7d7      	b.n	3284 <__aeabi_ui2f+0x38>
    32d4:	fbffffff 	.word	0xfbffffff

000032d8 <__aeabi_dadd>:
    32d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    32da:	4645      	mov	r5, r8
    32dc:	46de      	mov	lr, fp
    32de:	4657      	mov	r7, sl
    32e0:	464e      	mov	r6, r9
    32e2:	030c      	lsls	r4, r1, #12
    32e4:	b5e0      	push	{r5, r6, r7, lr}
    32e6:	004e      	lsls	r6, r1, #1
    32e8:	0fc9      	lsrs	r1, r1, #31
    32ea:	4688      	mov	r8, r1
    32ec:	000d      	movs	r5, r1
    32ee:	0a61      	lsrs	r1, r4, #9
    32f0:	0f44      	lsrs	r4, r0, #29
    32f2:	430c      	orrs	r4, r1
    32f4:	00c7      	lsls	r7, r0, #3
    32f6:	0319      	lsls	r1, r3, #12
    32f8:	0058      	lsls	r0, r3, #1
    32fa:	0fdb      	lsrs	r3, r3, #31
    32fc:	469b      	mov	fp, r3
    32fe:	0a4b      	lsrs	r3, r1, #9
    3300:	0f51      	lsrs	r1, r2, #29
    3302:	430b      	orrs	r3, r1
    3304:	0d76      	lsrs	r6, r6, #21
    3306:	0d40      	lsrs	r0, r0, #21
    3308:	0019      	movs	r1, r3
    330a:	00d2      	lsls	r2, r2, #3
    330c:	45d8      	cmp	r8, fp
    330e:	d100      	bne.n	3312 <__aeabi_dadd+0x3a>
    3310:	e0ae      	b.n	3470 <__aeabi_dadd+0x198>
    3312:	1a35      	subs	r5, r6, r0
    3314:	2d00      	cmp	r5, #0
    3316:	dc00      	bgt.n	331a <__aeabi_dadd+0x42>
    3318:	e0f6      	b.n	3508 <__aeabi_dadd+0x230>
    331a:	2800      	cmp	r0, #0
    331c:	d10f      	bne.n	333e <__aeabi_dadd+0x66>
    331e:	4313      	orrs	r3, r2
    3320:	d100      	bne.n	3324 <__aeabi_dadd+0x4c>
    3322:	e0db      	b.n	34dc <__aeabi_dadd+0x204>
    3324:	1e6b      	subs	r3, r5, #1
    3326:	2b00      	cmp	r3, #0
    3328:	d000      	beq.n	332c <__aeabi_dadd+0x54>
    332a:	e137      	b.n	359c <__aeabi_dadd+0x2c4>
    332c:	1aba      	subs	r2, r7, r2
    332e:	4297      	cmp	r7, r2
    3330:	41bf      	sbcs	r7, r7
    3332:	1a64      	subs	r4, r4, r1
    3334:	427f      	negs	r7, r7
    3336:	1be4      	subs	r4, r4, r7
    3338:	2601      	movs	r6, #1
    333a:	0017      	movs	r7, r2
    333c:	e024      	b.n	3388 <__aeabi_dadd+0xb0>
    333e:	4bc6      	ldr	r3, [pc, #792]	; (3658 <__aeabi_dadd+0x380>)
    3340:	429e      	cmp	r6, r3
    3342:	d04d      	beq.n	33e0 <__aeabi_dadd+0x108>
    3344:	2380      	movs	r3, #128	; 0x80
    3346:	041b      	lsls	r3, r3, #16
    3348:	4319      	orrs	r1, r3
    334a:	2d38      	cmp	r5, #56	; 0x38
    334c:	dd00      	ble.n	3350 <__aeabi_dadd+0x78>
    334e:	e107      	b.n	3560 <__aeabi_dadd+0x288>
    3350:	2d1f      	cmp	r5, #31
    3352:	dd00      	ble.n	3356 <__aeabi_dadd+0x7e>
    3354:	e138      	b.n	35c8 <__aeabi_dadd+0x2f0>
    3356:	2020      	movs	r0, #32
    3358:	1b43      	subs	r3, r0, r5
    335a:	469a      	mov	sl, r3
    335c:	000b      	movs	r3, r1
    335e:	4650      	mov	r0, sl
    3360:	4083      	lsls	r3, r0
    3362:	4699      	mov	r9, r3
    3364:	0013      	movs	r3, r2
    3366:	4648      	mov	r0, r9
    3368:	40eb      	lsrs	r3, r5
    336a:	4318      	orrs	r0, r3
    336c:	0003      	movs	r3, r0
    336e:	4650      	mov	r0, sl
    3370:	4082      	lsls	r2, r0
    3372:	1e50      	subs	r0, r2, #1
    3374:	4182      	sbcs	r2, r0
    3376:	40e9      	lsrs	r1, r5
    3378:	431a      	orrs	r2, r3
    337a:	1aba      	subs	r2, r7, r2
    337c:	1a61      	subs	r1, r4, r1
    337e:	4297      	cmp	r7, r2
    3380:	41a4      	sbcs	r4, r4
    3382:	0017      	movs	r7, r2
    3384:	4264      	negs	r4, r4
    3386:	1b0c      	subs	r4, r1, r4
    3388:	0223      	lsls	r3, r4, #8
    338a:	d562      	bpl.n	3452 <__aeabi_dadd+0x17a>
    338c:	0264      	lsls	r4, r4, #9
    338e:	0a65      	lsrs	r5, r4, #9
    3390:	2d00      	cmp	r5, #0
    3392:	d100      	bne.n	3396 <__aeabi_dadd+0xbe>
    3394:	e0df      	b.n	3556 <__aeabi_dadd+0x27e>
    3396:	0028      	movs	r0, r5
    3398:	f001 fdb2 	bl	4f00 <__clzsi2>
    339c:	0003      	movs	r3, r0
    339e:	3b08      	subs	r3, #8
    33a0:	2b1f      	cmp	r3, #31
    33a2:	dd00      	ble.n	33a6 <__aeabi_dadd+0xce>
    33a4:	e0d2      	b.n	354c <__aeabi_dadd+0x274>
    33a6:	2220      	movs	r2, #32
    33a8:	003c      	movs	r4, r7
    33aa:	1ad2      	subs	r2, r2, r3
    33ac:	409d      	lsls	r5, r3
    33ae:	40d4      	lsrs	r4, r2
    33b0:	409f      	lsls	r7, r3
    33b2:	4325      	orrs	r5, r4
    33b4:	429e      	cmp	r6, r3
    33b6:	dd00      	ble.n	33ba <__aeabi_dadd+0xe2>
    33b8:	e0c4      	b.n	3544 <__aeabi_dadd+0x26c>
    33ba:	1b9e      	subs	r6, r3, r6
    33bc:	1c73      	adds	r3, r6, #1
    33be:	2b1f      	cmp	r3, #31
    33c0:	dd00      	ble.n	33c4 <__aeabi_dadd+0xec>
    33c2:	e0f1      	b.n	35a8 <__aeabi_dadd+0x2d0>
    33c4:	2220      	movs	r2, #32
    33c6:	0038      	movs	r0, r7
    33c8:	0029      	movs	r1, r5
    33ca:	1ad2      	subs	r2, r2, r3
    33cc:	40d8      	lsrs	r0, r3
    33ce:	4091      	lsls	r1, r2
    33d0:	4097      	lsls	r7, r2
    33d2:	002c      	movs	r4, r5
    33d4:	4301      	orrs	r1, r0
    33d6:	1e78      	subs	r0, r7, #1
    33d8:	4187      	sbcs	r7, r0
    33da:	40dc      	lsrs	r4, r3
    33dc:	2600      	movs	r6, #0
    33de:	430f      	orrs	r7, r1
    33e0:	077b      	lsls	r3, r7, #29
    33e2:	d009      	beq.n	33f8 <__aeabi_dadd+0x120>
    33e4:	230f      	movs	r3, #15
    33e6:	403b      	ands	r3, r7
    33e8:	2b04      	cmp	r3, #4
    33ea:	d005      	beq.n	33f8 <__aeabi_dadd+0x120>
    33ec:	1d3b      	adds	r3, r7, #4
    33ee:	42bb      	cmp	r3, r7
    33f0:	41bf      	sbcs	r7, r7
    33f2:	427f      	negs	r7, r7
    33f4:	19e4      	adds	r4, r4, r7
    33f6:	001f      	movs	r7, r3
    33f8:	0223      	lsls	r3, r4, #8
    33fa:	d52c      	bpl.n	3456 <__aeabi_dadd+0x17e>
    33fc:	4b96      	ldr	r3, [pc, #600]	; (3658 <__aeabi_dadd+0x380>)
    33fe:	3601      	adds	r6, #1
    3400:	429e      	cmp	r6, r3
    3402:	d100      	bne.n	3406 <__aeabi_dadd+0x12e>
    3404:	e09a      	b.n	353c <__aeabi_dadd+0x264>
    3406:	4645      	mov	r5, r8
    3408:	4b94      	ldr	r3, [pc, #592]	; (365c <__aeabi_dadd+0x384>)
    340a:	08ff      	lsrs	r7, r7, #3
    340c:	401c      	ands	r4, r3
    340e:	0760      	lsls	r0, r4, #29
    3410:	0576      	lsls	r6, r6, #21
    3412:	0264      	lsls	r4, r4, #9
    3414:	4307      	orrs	r7, r0
    3416:	0b24      	lsrs	r4, r4, #12
    3418:	0d76      	lsrs	r6, r6, #21
    341a:	2100      	movs	r1, #0
    341c:	0324      	lsls	r4, r4, #12
    341e:	0b23      	lsrs	r3, r4, #12
    3420:	0d0c      	lsrs	r4, r1, #20
    3422:	4a8f      	ldr	r2, [pc, #572]	; (3660 <__aeabi_dadd+0x388>)
    3424:	0524      	lsls	r4, r4, #20
    3426:	431c      	orrs	r4, r3
    3428:	4014      	ands	r4, r2
    342a:	0533      	lsls	r3, r6, #20
    342c:	4323      	orrs	r3, r4
    342e:	005b      	lsls	r3, r3, #1
    3430:	07ed      	lsls	r5, r5, #31
    3432:	085b      	lsrs	r3, r3, #1
    3434:	432b      	orrs	r3, r5
    3436:	0038      	movs	r0, r7
    3438:	0019      	movs	r1, r3
    343a:	bc3c      	pop	{r2, r3, r4, r5}
    343c:	4690      	mov	r8, r2
    343e:	4699      	mov	r9, r3
    3440:	46a2      	mov	sl, r4
    3442:	46ab      	mov	fp, r5
    3444:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3446:	4664      	mov	r4, ip
    3448:	4304      	orrs	r4, r0
    344a:	d100      	bne.n	344e <__aeabi_dadd+0x176>
    344c:	e211      	b.n	3872 <__aeabi_dadd+0x59a>
    344e:	0004      	movs	r4, r0
    3450:	4667      	mov	r7, ip
    3452:	077b      	lsls	r3, r7, #29
    3454:	d1c6      	bne.n	33e4 <__aeabi_dadd+0x10c>
    3456:	4645      	mov	r5, r8
    3458:	0760      	lsls	r0, r4, #29
    345a:	08ff      	lsrs	r7, r7, #3
    345c:	4307      	orrs	r7, r0
    345e:	08e4      	lsrs	r4, r4, #3
    3460:	4b7d      	ldr	r3, [pc, #500]	; (3658 <__aeabi_dadd+0x380>)
    3462:	429e      	cmp	r6, r3
    3464:	d030      	beq.n	34c8 <__aeabi_dadd+0x1f0>
    3466:	0324      	lsls	r4, r4, #12
    3468:	0576      	lsls	r6, r6, #21
    346a:	0b24      	lsrs	r4, r4, #12
    346c:	0d76      	lsrs	r6, r6, #21
    346e:	e7d4      	b.n	341a <__aeabi_dadd+0x142>
    3470:	1a33      	subs	r3, r6, r0
    3472:	469a      	mov	sl, r3
    3474:	2b00      	cmp	r3, #0
    3476:	dd78      	ble.n	356a <__aeabi_dadd+0x292>
    3478:	2800      	cmp	r0, #0
    347a:	d031      	beq.n	34e0 <__aeabi_dadd+0x208>
    347c:	4876      	ldr	r0, [pc, #472]	; (3658 <__aeabi_dadd+0x380>)
    347e:	4286      	cmp	r6, r0
    3480:	d0ae      	beq.n	33e0 <__aeabi_dadd+0x108>
    3482:	2080      	movs	r0, #128	; 0x80
    3484:	0400      	lsls	r0, r0, #16
    3486:	4301      	orrs	r1, r0
    3488:	4653      	mov	r3, sl
    348a:	2b38      	cmp	r3, #56	; 0x38
    348c:	dc00      	bgt.n	3490 <__aeabi_dadd+0x1b8>
    348e:	e0e9      	b.n	3664 <__aeabi_dadd+0x38c>
    3490:	430a      	orrs	r2, r1
    3492:	1e51      	subs	r1, r2, #1
    3494:	418a      	sbcs	r2, r1
    3496:	2100      	movs	r1, #0
    3498:	19d2      	adds	r2, r2, r7
    349a:	42ba      	cmp	r2, r7
    349c:	41bf      	sbcs	r7, r7
    349e:	1909      	adds	r1, r1, r4
    34a0:	427c      	negs	r4, r7
    34a2:	0017      	movs	r7, r2
    34a4:	190c      	adds	r4, r1, r4
    34a6:	0223      	lsls	r3, r4, #8
    34a8:	d5d3      	bpl.n	3452 <__aeabi_dadd+0x17a>
    34aa:	4b6b      	ldr	r3, [pc, #428]	; (3658 <__aeabi_dadd+0x380>)
    34ac:	3601      	adds	r6, #1
    34ae:	429e      	cmp	r6, r3
    34b0:	d100      	bne.n	34b4 <__aeabi_dadd+0x1dc>
    34b2:	e13a      	b.n	372a <__aeabi_dadd+0x452>
    34b4:	2001      	movs	r0, #1
    34b6:	4b69      	ldr	r3, [pc, #420]	; (365c <__aeabi_dadd+0x384>)
    34b8:	401c      	ands	r4, r3
    34ba:	087b      	lsrs	r3, r7, #1
    34bc:	4007      	ands	r7, r0
    34be:	431f      	orrs	r7, r3
    34c0:	07e0      	lsls	r0, r4, #31
    34c2:	4307      	orrs	r7, r0
    34c4:	0864      	lsrs	r4, r4, #1
    34c6:	e78b      	b.n	33e0 <__aeabi_dadd+0x108>
    34c8:	0023      	movs	r3, r4
    34ca:	433b      	orrs	r3, r7
    34cc:	d100      	bne.n	34d0 <__aeabi_dadd+0x1f8>
    34ce:	e1cb      	b.n	3868 <__aeabi_dadd+0x590>
    34d0:	2280      	movs	r2, #128	; 0x80
    34d2:	0312      	lsls	r2, r2, #12
    34d4:	4314      	orrs	r4, r2
    34d6:	0324      	lsls	r4, r4, #12
    34d8:	0b24      	lsrs	r4, r4, #12
    34da:	e79e      	b.n	341a <__aeabi_dadd+0x142>
    34dc:	002e      	movs	r6, r5
    34de:	e77f      	b.n	33e0 <__aeabi_dadd+0x108>
    34e0:	0008      	movs	r0, r1
    34e2:	4310      	orrs	r0, r2
    34e4:	d100      	bne.n	34e8 <__aeabi_dadd+0x210>
    34e6:	e0b4      	b.n	3652 <__aeabi_dadd+0x37a>
    34e8:	1e58      	subs	r0, r3, #1
    34ea:	2800      	cmp	r0, #0
    34ec:	d000      	beq.n	34f0 <__aeabi_dadd+0x218>
    34ee:	e0de      	b.n	36ae <__aeabi_dadd+0x3d6>
    34f0:	18ba      	adds	r2, r7, r2
    34f2:	42ba      	cmp	r2, r7
    34f4:	419b      	sbcs	r3, r3
    34f6:	1864      	adds	r4, r4, r1
    34f8:	425b      	negs	r3, r3
    34fa:	18e4      	adds	r4, r4, r3
    34fc:	0017      	movs	r7, r2
    34fe:	2601      	movs	r6, #1
    3500:	0223      	lsls	r3, r4, #8
    3502:	d5a6      	bpl.n	3452 <__aeabi_dadd+0x17a>
    3504:	2602      	movs	r6, #2
    3506:	e7d5      	b.n	34b4 <__aeabi_dadd+0x1dc>
    3508:	2d00      	cmp	r5, #0
    350a:	d16e      	bne.n	35ea <__aeabi_dadd+0x312>
    350c:	1c70      	adds	r0, r6, #1
    350e:	0540      	lsls	r0, r0, #21
    3510:	0d40      	lsrs	r0, r0, #21
    3512:	2801      	cmp	r0, #1
    3514:	dc00      	bgt.n	3518 <__aeabi_dadd+0x240>
    3516:	e0f9      	b.n	370c <__aeabi_dadd+0x434>
    3518:	1ab8      	subs	r0, r7, r2
    351a:	4684      	mov	ip, r0
    351c:	4287      	cmp	r7, r0
    351e:	4180      	sbcs	r0, r0
    3520:	1ae5      	subs	r5, r4, r3
    3522:	4240      	negs	r0, r0
    3524:	1a2d      	subs	r5, r5, r0
    3526:	0228      	lsls	r0, r5, #8
    3528:	d400      	bmi.n	352c <__aeabi_dadd+0x254>
    352a:	e089      	b.n	3640 <__aeabi_dadd+0x368>
    352c:	1bd7      	subs	r7, r2, r7
    352e:	42ba      	cmp	r2, r7
    3530:	4192      	sbcs	r2, r2
    3532:	1b1c      	subs	r4, r3, r4
    3534:	4252      	negs	r2, r2
    3536:	1aa5      	subs	r5, r4, r2
    3538:	46d8      	mov	r8, fp
    353a:	e729      	b.n	3390 <__aeabi_dadd+0xb8>
    353c:	4645      	mov	r5, r8
    353e:	2400      	movs	r4, #0
    3540:	2700      	movs	r7, #0
    3542:	e76a      	b.n	341a <__aeabi_dadd+0x142>
    3544:	4c45      	ldr	r4, [pc, #276]	; (365c <__aeabi_dadd+0x384>)
    3546:	1af6      	subs	r6, r6, r3
    3548:	402c      	ands	r4, r5
    354a:	e749      	b.n	33e0 <__aeabi_dadd+0x108>
    354c:	003d      	movs	r5, r7
    354e:	3828      	subs	r0, #40	; 0x28
    3550:	4085      	lsls	r5, r0
    3552:	2700      	movs	r7, #0
    3554:	e72e      	b.n	33b4 <__aeabi_dadd+0xdc>
    3556:	0038      	movs	r0, r7
    3558:	f001 fcd2 	bl	4f00 <__clzsi2>
    355c:	3020      	adds	r0, #32
    355e:	e71d      	b.n	339c <__aeabi_dadd+0xc4>
    3560:	430a      	orrs	r2, r1
    3562:	1e51      	subs	r1, r2, #1
    3564:	418a      	sbcs	r2, r1
    3566:	2100      	movs	r1, #0
    3568:	e707      	b.n	337a <__aeabi_dadd+0xa2>
    356a:	2b00      	cmp	r3, #0
    356c:	d000      	beq.n	3570 <__aeabi_dadd+0x298>
    356e:	e0f3      	b.n	3758 <__aeabi_dadd+0x480>
    3570:	1c70      	adds	r0, r6, #1
    3572:	0543      	lsls	r3, r0, #21
    3574:	0d5b      	lsrs	r3, r3, #21
    3576:	2b01      	cmp	r3, #1
    3578:	dc00      	bgt.n	357c <__aeabi_dadd+0x2a4>
    357a:	e0ad      	b.n	36d8 <__aeabi_dadd+0x400>
    357c:	4b36      	ldr	r3, [pc, #216]	; (3658 <__aeabi_dadd+0x380>)
    357e:	4298      	cmp	r0, r3
    3580:	d100      	bne.n	3584 <__aeabi_dadd+0x2ac>
    3582:	e0d1      	b.n	3728 <__aeabi_dadd+0x450>
    3584:	18ba      	adds	r2, r7, r2
    3586:	42ba      	cmp	r2, r7
    3588:	41bf      	sbcs	r7, r7
    358a:	1864      	adds	r4, r4, r1
    358c:	427f      	negs	r7, r7
    358e:	19e4      	adds	r4, r4, r7
    3590:	07e7      	lsls	r7, r4, #31
    3592:	0852      	lsrs	r2, r2, #1
    3594:	4317      	orrs	r7, r2
    3596:	0864      	lsrs	r4, r4, #1
    3598:	0006      	movs	r6, r0
    359a:	e721      	b.n	33e0 <__aeabi_dadd+0x108>
    359c:	482e      	ldr	r0, [pc, #184]	; (3658 <__aeabi_dadd+0x380>)
    359e:	4285      	cmp	r5, r0
    35a0:	d100      	bne.n	35a4 <__aeabi_dadd+0x2cc>
    35a2:	e093      	b.n	36cc <__aeabi_dadd+0x3f4>
    35a4:	001d      	movs	r5, r3
    35a6:	e6d0      	b.n	334a <__aeabi_dadd+0x72>
    35a8:	0029      	movs	r1, r5
    35aa:	3e1f      	subs	r6, #31
    35ac:	40f1      	lsrs	r1, r6
    35ae:	2b20      	cmp	r3, #32
    35b0:	d100      	bne.n	35b4 <__aeabi_dadd+0x2dc>
    35b2:	e08d      	b.n	36d0 <__aeabi_dadd+0x3f8>
    35b4:	2240      	movs	r2, #64	; 0x40
    35b6:	1ad3      	subs	r3, r2, r3
    35b8:	409d      	lsls	r5, r3
    35ba:	432f      	orrs	r7, r5
    35bc:	1e7d      	subs	r5, r7, #1
    35be:	41af      	sbcs	r7, r5
    35c0:	2400      	movs	r4, #0
    35c2:	430f      	orrs	r7, r1
    35c4:	2600      	movs	r6, #0
    35c6:	e744      	b.n	3452 <__aeabi_dadd+0x17a>
    35c8:	002b      	movs	r3, r5
    35ca:	0008      	movs	r0, r1
    35cc:	3b20      	subs	r3, #32
    35ce:	40d8      	lsrs	r0, r3
    35d0:	0003      	movs	r3, r0
    35d2:	2d20      	cmp	r5, #32
    35d4:	d100      	bne.n	35d8 <__aeabi_dadd+0x300>
    35d6:	e07d      	b.n	36d4 <__aeabi_dadd+0x3fc>
    35d8:	2040      	movs	r0, #64	; 0x40
    35da:	1b45      	subs	r5, r0, r5
    35dc:	40a9      	lsls	r1, r5
    35de:	430a      	orrs	r2, r1
    35e0:	1e51      	subs	r1, r2, #1
    35e2:	418a      	sbcs	r2, r1
    35e4:	2100      	movs	r1, #0
    35e6:	431a      	orrs	r2, r3
    35e8:	e6c7      	b.n	337a <__aeabi_dadd+0xa2>
    35ea:	2e00      	cmp	r6, #0
    35ec:	d050      	beq.n	3690 <__aeabi_dadd+0x3b8>
    35ee:	4e1a      	ldr	r6, [pc, #104]	; (3658 <__aeabi_dadd+0x380>)
    35f0:	42b0      	cmp	r0, r6
    35f2:	d057      	beq.n	36a4 <__aeabi_dadd+0x3cc>
    35f4:	2680      	movs	r6, #128	; 0x80
    35f6:	426b      	negs	r3, r5
    35f8:	4699      	mov	r9, r3
    35fa:	0436      	lsls	r6, r6, #16
    35fc:	4334      	orrs	r4, r6
    35fe:	464b      	mov	r3, r9
    3600:	2b38      	cmp	r3, #56	; 0x38
    3602:	dd00      	ble.n	3606 <__aeabi_dadd+0x32e>
    3604:	e0d6      	b.n	37b4 <__aeabi_dadd+0x4dc>
    3606:	2b1f      	cmp	r3, #31
    3608:	dd00      	ble.n	360c <__aeabi_dadd+0x334>
    360a:	e135      	b.n	3878 <__aeabi_dadd+0x5a0>
    360c:	2620      	movs	r6, #32
    360e:	1af5      	subs	r5, r6, r3
    3610:	0026      	movs	r6, r4
    3612:	40ae      	lsls	r6, r5
    3614:	46b2      	mov	sl, r6
    3616:	003e      	movs	r6, r7
    3618:	40de      	lsrs	r6, r3
    361a:	46ac      	mov	ip, r5
    361c:	0035      	movs	r5, r6
    361e:	4656      	mov	r6, sl
    3620:	432e      	orrs	r6, r5
    3622:	4665      	mov	r5, ip
    3624:	40af      	lsls	r7, r5
    3626:	1e7d      	subs	r5, r7, #1
    3628:	41af      	sbcs	r7, r5
    362a:	40dc      	lsrs	r4, r3
    362c:	4337      	orrs	r7, r6
    362e:	1bd7      	subs	r7, r2, r7
    3630:	42ba      	cmp	r2, r7
    3632:	4192      	sbcs	r2, r2
    3634:	1b0c      	subs	r4, r1, r4
    3636:	4252      	negs	r2, r2
    3638:	1aa4      	subs	r4, r4, r2
    363a:	0006      	movs	r6, r0
    363c:	46d8      	mov	r8, fp
    363e:	e6a3      	b.n	3388 <__aeabi_dadd+0xb0>
    3640:	4664      	mov	r4, ip
    3642:	4667      	mov	r7, ip
    3644:	432c      	orrs	r4, r5
    3646:	d000      	beq.n	364a <__aeabi_dadd+0x372>
    3648:	e6a2      	b.n	3390 <__aeabi_dadd+0xb8>
    364a:	2500      	movs	r5, #0
    364c:	2600      	movs	r6, #0
    364e:	2700      	movs	r7, #0
    3650:	e706      	b.n	3460 <__aeabi_dadd+0x188>
    3652:	001e      	movs	r6, r3
    3654:	e6c4      	b.n	33e0 <__aeabi_dadd+0x108>
    3656:	46c0      	nop			; (mov r8, r8)
    3658:	000007ff 	.word	0x000007ff
    365c:	ff7fffff 	.word	0xff7fffff
    3660:	800fffff 	.word	0x800fffff
    3664:	2b1f      	cmp	r3, #31
    3666:	dc63      	bgt.n	3730 <__aeabi_dadd+0x458>
    3668:	2020      	movs	r0, #32
    366a:	1ac3      	subs	r3, r0, r3
    366c:	0008      	movs	r0, r1
    366e:	4098      	lsls	r0, r3
    3670:	469c      	mov	ip, r3
    3672:	4683      	mov	fp, r0
    3674:	4653      	mov	r3, sl
    3676:	0010      	movs	r0, r2
    3678:	40d8      	lsrs	r0, r3
    367a:	0003      	movs	r3, r0
    367c:	4658      	mov	r0, fp
    367e:	4318      	orrs	r0, r3
    3680:	4663      	mov	r3, ip
    3682:	409a      	lsls	r2, r3
    3684:	1e53      	subs	r3, r2, #1
    3686:	419a      	sbcs	r2, r3
    3688:	4653      	mov	r3, sl
    368a:	4302      	orrs	r2, r0
    368c:	40d9      	lsrs	r1, r3
    368e:	e703      	b.n	3498 <__aeabi_dadd+0x1c0>
    3690:	0026      	movs	r6, r4
    3692:	433e      	orrs	r6, r7
    3694:	d006      	beq.n	36a4 <__aeabi_dadd+0x3cc>
    3696:	43eb      	mvns	r3, r5
    3698:	4699      	mov	r9, r3
    369a:	2b00      	cmp	r3, #0
    369c:	d0c7      	beq.n	362e <__aeabi_dadd+0x356>
    369e:	4e94      	ldr	r6, [pc, #592]	; (38f0 <__aeabi_dadd+0x618>)
    36a0:	42b0      	cmp	r0, r6
    36a2:	d1ac      	bne.n	35fe <__aeabi_dadd+0x326>
    36a4:	000c      	movs	r4, r1
    36a6:	0017      	movs	r7, r2
    36a8:	0006      	movs	r6, r0
    36aa:	46d8      	mov	r8, fp
    36ac:	e698      	b.n	33e0 <__aeabi_dadd+0x108>
    36ae:	4b90      	ldr	r3, [pc, #576]	; (38f0 <__aeabi_dadd+0x618>)
    36b0:	459a      	cmp	sl, r3
    36b2:	d00b      	beq.n	36cc <__aeabi_dadd+0x3f4>
    36b4:	4682      	mov	sl, r0
    36b6:	e6e7      	b.n	3488 <__aeabi_dadd+0x1b0>
    36b8:	2800      	cmp	r0, #0
    36ba:	d000      	beq.n	36be <__aeabi_dadd+0x3e6>
    36bc:	e09e      	b.n	37fc <__aeabi_dadd+0x524>
    36be:	0018      	movs	r0, r3
    36c0:	4310      	orrs	r0, r2
    36c2:	d100      	bne.n	36c6 <__aeabi_dadd+0x3ee>
    36c4:	e0e9      	b.n	389a <__aeabi_dadd+0x5c2>
    36c6:	001c      	movs	r4, r3
    36c8:	0017      	movs	r7, r2
    36ca:	46d8      	mov	r8, fp
    36cc:	4e88      	ldr	r6, [pc, #544]	; (38f0 <__aeabi_dadd+0x618>)
    36ce:	e687      	b.n	33e0 <__aeabi_dadd+0x108>
    36d0:	2500      	movs	r5, #0
    36d2:	e772      	b.n	35ba <__aeabi_dadd+0x2e2>
    36d4:	2100      	movs	r1, #0
    36d6:	e782      	b.n	35de <__aeabi_dadd+0x306>
    36d8:	0023      	movs	r3, r4
    36da:	433b      	orrs	r3, r7
    36dc:	2e00      	cmp	r6, #0
    36de:	d000      	beq.n	36e2 <__aeabi_dadd+0x40a>
    36e0:	e0ab      	b.n	383a <__aeabi_dadd+0x562>
    36e2:	2b00      	cmp	r3, #0
    36e4:	d100      	bne.n	36e8 <__aeabi_dadd+0x410>
    36e6:	e0e7      	b.n	38b8 <__aeabi_dadd+0x5e0>
    36e8:	000b      	movs	r3, r1
    36ea:	4313      	orrs	r3, r2
    36ec:	d100      	bne.n	36f0 <__aeabi_dadd+0x418>
    36ee:	e677      	b.n	33e0 <__aeabi_dadd+0x108>
    36f0:	18ba      	adds	r2, r7, r2
    36f2:	42ba      	cmp	r2, r7
    36f4:	41bf      	sbcs	r7, r7
    36f6:	1864      	adds	r4, r4, r1
    36f8:	427f      	negs	r7, r7
    36fa:	19e4      	adds	r4, r4, r7
    36fc:	0223      	lsls	r3, r4, #8
    36fe:	d400      	bmi.n	3702 <__aeabi_dadd+0x42a>
    3700:	e0f2      	b.n	38e8 <__aeabi_dadd+0x610>
    3702:	4b7c      	ldr	r3, [pc, #496]	; (38f4 <__aeabi_dadd+0x61c>)
    3704:	0017      	movs	r7, r2
    3706:	401c      	ands	r4, r3
    3708:	0006      	movs	r6, r0
    370a:	e669      	b.n	33e0 <__aeabi_dadd+0x108>
    370c:	0020      	movs	r0, r4
    370e:	4338      	orrs	r0, r7
    3710:	2e00      	cmp	r6, #0
    3712:	d1d1      	bne.n	36b8 <__aeabi_dadd+0x3e0>
    3714:	2800      	cmp	r0, #0
    3716:	d15b      	bne.n	37d0 <__aeabi_dadd+0x4f8>
    3718:	001c      	movs	r4, r3
    371a:	4314      	orrs	r4, r2
    371c:	d100      	bne.n	3720 <__aeabi_dadd+0x448>
    371e:	e0a8      	b.n	3872 <__aeabi_dadd+0x59a>
    3720:	001c      	movs	r4, r3
    3722:	0017      	movs	r7, r2
    3724:	46d8      	mov	r8, fp
    3726:	e65b      	b.n	33e0 <__aeabi_dadd+0x108>
    3728:	0006      	movs	r6, r0
    372a:	2400      	movs	r4, #0
    372c:	2700      	movs	r7, #0
    372e:	e697      	b.n	3460 <__aeabi_dadd+0x188>
    3730:	4650      	mov	r0, sl
    3732:	000b      	movs	r3, r1
    3734:	3820      	subs	r0, #32
    3736:	40c3      	lsrs	r3, r0
    3738:	4699      	mov	r9, r3
    373a:	4653      	mov	r3, sl
    373c:	2b20      	cmp	r3, #32
    373e:	d100      	bne.n	3742 <__aeabi_dadd+0x46a>
    3740:	e095      	b.n	386e <__aeabi_dadd+0x596>
    3742:	2340      	movs	r3, #64	; 0x40
    3744:	4650      	mov	r0, sl
    3746:	1a1b      	subs	r3, r3, r0
    3748:	4099      	lsls	r1, r3
    374a:	430a      	orrs	r2, r1
    374c:	1e51      	subs	r1, r2, #1
    374e:	418a      	sbcs	r2, r1
    3750:	464b      	mov	r3, r9
    3752:	2100      	movs	r1, #0
    3754:	431a      	orrs	r2, r3
    3756:	e69f      	b.n	3498 <__aeabi_dadd+0x1c0>
    3758:	2e00      	cmp	r6, #0
    375a:	d130      	bne.n	37be <__aeabi_dadd+0x4e6>
    375c:	0026      	movs	r6, r4
    375e:	433e      	orrs	r6, r7
    3760:	d067      	beq.n	3832 <__aeabi_dadd+0x55a>
    3762:	43db      	mvns	r3, r3
    3764:	469a      	mov	sl, r3
    3766:	2b00      	cmp	r3, #0
    3768:	d01c      	beq.n	37a4 <__aeabi_dadd+0x4cc>
    376a:	4e61      	ldr	r6, [pc, #388]	; (38f0 <__aeabi_dadd+0x618>)
    376c:	42b0      	cmp	r0, r6
    376e:	d060      	beq.n	3832 <__aeabi_dadd+0x55a>
    3770:	4653      	mov	r3, sl
    3772:	2b38      	cmp	r3, #56	; 0x38
    3774:	dd00      	ble.n	3778 <__aeabi_dadd+0x4a0>
    3776:	e096      	b.n	38a6 <__aeabi_dadd+0x5ce>
    3778:	2b1f      	cmp	r3, #31
    377a:	dd00      	ble.n	377e <__aeabi_dadd+0x4a6>
    377c:	e09f      	b.n	38be <__aeabi_dadd+0x5e6>
    377e:	2620      	movs	r6, #32
    3780:	1af3      	subs	r3, r6, r3
    3782:	0026      	movs	r6, r4
    3784:	409e      	lsls	r6, r3
    3786:	469c      	mov	ip, r3
    3788:	46b3      	mov	fp, r6
    378a:	4653      	mov	r3, sl
    378c:	003e      	movs	r6, r7
    378e:	40de      	lsrs	r6, r3
    3790:	0033      	movs	r3, r6
    3792:	465e      	mov	r6, fp
    3794:	431e      	orrs	r6, r3
    3796:	4663      	mov	r3, ip
    3798:	409f      	lsls	r7, r3
    379a:	1e7b      	subs	r3, r7, #1
    379c:	419f      	sbcs	r7, r3
    379e:	4653      	mov	r3, sl
    37a0:	40dc      	lsrs	r4, r3
    37a2:	4337      	orrs	r7, r6
    37a4:	18bf      	adds	r7, r7, r2
    37a6:	4297      	cmp	r7, r2
    37a8:	4192      	sbcs	r2, r2
    37aa:	1864      	adds	r4, r4, r1
    37ac:	4252      	negs	r2, r2
    37ae:	18a4      	adds	r4, r4, r2
    37b0:	0006      	movs	r6, r0
    37b2:	e678      	b.n	34a6 <__aeabi_dadd+0x1ce>
    37b4:	4327      	orrs	r7, r4
    37b6:	1e7c      	subs	r4, r7, #1
    37b8:	41a7      	sbcs	r7, r4
    37ba:	2400      	movs	r4, #0
    37bc:	e737      	b.n	362e <__aeabi_dadd+0x356>
    37be:	4e4c      	ldr	r6, [pc, #304]	; (38f0 <__aeabi_dadd+0x618>)
    37c0:	42b0      	cmp	r0, r6
    37c2:	d036      	beq.n	3832 <__aeabi_dadd+0x55a>
    37c4:	2680      	movs	r6, #128	; 0x80
    37c6:	425b      	negs	r3, r3
    37c8:	0436      	lsls	r6, r6, #16
    37ca:	469a      	mov	sl, r3
    37cc:	4334      	orrs	r4, r6
    37ce:	e7cf      	b.n	3770 <__aeabi_dadd+0x498>
    37d0:	0018      	movs	r0, r3
    37d2:	4310      	orrs	r0, r2
    37d4:	d100      	bne.n	37d8 <__aeabi_dadd+0x500>
    37d6:	e603      	b.n	33e0 <__aeabi_dadd+0x108>
    37d8:	1ab8      	subs	r0, r7, r2
    37da:	4684      	mov	ip, r0
    37dc:	4567      	cmp	r7, ip
    37de:	41ad      	sbcs	r5, r5
    37e0:	1ae0      	subs	r0, r4, r3
    37e2:	426d      	negs	r5, r5
    37e4:	1b40      	subs	r0, r0, r5
    37e6:	0205      	lsls	r5, r0, #8
    37e8:	d400      	bmi.n	37ec <__aeabi_dadd+0x514>
    37ea:	e62c      	b.n	3446 <__aeabi_dadd+0x16e>
    37ec:	1bd7      	subs	r7, r2, r7
    37ee:	42ba      	cmp	r2, r7
    37f0:	4192      	sbcs	r2, r2
    37f2:	1b1c      	subs	r4, r3, r4
    37f4:	4252      	negs	r2, r2
    37f6:	1aa4      	subs	r4, r4, r2
    37f8:	46d8      	mov	r8, fp
    37fa:	e5f1      	b.n	33e0 <__aeabi_dadd+0x108>
    37fc:	0018      	movs	r0, r3
    37fe:	4310      	orrs	r0, r2
    3800:	d100      	bne.n	3804 <__aeabi_dadd+0x52c>
    3802:	e763      	b.n	36cc <__aeabi_dadd+0x3f4>
    3804:	08f8      	lsrs	r0, r7, #3
    3806:	0767      	lsls	r7, r4, #29
    3808:	4307      	orrs	r7, r0
    380a:	2080      	movs	r0, #128	; 0x80
    380c:	08e4      	lsrs	r4, r4, #3
    380e:	0300      	lsls	r0, r0, #12
    3810:	4204      	tst	r4, r0
    3812:	d008      	beq.n	3826 <__aeabi_dadd+0x54e>
    3814:	08dd      	lsrs	r5, r3, #3
    3816:	4205      	tst	r5, r0
    3818:	d105      	bne.n	3826 <__aeabi_dadd+0x54e>
    381a:	08d2      	lsrs	r2, r2, #3
    381c:	0759      	lsls	r1, r3, #29
    381e:	4311      	orrs	r1, r2
    3820:	000f      	movs	r7, r1
    3822:	002c      	movs	r4, r5
    3824:	46d8      	mov	r8, fp
    3826:	0f7b      	lsrs	r3, r7, #29
    3828:	00e4      	lsls	r4, r4, #3
    382a:	431c      	orrs	r4, r3
    382c:	00ff      	lsls	r7, r7, #3
    382e:	4e30      	ldr	r6, [pc, #192]	; (38f0 <__aeabi_dadd+0x618>)
    3830:	e5d6      	b.n	33e0 <__aeabi_dadd+0x108>
    3832:	000c      	movs	r4, r1
    3834:	0017      	movs	r7, r2
    3836:	0006      	movs	r6, r0
    3838:	e5d2      	b.n	33e0 <__aeabi_dadd+0x108>
    383a:	2b00      	cmp	r3, #0
    383c:	d038      	beq.n	38b0 <__aeabi_dadd+0x5d8>
    383e:	000b      	movs	r3, r1
    3840:	4313      	orrs	r3, r2
    3842:	d100      	bne.n	3846 <__aeabi_dadd+0x56e>
    3844:	e742      	b.n	36cc <__aeabi_dadd+0x3f4>
    3846:	08f8      	lsrs	r0, r7, #3
    3848:	0767      	lsls	r7, r4, #29
    384a:	4307      	orrs	r7, r0
    384c:	2080      	movs	r0, #128	; 0x80
    384e:	08e4      	lsrs	r4, r4, #3
    3850:	0300      	lsls	r0, r0, #12
    3852:	4204      	tst	r4, r0
    3854:	d0e7      	beq.n	3826 <__aeabi_dadd+0x54e>
    3856:	08cb      	lsrs	r3, r1, #3
    3858:	4203      	tst	r3, r0
    385a:	d1e4      	bne.n	3826 <__aeabi_dadd+0x54e>
    385c:	08d2      	lsrs	r2, r2, #3
    385e:	0749      	lsls	r1, r1, #29
    3860:	4311      	orrs	r1, r2
    3862:	000f      	movs	r7, r1
    3864:	001c      	movs	r4, r3
    3866:	e7de      	b.n	3826 <__aeabi_dadd+0x54e>
    3868:	2700      	movs	r7, #0
    386a:	2400      	movs	r4, #0
    386c:	e5d5      	b.n	341a <__aeabi_dadd+0x142>
    386e:	2100      	movs	r1, #0
    3870:	e76b      	b.n	374a <__aeabi_dadd+0x472>
    3872:	2500      	movs	r5, #0
    3874:	2700      	movs	r7, #0
    3876:	e5f3      	b.n	3460 <__aeabi_dadd+0x188>
    3878:	464e      	mov	r6, r9
    387a:	0025      	movs	r5, r4
    387c:	3e20      	subs	r6, #32
    387e:	40f5      	lsrs	r5, r6
    3880:	464b      	mov	r3, r9
    3882:	002e      	movs	r6, r5
    3884:	2b20      	cmp	r3, #32
    3886:	d02d      	beq.n	38e4 <__aeabi_dadd+0x60c>
    3888:	2540      	movs	r5, #64	; 0x40
    388a:	1aed      	subs	r5, r5, r3
    388c:	40ac      	lsls	r4, r5
    388e:	4327      	orrs	r7, r4
    3890:	1e7c      	subs	r4, r7, #1
    3892:	41a7      	sbcs	r7, r4
    3894:	2400      	movs	r4, #0
    3896:	4337      	orrs	r7, r6
    3898:	e6c9      	b.n	362e <__aeabi_dadd+0x356>
    389a:	2480      	movs	r4, #128	; 0x80
    389c:	2500      	movs	r5, #0
    389e:	0324      	lsls	r4, r4, #12
    38a0:	4e13      	ldr	r6, [pc, #76]	; (38f0 <__aeabi_dadd+0x618>)
    38a2:	2700      	movs	r7, #0
    38a4:	e5dc      	b.n	3460 <__aeabi_dadd+0x188>
    38a6:	4327      	orrs	r7, r4
    38a8:	1e7c      	subs	r4, r7, #1
    38aa:	41a7      	sbcs	r7, r4
    38ac:	2400      	movs	r4, #0
    38ae:	e779      	b.n	37a4 <__aeabi_dadd+0x4cc>
    38b0:	000c      	movs	r4, r1
    38b2:	0017      	movs	r7, r2
    38b4:	4e0e      	ldr	r6, [pc, #56]	; (38f0 <__aeabi_dadd+0x618>)
    38b6:	e593      	b.n	33e0 <__aeabi_dadd+0x108>
    38b8:	000c      	movs	r4, r1
    38ba:	0017      	movs	r7, r2
    38bc:	e590      	b.n	33e0 <__aeabi_dadd+0x108>
    38be:	4656      	mov	r6, sl
    38c0:	0023      	movs	r3, r4
    38c2:	3e20      	subs	r6, #32
    38c4:	40f3      	lsrs	r3, r6
    38c6:	4699      	mov	r9, r3
    38c8:	4653      	mov	r3, sl
    38ca:	2b20      	cmp	r3, #32
    38cc:	d00e      	beq.n	38ec <__aeabi_dadd+0x614>
    38ce:	2340      	movs	r3, #64	; 0x40
    38d0:	4656      	mov	r6, sl
    38d2:	1b9b      	subs	r3, r3, r6
    38d4:	409c      	lsls	r4, r3
    38d6:	4327      	orrs	r7, r4
    38d8:	1e7c      	subs	r4, r7, #1
    38da:	41a7      	sbcs	r7, r4
    38dc:	464b      	mov	r3, r9
    38de:	2400      	movs	r4, #0
    38e0:	431f      	orrs	r7, r3
    38e2:	e75f      	b.n	37a4 <__aeabi_dadd+0x4cc>
    38e4:	2400      	movs	r4, #0
    38e6:	e7d2      	b.n	388e <__aeabi_dadd+0x5b6>
    38e8:	0017      	movs	r7, r2
    38ea:	e5b2      	b.n	3452 <__aeabi_dadd+0x17a>
    38ec:	2400      	movs	r4, #0
    38ee:	e7f2      	b.n	38d6 <__aeabi_dadd+0x5fe>
    38f0:	000007ff 	.word	0x000007ff
    38f4:	ff7fffff 	.word	0xff7fffff

000038f8 <__aeabi_ddiv>:
    38f8:	b5f0      	push	{r4, r5, r6, r7, lr}
    38fa:	4657      	mov	r7, sl
    38fc:	4645      	mov	r5, r8
    38fe:	46de      	mov	lr, fp
    3900:	464e      	mov	r6, r9
    3902:	b5e0      	push	{r5, r6, r7, lr}
    3904:	004c      	lsls	r4, r1, #1
    3906:	030e      	lsls	r6, r1, #12
    3908:	b087      	sub	sp, #28
    390a:	4683      	mov	fp, r0
    390c:	4692      	mov	sl, r2
    390e:	001d      	movs	r5, r3
    3910:	4680      	mov	r8, r0
    3912:	0b36      	lsrs	r6, r6, #12
    3914:	0d64      	lsrs	r4, r4, #21
    3916:	0fcf      	lsrs	r7, r1, #31
    3918:	2c00      	cmp	r4, #0
    391a:	d04f      	beq.n	39bc <__aeabi_ddiv+0xc4>
    391c:	4b6f      	ldr	r3, [pc, #444]	; (3adc <__aeabi_ddiv+0x1e4>)
    391e:	429c      	cmp	r4, r3
    3920:	d035      	beq.n	398e <__aeabi_ddiv+0x96>
    3922:	2380      	movs	r3, #128	; 0x80
    3924:	0f42      	lsrs	r2, r0, #29
    3926:	041b      	lsls	r3, r3, #16
    3928:	00f6      	lsls	r6, r6, #3
    392a:	4313      	orrs	r3, r2
    392c:	4333      	orrs	r3, r6
    392e:	4699      	mov	r9, r3
    3930:	00c3      	lsls	r3, r0, #3
    3932:	4698      	mov	r8, r3
    3934:	4b6a      	ldr	r3, [pc, #424]	; (3ae0 <__aeabi_ddiv+0x1e8>)
    3936:	2600      	movs	r6, #0
    3938:	469c      	mov	ip, r3
    393a:	2300      	movs	r3, #0
    393c:	4464      	add	r4, ip
    393e:	9303      	str	r3, [sp, #12]
    3940:	032b      	lsls	r3, r5, #12
    3942:	0b1b      	lsrs	r3, r3, #12
    3944:	469b      	mov	fp, r3
    3946:	006b      	lsls	r3, r5, #1
    3948:	0fed      	lsrs	r5, r5, #31
    394a:	4650      	mov	r0, sl
    394c:	0d5b      	lsrs	r3, r3, #21
    394e:	9501      	str	r5, [sp, #4]
    3950:	d05e      	beq.n	3a10 <__aeabi_ddiv+0x118>
    3952:	4a62      	ldr	r2, [pc, #392]	; (3adc <__aeabi_ddiv+0x1e4>)
    3954:	4293      	cmp	r3, r2
    3956:	d053      	beq.n	3a00 <__aeabi_ddiv+0x108>
    3958:	465a      	mov	r2, fp
    395a:	00d1      	lsls	r1, r2, #3
    395c:	2280      	movs	r2, #128	; 0x80
    395e:	0f40      	lsrs	r0, r0, #29
    3960:	0412      	lsls	r2, r2, #16
    3962:	4302      	orrs	r2, r0
    3964:	430a      	orrs	r2, r1
    3966:	4693      	mov	fp, r2
    3968:	4652      	mov	r2, sl
    396a:	00d1      	lsls	r1, r2, #3
    396c:	4a5c      	ldr	r2, [pc, #368]	; (3ae0 <__aeabi_ddiv+0x1e8>)
    396e:	4694      	mov	ip, r2
    3970:	2200      	movs	r2, #0
    3972:	4463      	add	r3, ip
    3974:	0038      	movs	r0, r7
    3976:	4068      	eors	r0, r5
    3978:	4684      	mov	ip, r0
    397a:	9002      	str	r0, [sp, #8]
    397c:	1ae4      	subs	r4, r4, r3
    397e:	4316      	orrs	r6, r2
    3980:	2e0f      	cmp	r6, #15
    3982:	d900      	bls.n	3986 <__aeabi_ddiv+0x8e>
    3984:	e0b4      	b.n	3af0 <__aeabi_ddiv+0x1f8>
    3986:	4b57      	ldr	r3, [pc, #348]	; (3ae4 <__aeabi_ddiv+0x1ec>)
    3988:	00b6      	lsls	r6, r6, #2
    398a:	599b      	ldr	r3, [r3, r6]
    398c:	469f      	mov	pc, r3
    398e:	0003      	movs	r3, r0
    3990:	4333      	orrs	r3, r6
    3992:	4699      	mov	r9, r3
    3994:	d16c      	bne.n	3a70 <__aeabi_ddiv+0x178>
    3996:	2300      	movs	r3, #0
    3998:	4698      	mov	r8, r3
    399a:	3302      	adds	r3, #2
    399c:	2608      	movs	r6, #8
    399e:	9303      	str	r3, [sp, #12]
    39a0:	e7ce      	b.n	3940 <__aeabi_ddiv+0x48>
    39a2:	46cb      	mov	fp, r9
    39a4:	4641      	mov	r1, r8
    39a6:	9a03      	ldr	r2, [sp, #12]
    39a8:	9701      	str	r7, [sp, #4]
    39aa:	2a02      	cmp	r2, #2
    39ac:	d165      	bne.n	3a7a <__aeabi_ddiv+0x182>
    39ae:	9b01      	ldr	r3, [sp, #4]
    39b0:	4c4a      	ldr	r4, [pc, #296]	; (3adc <__aeabi_ddiv+0x1e4>)
    39b2:	469c      	mov	ip, r3
    39b4:	2300      	movs	r3, #0
    39b6:	2200      	movs	r2, #0
    39b8:	4698      	mov	r8, r3
    39ba:	e06b      	b.n	3a94 <__aeabi_ddiv+0x19c>
    39bc:	0003      	movs	r3, r0
    39be:	4333      	orrs	r3, r6
    39c0:	4699      	mov	r9, r3
    39c2:	d04e      	beq.n	3a62 <__aeabi_ddiv+0x16a>
    39c4:	2e00      	cmp	r6, #0
    39c6:	d100      	bne.n	39ca <__aeabi_ddiv+0xd2>
    39c8:	e1bc      	b.n	3d44 <__aeabi_ddiv+0x44c>
    39ca:	0030      	movs	r0, r6
    39cc:	f001 fa98 	bl	4f00 <__clzsi2>
    39d0:	0003      	movs	r3, r0
    39d2:	3b0b      	subs	r3, #11
    39d4:	2b1c      	cmp	r3, #28
    39d6:	dd00      	ble.n	39da <__aeabi_ddiv+0xe2>
    39d8:	e1ac      	b.n	3d34 <__aeabi_ddiv+0x43c>
    39da:	221d      	movs	r2, #29
    39dc:	1ad3      	subs	r3, r2, r3
    39de:	465a      	mov	r2, fp
    39e0:	0001      	movs	r1, r0
    39e2:	40da      	lsrs	r2, r3
    39e4:	3908      	subs	r1, #8
    39e6:	408e      	lsls	r6, r1
    39e8:	0013      	movs	r3, r2
    39ea:	4333      	orrs	r3, r6
    39ec:	4699      	mov	r9, r3
    39ee:	465b      	mov	r3, fp
    39f0:	408b      	lsls	r3, r1
    39f2:	4698      	mov	r8, r3
    39f4:	2300      	movs	r3, #0
    39f6:	4c3c      	ldr	r4, [pc, #240]	; (3ae8 <__aeabi_ddiv+0x1f0>)
    39f8:	2600      	movs	r6, #0
    39fa:	1a24      	subs	r4, r4, r0
    39fc:	9303      	str	r3, [sp, #12]
    39fe:	e79f      	b.n	3940 <__aeabi_ddiv+0x48>
    3a00:	4651      	mov	r1, sl
    3a02:	465a      	mov	r2, fp
    3a04:	4311      	orrs	r1, r2
    3a06:	d129      	bne.n	3a5c <__aeabi_ddiv+0x164>
    3a08:	2200      	movs	r2, #0
    3a0a:	4693      	mov	fp, r2
    3a0c:	3202      	adds	r2, #2
    3a0e:	e7b1      	b.n	3974 <__aeabi_ddiv+0x7c>
    3a10:	4659      	mov	r1, fp
    3a12:	4301      	orrs	r1, r0
    3a14:	d01e      	beq.n	3a54 <__aeabi_ddiv+0x15c>
    3a16:	465b      	mov	r3, fp
    3a18:	2b00      	cmp	r3, #0
    3a1a:	d100      	bne.n	3a1e <__aeabi_ddiv+0x126>
    3a1c:	e19e      	b.n	3d5c <__aeabi_ddiv+0x464>
    3a1e:	4658      	mov	r0, fp
    3a20:	f001 fa6e 	bl	4f00 <__clzsi2>
    3a24:	0003      	movs	r3, r0
    3a26:	3b0b      	subs	r3, #11
    3a28:	2b1c      	cmp	r3, #28
    3a2a:	dd00      	ble.n	3a2e <__aeabi_ddiv+0x136>
    3a2c:	e18f      	b.n	3d4e <__aeabi_ddiv+0x456>
    3a2e:	0002      	movs	r2, r0
    3a30:	4659      	mov	r1, fp
    3a32:	3a08      	subs	r2, #8
    3a34:	4091      	lsls	r1, r2
    3a36:	468b      	mov	fp, r1
    3a38:	211d      	movs	r1, #29
    3a3a:	1acb      	subs	r3, r1, r3
    3a3c:	4651      	mov	r1, sl
    3a3e:	40d9      	lsrs	r1, r3
    3a40:	000b      	movs	r3, r1
    3a42:	4659      	mov	r1, fp
    3a44:	430b      	orrs	r3, r1
    3a46:	4651      	mov	r1, sl
    3a48:	469b      	mov	fp, r3
    3a4a:	4091      	lsls	r1, r2
    3a4c:	4b26      	ldr	r3, [pc, #152]	; (3ae8 <__aeabi_ddiv+0x1f0>)
    3a4e:	2200      	movs	r2, #0
    3a50:	1a1b      	subs	r3, r3, r0
    3a52:	e78f      	b.n	3974 <__aeabi_ddiv+0x7c>
    3a54:	2300      	movs	r3, #0
    3a56:	2201      	movs	r2, #1
    3a58:	469b      	mov	fp, r3
    3a5a:	e78b      	b.n	3974 <__aeabi_ddiv+0x7c>
    3a5c:	4651      	mov	r1, sl
    3a5e:	2203      	movs	r2, #3
    3a60:	e788      	b.n	3974 <__aeabi_ddiv+0x7c>
    3a62:	2300      	movs	r3, #0
    3a64:	4698      	mov	r8, r3
    3a66:	3301      	adds	r3, #1
    3a68:	2604      	movs	r6, #4
    3a6a:	2400      	movs	r4, #0
    3a6c:	9303      	str	r3, [sp, #12]
    3a6e:	e767      	b.n	3940 <__aeabi_ddiv+0x48>
    3a70:	2303      	movs	r3, #3
    3a72:	46b1      	mov	r9, r6
    3a74:	9303      	str	r3, [sp, #12]
    3a76:	260c      	movs	r6, #12
    3a78:	e762      	b.n	3940 <__aeabi_ddiv+0x48>
    3a7a:	2a03      	cmp	r2, #3
    3a7c:	d100      	bne.n	3a80 <__aeabi_ddiv+0x188>
    3a7e:	e25c      	b.n	3f3a <__aeabi_ddiv+0x642>
    3a80:	9b01      	ldr	r3, [sp, #4]
    3a82:	2a01      	cmp	r2, #1
    3a84:	d000      	beq.n	3a88 <__aeabi_ddiv+0x190>
    3a86:	e1e4      	b.n	3e52 <__aeabi_ddiv+0x55a>
    3a88:	4013      	ands	r3, r2
    3a8a:	469c      	mov	ip, r3
    3a8c:	2300      	movs	r3, #0
    3a8e:	2400      	movs	r4, #0
    3a90:	2200      	movs	r2, #0
    3a92:	4698      	mov	r8, r3
    3a94:	2100      	movs	r1, #0
    3a96:	0312      	lsls	r2, r2, #12
    3a98:	0b13      	lsrs	r3, r2, #12
    3a9a:	0d0a      	lsrs	r2, r1, #20
    3a9c:	0512      	lsls	r2, r2, #20
    3a9e:	431a      	orrs	r2, r3
    3aa0:	0523      	lsls	r3, r4, #20
    3aa2:	4c12      	ldr	r4, [pc, #72]	; (3aec <__aeabi_ddiv+0x1f4>)
    3aa4:	4640      	mov	r0, r8
    3aa6:	4022      	ands	r2, r4
    3aa8:	4313      	orrs	r3, r2
    3aaa:	4662      	mov	r2, ip
    3aac:	005b      	lsls	r3, r3, #1
    3aae:	07d2      	lsls	r2, r2, #31
    3ab0:	085b      	lsrs	r3, r3, #1
    3ab2:	4313      	orrs	r3, r2
    3ab4:	0019      	movs	r1, r3
    3ab6:	b007      	add	sp, #28
    3ab8:	bc3c      	pop	{r2, r3, r4, r5}
    3aba:	4690      	mov	r8, r2
    3abc:	4699      	mov	r9, r3
    3abe:	46a2      	mov	sl, r4
    3ac0:	46ab      	mov	fp, r5
    3ac2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3ac4:	2300      	movs	r3, #0
    3ac6:	2280      	movs	r2, #128	; 0x80
    3ac8:	469c      	mov	ip, r3
    3aca:	0312      	lsls	r2, r2, #12
    3acc:	4698      	mov	r8, r3
    3ace:	4c03      	ldr	r4, [pc, #12]	; (3adc <__aeabi_ddiv+0x1e4>)
    3ad0:	e7e0      	b.n	3a94 <__aeabi_ddiv+0x19c>
    3ad2:	2300      	movs	r3, #0
    3ad4:	4c01      	ldr	r4, [pc, #4]	; (3adc <__aeabi_ddiv+0x1e4>)
    3ad6:	2200      	movs	r2, #0
    3ad8:	4698      	mov	r8, r3
    3ada:	e7db      	b.n	3a94 <__aeabi_ddiv+0x19c>
    3adc:	000007ff 	.word	0x000007ff
    3ae0:	fffffc01 	.word	0xfffffc01
    3ae4:	00009e14 	.word	0x00009e14
    3ae8:	fffffc0d 	.word	0xfffffc0d
    3aec:	800fffff 	.word	0x800fffff
    3af0:	45d9      	cmp	r9, fp
    3af2:	d900      	bls.n	3af6 <__aeabi_ddiv+0x1fe>
    3af4:	e139      	b.n	3d6a <__aeabi_ddiv+0x472>
    3af6:	d100      	bne.n	3afa <__aeabi_ddiv+0x202>
    3af8:	e134      	b.n	3d64 <__aeabi_ddiv+0x46c>
    3afa:	2300      	movs	r3, #0
    3afc:	4646      	mov	r6, r8
    3afe:	464d      	mov	r5, r9
    3b00:	469a      	mov	sl, r3
    3b02:	3c01      	subs	r4, #1
    3b04:	465b      	mov	r3, fp
    3b06:	0e0a      	lsrs	r2, r1, #24
    3b08:	021b      	lsls	r3, r3, #8
    3b0a:	431a      	orrs	r2, r3
    3b0c:	020b      	lsls	r3, r1, #8
    3b0e:	0c17      	lsrs	r7, r2, #16
    3b10:	9303      	str	r3, [sp, #12]
    3b12:	0413      	lsls	r3, r2, #16
    3b14:	0c1b      	lsrs	r3, r3, #16
    3b16:	0039      	movs	r1, r7
    3b18:	0028      	movs	r0, r5
    3b1a:	4690      	mov	r8, r2
    3b1c:	9301      	str	r3, [sp, #4]
    3b1e:	f7fe fd77 	bl	2610 <__udivsi3>
    3b22:	0002      	movs	r2, r0
    3b24:	9b01      	ldr	r3, [sp, #4]
    3b26:	4683      	mov	fp, r0
    3b28:	435a      	muls	r2, r3
    3b2a:	0028      	movs	r0, r5
    3b2c:	0039      	movs	r1, r7
    3b2e:	4691      	mov	r9, r2
    3b30:	f7fe fdf4 	bl	271c <__aeabi_uidivmod>
    3b34:	0c35      	lsrs	r5, r6, #16
    3b36:	0409      	lsls	r1, r1, #16
    3b38:	430d      	orrs	r5, r1
    3b3a:	45a9      	cmp	r9, r5
    3b3c:	d90d      	bls.n	3b5a <__aeabi_ddiv+0x262>
    3b3e:	465b      	mov	r3, fp
    3b40:	4445      	add	r5, r8
    3b42:	3b01      	subs	r3, #1
    3b44:	45a8      	cmp	r8, r5
    3b46:	d900      	bls.n	3b4a <__aeabi_ddiv+0x252>
    3b48:	e13a      	b.n	3dc0 <__aeabi_ddiv+0x4c8>
    3b4a:	45a9      	cmp	r9, r5
    3b4c:	d800      	bhi.n	3b50 <__aeabi_ddiv+0x258>
    3b4e:	e137      	b.n	3dc0 <__aeabi_ddiv+0x4c8>
    3b50:	2302      	movs	r3, #2
    3b52:	425b      	negs	r3, r3
    3b54:	469c      	mov	ip, r3
    3b56:	4445      	add	r5, r8
    3b58:	44e3      	add	fp, ip
    3b5a:	464b      	mov	r3, r9
    3b5c:	1aeb      	subs	r3, r5, r3
    3b5e:	0039      	movs	r1, r7
    3b60:	0018      	movs	r0, r3
    3b62:	9304      	str	r3, [sp, #16]
    3b64:	f7fe fd54 	bl	2610 <__udivsi3>
    3b68:	9b01      	ldr	r3, [sp, #4]
    3b6a:	0005      	movs	r5, r0
    3b6c:	4343      	muls	r3, r0
    3b6e:	0039      	movs	r1, r7
    3b70:	9804      	ldr	r0, [sp, #16]
    3b72:	4699      	mov	r9, r3
    3b74:	f7fe fdd2 	bl	271c <__aeabi_uidivmod>
    3b78:	0433      	lsls	r3, r6, #16
    3b7a:	0409      	lsls	r1, r1, #16
    3b7c:	0c1b      	lsrs	r3, r3, #16
    3b7e:	430b      	orrs	r3, r1
    3b80:	4599      	cmp	r9, r3
    3b82:	d909      	bls.n	3b98 <__aeabi_ddiv+0x2a0>
    3b84:	4443      	add	r3, r8
    3b86:	1e6a      	subs	r2, r5, #1
    3b88:	4598      	cmp	r8, r3
    3b8a:	d900      	bls.n	3b8e <__aeabi_ddiv+0x296>
    3b8c:	e11a      	b.n	3dc4 <__aeabi_ddiv+0x4cc>
    3b8e:	4599      	cmp	r9, r3
    3b90:	d800      	bhi.n	3b94 <__aeabi_ddiv+0x29c>
    3b92:	e117      	b.n	3dc4 <__aeabi_ddiv+0x4cc>
    3b94:	3d02      	subs	r5, #2
    3b96:	4443      	add	r3, r8
    3b98:	464a      	mov	r2, r9
    3b9a:	1a9b      	subs	r3, r3, r2
    3b9c:	465a      	mov	r2, fp
    3b9e:	0412      	lsls	r2, r2, #16
    3ba0:	432a      	orrs	r2, r5
    3ba2:	9903      	ldr	r1, [sp, #12]
    3ba4:	4693      	mov	fp, r2
    3ba6:	0c10      	lsrs	r0, r2, #16
    3ba8:	0c0a      	lsrs	r2, r1, #16
    3baa:	4691      	mov	r9, r2
    3bac:	0409      	lsls	r1, r1, #16
    3bae:	465a      	mov	r2, fp
    3bb0:	0c09      	lsrs	r1, r1, #16
    3bb2:	464e      	mov	r6, r9
    3bb4:	000d      	movs	r5, r1
    3bb6:	0412      	lsls	r2, r2, #16
    3bb8:	0c12      	lsrs	r2, r2, #16
    3bba:	4345      	muls	r5, r0
    3bbc:	9105      	str	r1, [sp, #20]
    3bbe:	4351      	muls	r1, r2
    3bc0:	4372      	muls	r2, r6
    3bc2:	4370      	muls	r0, r6
    3bc4:	1952      	adds	r2, r2, r5
    3bc6:	0c0e      	lsrs	r6, r1, #16
    3bc8:	18b2      	adds	r2, r6, r2
    3bca:	4295      	cmp	r5, r2
    3bcc:	d903      	bls.n	3bd6 <__aeabi_ddiv+0x2de>
    3bce:	2580      	movs	r5, #128	; 0x80
    3bd0:	026d      	lsls	r5, r5, #9
    3bd2:	46ac      	mov	ip, r5
    3bd4:	4460      	add	r0, ip
    3bd6:	0c15      	lsrs	r5, r2, #16
    3bd8:	0409      	lsls	r1, r1, #16
    3bda:	0412      	lsls	r2, r2, #16
    3bdc:	0c09      	lsrs	r1, r1, #16
    3bde:	1828      	adds	r0, r5, r0
    3be0:	1852      	adds	r2, r2, r1
    3be2:	4283      	cmp	r3, r0
    3be4:	d200      	bcs.n	3be8 <__aeabi_ddiv+0x2f0>
    3be6:	e0ce      	b.n	3d86 <__aeabi_ddiv+0x48e>
    3be8:	d100      	bne.n	3bec <__aeabi_ddiv+0x2f4>
    3bea:	e0c8      	b.n	3d7e <__aeabi_ddiv+0x486>
    3bec:	1a1d      	subs	r5, r3, r0
    3bee:	4653      	mov	r3, sl
    3bf0:	1a9e      	subs	r6, r3, r2
    3bf2:	45b2      	cmp	sl, r6
    3bf4:	4192      	sbcs	r2, r2
    3bf6:	4252      	negs	r2, r2
    3bf8:	1aab      	subs	r3, r5, r2
    3bfa:	469a      	mov	sl, r3
    3bfc:	4598      	cmp	r8, r3
    3bfe:	d100      	bne.n	3c02 <__aeabi_ddiv+0x30a>
    3c00:	e117      	b.n	3e32 <__aeabi_ddiv+0x53a>
    3c02:	0039      	movs	r1, r7
    3c04:	0018      	movs	r0, r3
    3c06:	f7fe fd03 	bl	2610 <__udivsi3>
    3c0a:	9b01      	ldr	r3, [sp, #4]
    3c0c:	0005      	movs	r5, r0
    3c0e:	4343      	muls	r3, r0
    3c10:	0039      	movs	r1, r7
    3c12:	4650      	mov	r0, sl
    3c14:	9304      	str	r3, [sp, #16]
    3c16:	f7fe fd81 	bl	271c <__aeabi_uidivmod>
    3c1a:	9804      	ldr	r0, [sp, #16]
    3c1c:	040b      	lsls	r3, r1, #16
    3c1e:	0c31      	lsrs	r1, r6, #16
    3c20:	4319      	orrs	r1, r3
    3c22:	4288      	cmp	r0, r1
    3c24:	d909      	bls.n	3c3a <__aeabi_ddiv+0x342>
    3c26:	4441      	add	r1, r8
    3c28:	1e6b      	subs	r3, r5, #1
    3c2a:	4588      	cmp	r8, r1
    3c2c:	d900      	bls.n	3c30 <__aeabi_ddiv+0x338>
    3c2e:	e107      	b.n	3e40 <__aeabi_ddiv+0x548>
    3c30:	4288      	cmp	r0, r1
    3c32:	d800      	bhi.n	3c36 <__aeabi_ddiv+0x33e>
    3c34:	e104      	b.n	3e40 <__aeabi_ddiv+0x548>
    3c36:	3d02      	subs	r5, #2
    3c38:	4441      	add	r1, r8
    3c3a:	9b04      	ldr	r3, [sp, #16]
    3c3c:	1acb      	subs	r3, r1, r3
    3c3e:	0018      	movs	r0, r3
    3c40:	0039      	movs	r1, r7
    3c42:	9304      	str	r3, [sp, #16]
    3c44:	f7fe fce4 	bl	2610 <__udivsi3>
    3c48:	9b01      	ldr	r3, [sp, #4]
    3c4a:	4682      	mov	sl, r0
    3c4c:	4343      	muls	r3, r0
    3c4e:	0039      	movs	r1, r7
    3c50:	9804      	ldr	r0, [sp, #16]
    3c52:	9301      	str	r3, [sp, #4]
    3c54:	f7fe fd62 	bl	271c <__aeabi_uidivmod>
    3c58:	9801      	ldr	r0, [sp, #4]
    3c5a:	040b      	lsls	r3, r1, #16
    3c5c:	0431      	lsls	r1, r6, #16
    3c5e:	0c09      	lsrs	r1, r1, #16
    3c60:	4319      	orrs	r1, r3
    3c62:	4288      	cmp	r0, r1
    3c64:	d90d      	bls.n	3c82 <__aeabi_ddiv+0x38a>
    3c66:	4653      	mov	r3, sl
    3c68:	4441      	add	r1, r8
    3c6a:	3b01      	subs	r3, #1
    3c6c:	4588      	cmp	r8, r1
    3c6e:	d900      	bls.n	3c72 <__aeabi_ddiv+0x37a>
    3c70:	e0e8      	b.n	3e44 <__aeabi_ddiv+0x54c>
    3c72:	4288      	cmp	r0, r1
    3c74:	d800      	bhi.n	3c78 <__aeabi_ddiv+0x380>
    3c76:	e0e5      	b.n	3e44 <__aeabi_ddiv+0x54c>
    3c78:	2302      	movs	r3, #2
    3c7a:	425b      	negs	r3, r3
    3c7c:	469c      	mov	ip, r3
    3c7e:	4441      	add	r1, r8
    3c80:	44e2      	add	sl, ip
    3c82:	9b01      	ldr	r3, [sp, #4]
    3c84:	042d      	lsls	r5, r5, #16
    3c86:	1ace      	subs	r6, r1, r3
    3c88:	4651      	mov	r1, sl
    3c8a:	4329      	orrs	r1, r5
    3c8c:	9d05      	ldr	r5, [sp, #20]
    3c8e:	464f      	mov	r7, r9
    3c90:	002a      	movs	r2, r5
    3c92:	040b      	lsls	r3, r1, #16
    3c94:	0c08      	lsrs	r0, r1, #16
    3c96:	0c1b      	lsrs	r3, r3, #16
    3c98:	435a      	muls	r2, r3
    3c9a:	4345      	muls	r5, r0
    3c9c:	437b      	muls	r3, r7
    3c9e:	4378      	muls	r0, r7
    3ca0:	195b      	adds	r3, r3, r5
    3ca2:	0c17      	lsrs	r7, r2, #16
    3ca4:	18fb      	adds	r3, r7, r3
    3ca6:	429d      	cmp	r5, r3
    3ca8:	d903      	bls.n	3cb2 <__aeabi_ddiv+0x3ba>
    3caa:	2580      	movs	r5, #128	; 0x80
    3cac:	026d      	lsls	r5, r5, #9
    3cae:	46ac      	mov	ip, r5
    3cb0:	4460      	add	r0, ip
    3cb2:	0c1d      	lsrs	r5, r3, #16
    3cb4:	0412      	lsls	r2, r2, #16
    3cb6:	041b      	lsls	r3, r3, #16
    3cb8:	0c12      	lsrs	r2, r2, #16
    3cba:	1828      	adds	r0, r5, r0
    3cbc:	189b      	adds	r3, r3, r2
    3cbe:	4286      	cmp	r6, r0
    3cc0:	d200      	bcs.n	3cc4 <__aeabi_ddiv+0x3cc>
    3cc2:	e093      	b.n	3dec <__aeabi_ddiv+0x4f4>
    3cc4:	d100      	bne.n	3cc8 <__aeabi_ddiv+0x3d0>
    3cc6:	e08e      	b.n	3de6 <__aeabi_ddiv+0x4ee>
    3cc8:	2301      	movs	r3, #1
    3cca:	4319      	orrs	r1, r3
    3ccc:	4ba0      	ldr	r3, [pc, #640]	; (3f50 <__aeabi_ddiv+0x658>)
    3cce:	18e3      	adds	r3, r4, r3
    3cd0:	2b00      	cmp	r3, #0
    3cd2:	dc00      	bgt.n	3cd6 <__aeabi_ddiv+0x3de>
    3cd4:	e099      	b.n	3e0a <__aeabi_ddiv+0x512>
    3cd6:	074a      	lsls	r2, r1, #29
    3cd8:	d000      	beq.n	3cdc <__aeabi_ddiv+0x3e4>
    3cda:	e09e      	b.n	3e1a <__aeabi_ddiv+0x522>
    3cdc:	465a      	mov	r2, fp
    3cde:	01d2      	lsls	r2, r2, #7
    3ce0:	d506      	bpl.n	3cf0 <__aeabi_ddiv+0x3f8>
    3ce2:	465a      	mov	r2, fp
    3ce4:	4b9b      	ldr	r3, [pc, #620]	; (3f54 <__aeabi_ddiv+0x65c>)
    3ce6:	401a      	ands	r2, r3
    3ce8:	2380      	movs	r3, #128	; 0x80
    3cea:	4693      	mov	fp, r2
    3cec:	00db      	lsls	r3, r3, #3
    3cee:	18e3      	adds	r3, r4, r3
    3cf0:	4a99      	ldr	r2, [pc, #612]	; (3f58 <__aeabi_ddiv+0x660>)
    3cf2:	4293      	cmp	r3, r2
    3cf4:	dd68      	ble.n	3dc8 <__aeabi_ddiv+0x4d0>
    3cf6:	2301      	movs	r3, #1
    3cf8:	9a02      	ldr	r2, [sp, #8]
    3cfa:	4c98      	ldr	r4, [pc, #608]	; (3f5c <__aeabi_ddiv+0x664>)
    3cfc:	401a      	ands	r2, r3
    3cfe:	2300      	movs	r3, #0
    3d00:	4694      	mov	ip, r2
    3d02:	4698      	mov	r8, r3
    3d04:	2200      	movs	r2, #0
    3d06:	e6c5      	b.n	3a94 <__aeabi_ddiv+0x19c>
    3d08:	2280      	movs	r2, #128	; 0x80
    3d0a:	464b      	mov	r3, r9
    3d0c:	0312      	lsls	r2, r2, #12
    3d0e:	4213      	tst	r3, r2
    3d10:	d00a      	beq.n	3d28 <__aeabi_ddiv+0x430>
    3d12:	465b      	mov	r3, fp
    3d14:	4213      	tst	r3, r2
    3d16:	d106      	bne.n	3d26 <__aeabi_ddiv+0x42e>
    3d18:	431a      	orrs	r2, r3
    3d1a:	0312      	lsls	r2, r2, #12
    3d1c:	0b12      	lsrs	r2, r2, #12
    3d1e:	46ac      	mov	ip, r5
    3d20:	4688      	mov	r8, r1
    3d22:	4c8e      	ldr	r4, [pc, #568]	; (3f5c <__aeabi_ddiv+0x664>)
    3d24:	e6b6      	b.n	3a94 <__aeabi_ddiv+0x19c>
    3d26:	464b      	mov	r3, r9
    3d28:	431a      	orrs	r2, r3
    3d2a:	0312      	lsls	r2, r2, #12
    3d2c:	0b12      	lsrs	r2, r2, #12
    3d2e:	46bc      	mov	ip, r7
    3d30:	4c8a      	ldr	r4, [pc, #552]	; (3f5c <__aeabi_ddiv+0x664>)
    3d32:	e6af      	b.n	3a94 <__aeabi_ddiv+0x19c>
    3d34:	0003      	movs	r3, r0
    3d36:	465a      	mov	r2, fp
    3d38:	3b28      	subs	r3, #40	; 0x28
    3d3a:	409a      	lsls	r2, r3
    3d3c:	2300      	movs	r3, #0
    3d3e:	4691      	mov	r9, r2
    3d40:	4698      	mov	r8, r3
    3d42:	e657      	b.n	39f4 <__aeabi_ddiv+0xfc>
    3d44:	4658      	mov	r0, fp
    3d46:	f001 f8db 	bl	4f00 <__clzsi2>
    3d4a:	3020      	adds	r0, #32
    3d4c:	e640      	b.n	39d0 <__aeabi_ddiv+0xd8>
    3d4e:	0003      	movs	r3, r0
    3d50:	4652      	mov	r2, sl
    3d52:	3b28      	subs	r3, #40	; 0x28
    3d54:	409a      	lsls	r2, r3
    3d56:	2100      	movs	r1, #0
    3d58:	4693      	mov	fp, r2
    3d5a:	e677      	b.n	3a4c <__aeabi_ddiv+0x154>
    3d5c:	f001 f8d0 	bl	4f00 <__clzsi2>
    3d60:	3020      	adds	r0, #32
    3d62:	e65f      	b.n	3a24 <__aeabi_ddiv+0x12c>
    3d64:	4588      	cmp	r8, r1
    3d66:	d200      	bcs.n	3d6a <__aeabi_ddiv+0x472>
    3d68:	e6c7      	b.n	3afa <__aeabi_ddiv+0x202>
    3d6a:	464b      	mov	r3, r9
    3d6c:	07de      	lsls	r6, r3, #31
    3d6e:	085d      	lsrs	r5, r3, #1
    3d70:	4643      	mov	r3, r8
    3d72:	085b      	lsrs	r3, r3, #1
    3d74:	431e      	orrs	r6, r3
    3d76:	4643      	mov	r3, r8
    3d78:	07db      	lsls	r3, r3, #31
    3d7a:	469a      	mov	sl, r3
    3d7c:	e6c2      	b.n	3b04 <__aeabi_ddiv+0x20c>
    3d7e:	2500      	movs	r5, #0
    3d80:	4592      	cmp	sl, r2
    3d82:	d300      	bcc.n	3d86 <__aeabi_ddiv+0x48e>
    3d84:	e733      	b.n	3bee <__aeabi_ddiv+0x2f6>
    3d86:	9e03      	ldr	r6, [sp, #12]
    3d88:	4659      	mov	r1, fp
    3d8a:	46b4      	mov	ip, r6
    3d8c:	44e2      	add	sl, ip
    3d8e:	45b2      	cmp	sl, r6
    3d90:	41ad      	sbcs	r5, r5
    3d92:	426d      	negs	r5, r5
    3d94:	4445      	add	r5, r8
    3d96:	18eb      	adds	r3, r5, r3
    3d98:	3901      	subs	r1, #1
    3d9a:	4598      	cmp	r8, r3
    3d9c:	d207      	bcs.n	3dae <__aeabi_ddiv+0x4b6>
    3d9e:	4298      	cmp	r0, r3
    3da0:	d900      	bls.n	3da4 <__aeabi_ddiv+0x4ac>
    3da2:	e07f      	b.n	3ea4 <__aeabi_ddiv+0x5ac>
    3da4:	d100      	bne.n	3da8 <__aeabi_ddiv+0x4b0>
    3da6:	e0bc      	b.n	3f22 <__aeabi_ddiv+0x62a>
    3da8:	1a1d      	subs	r5, r3, r0
    3daa:	468b      	mov	fp, r1
    3dac:	e71f      	b.n	3bee <__aeabi_ddiv+0x2f6>
    3dae:	4598      	cmp	r8, r3
    3db0:	d1fa      	bne.n	3da8 <__aeabi_ddiv+0x4b0>
    3db2:	9d03      	ldr	r5, [sp, #12]
    3db4:	4555      	cmp	r5, sl
    3db6:	d9f2      	bls.n	3d9e <__aeabi_ddiv+0x4a6>
    3db8:	4643      	mov	r3, r8
    3dba:	468b      	mov	fp, r1
    3dbc:	1a1d      	subs	r5, r3, r0
    3dbe:	e716      	b.n	3bee <__aeabi_ddiv+0x2f6>
    3dc0:	469b      	mov	fp, r3
    3dc2:	e6ca      	b.n	3b5a <__aeabi_ddiv+0x262>
    3dc4:	0015      	movs	r5, r2
    3dc6:	e6e7      	b.n	3b98 <__aeabi_ddiv+0x2a0>
    3dc8:	465a      	mov	r2, fp
    3dca:	08c9      	lsrs	r1, r1, #3
    3dcc:	0752      	lsls	r2, r2, #29
    3dce:	430a      	orrs	r2, r1
    3dd0:	055b      	lsls	r3, r3, #21
    3dd2:	4690      	mov	r8, r2
    3dd4:	0d5c      	lsrs	r4, r3, #21
    3dd6:	465a      	mov	r2, fp
    3dd8:	2301      	movs	r3, #1
    3dda:	9902      	ldr	r1, [sp, #8]
    3ddc:	0252      	lsls	r2, r2, #9
    3dde:	4019      	ands	r1, r3
    3de0:	0b12      	lsrs	r2, r2, #12
    3de2:	468c      	mov	ip, r1
    3de4:	e656      	b.n	3a94 <__aeabi_ddiv+0x19c>
    3de6:	2b00      	cmp	r3, #0
    3de8:	d100      	bne.n	3dec <__aeabi_ddiv+0x4f4>
    3dea:	e76f      	b.n	3ccc <__aeabi_ddiv+0x3d4>
    3dec:	4446      	add	r6, r8
    3dee:	1e4a      	subs	r2, r1, #1
    3df0:	45b0      	cmp	r8, r6
    3df2:	d929      	bls.n	3e48 <__aeabi_ddiv+0x550>
    3df4:	0011      	movs	r1, r2
    3df6:	4286      	cmp	r6, r0
    3df8:	d000      	beq.n	3dfc <__aeabi_ddiv+0x504>
    3dfa:	e765      	b.n	3cc8 <__aeabi_ddiv+0x3d0>
    3dfc:	9a03      	ldr	r2, [sp, #12]
    3dfe:	4293      	cmp	r3, r2
    3e00:	d000      	beq.n	3e04 <__aeabi_ddiv+0x50c>
    3e02:	e761      	b.n	3cc8 <__aeabi_ddiv+0x3d0>
    3e04:	e762      	b.n	3ccc <__aeabi_ddiv+0x3d4>
    3e06:	2101      	movs	r1, #1
    3e08:	4249      	negs	r1, r1
    3e0a:	2001      	movs	r0, #1
    3e0c:	1ac2      	subs	r2, r0, r3
    3e0e:	2a38      	cmp	r2, #56	; 0x38
    3e10:	dd21      	ble.n	3e56 <__aeabi_ddiv+0x55e>
    3e12:	9b02      	ldr	r3, [sp, #8]
    3e14:	4003      	ands	r3, r0
    3e16:	469c      	mov	ip, r3
    3e18:	e638      	b.n	3a8c <__aeabi_ddiv+0x194>
    3e1a:	220f      	movs	r2, #15
    3e1c:	400a      	ands	r2, r1
    3e1e:	2a04      	cmp	r2, #4
    3e20:	d100      	bne.n	3e24 <__aeabi_ddiv+0x52c>
    3e22:	e75b      	b.n	3cdc <__aeabi_ddiv+0x3e4>
    3e24:	000a      	movs	r2, r1
    3e26:	1d11      	adds	r1, r2, #4
    3e28:	4291      	cmp	r1, r2
    3e2a:	4192      	sbcs	r2, r2
    3e2c:	4252      	negs	r2, r2
    3e2e:	4493      	add	fp, r2
    3e30:	e754      	b.n	3cdc <__aeabi_ddiv+0x3e4>
    3e32:	4b47      	ldr	r3, [pc, #284]	; (3f50 <__aeabi_ddiv+0x658>)
    3e34:	18e3      	adds	r3, r4, r3
    3e36:	2b00      	cmp	r3, #0
    3e38:	dde5      	ble.n	3e06 <__aeabi_ddiv+0x50e>
    3e3a:	2201      	movs	r2, #1
    3e3c:	4252      	negs	r2, r2
    3e3e:	e7f2      	b.n	3e26 <__aeabi_ddiv+0x52e>
    3e40:	001d      	movs	r5, r3
    3e42:	e6fa      	b.n	3c3a <__aeabi_ddiv+0x342>
    3e44:	469a      	mov	sl, r3
    3e46:	e71c      	b.n	3c82 <__aeabi_ddiv+0x38a>
    3e48:	42b0      	cmp	r0, r6
    3e4a:	d839      	bhi.n	3ec0 <__aeabi_ddiv+0x5c8>
    3e4c:	d06e      	beq.n	3f2c <__aeabi_ddiv+0x634>
    3e4e:	0011      	movs	r1, r2
    3e50:	e73a      	b.n	3cc8 <__aeabi_ddiv+0x3d0>
    3e52:	9302      	str	r3, [sp, #8]
    3e54:	e73a      	b.n	3ccc <__aeabi_ddiv+0x3d4>
    3e56:	2a1f      	cmp	r2, #31
    3e58:	dc3c      	bgt.n	3ed4 <__aeabi_ddiv+0x5dc>
    3e5a:	2320      	movs	r3, #32
    3e5c:	1a9b      	subs	r3, r3, r2
    3e5e:	000c      	movs	r4, r1
    3e60:	4658      	mov	r0, fp
    3e62:	4099      	lsls	r1, r3
    3e64:	4098      	lsls	r0, r3
    3e66:	1e4b      	subs	r3, r1, #1
    3e68:	4199      	sbcs	r1, r3
    3e6a:	465b      	mov	r3, fp
    3e6c:	40d4      	lsrs	r4, r2
    3e6e:	40d3      	lsrs	r3, r2
    3e70:	4320      	orrs	r0, r4
    3e72:	4308      	orrs	r0, r1
    3e74:	001a      	movs	r2, r3
    3e76:	0743      	lsls	r3, r0, #29
    3e78:	d009      	beq.n	3e8e <__aeabi_ddiv+0x596>
    3e7a:	230f      	movs	r3, #15
    3e7c:	4003      	ands	r3, r0
    3e7e:	2b04      	cmp	r3, #4
    3e80:	d005      	beq.n	3e8e <__aeabi_ddiv+0x596>
    3e82:	0001      	movs	r1, r0
    3e84:	1d08      	adds	r0, r1, #4
    3e86:	4288      	cmp	r0, r1
    3e88:	419b      	sbcs	r3, r3
    3e8a:	425b      	negs	r3, r3
    3e8c:	18d2      	adds	r2, r2, r3
    3e8e:	0213      	lsls	r3, r2, #8
    3e90:	d53a      	bpl.n	3f08 <__aeabi_ddiv+0x610>
    3e92:	2301      	movs	r3, #1
    3e94:	9a02      	ldr	r2, [sp, #8]
    3e96:	2401      	movs	r4, #1
    3e98:	401a      	ands	r2, r3
    3e9a:	2300      	movs	r3, #0
    3e9c:	4694      	mov	ip, r2
    3e9e:	4698      	mov	r8, r3
    3ea0:	2200      	movs	r2, #0
    3ea2:	e5f7      	b.n	3a94 <__aeabi_ddiv+0x19c>
    3ea4:	2102      	movs	r1, #2
    3ea6:	4249      	negs	r1, r1
    3ea8:	468c      	mov	ip, r1
    3eaa:	9d03      	ldr	r5, [sp, #12]
    3eac:	44e3      	add	fp, ip
    3eae:	46ac      	mov	ip, r5
    3eb0:	44e2      	add	sl, ip
    3eb2:	45aa      	cmp	sl, r5
    3eb4:	41ad      	sbcs	r5, r5
    3eb6:	426d      	negs	r5, r5
    3eb8:	4445      	add	r5, r8
    3eba:	18ed      	adds	r5, r5, r3
    3ebc:	1a2d      	subs	r5, r5, r0
    3ebe:	e696      	b.n	3bee <__aeabi_ddiv+0x2f6>
    3ec0:	1e8a      	subs	r2, r1, #2
    3ec2:	9903      	ldr	r1, [sp, #12]
    3ec4:	004d      	lsls	r5, r1, #1
    3ec6:	428d      	cmp	r5, r1
    3ec8:	4189      	sbcs	r1, r1
    3eca:	4249      	negs	r1, r1
    3ecc:	4441      	add	r1, r8
    3ece:	1876      	adds	r6, r6, r1
    3ed0:	9503      	str	r5, [sp, #12]
    3ed2:	e78f      	b.n	3df4 <__aeabi_ddiv+0x4fc>
    3ed4:	201f      	movs	r0, #31
    3ed6:	4240      	negs	r0, r0
    3ed8:	1ac3      	subs	r3, r0, r3
    3eda:	4658      	mov	r0, fp
    3edc:	40d8      	lsrs	r0, r3
    3ede:	0003      	movs	r3, r0
    3ee0:	2a20      	cmp	r2, #32
    3ee2:	d028      	beq.n	3f36 <__aeabi_ddiv+0x63e>
    3ee4:	2040      	movs	r0, #64	; 0x40
    3ee6:	465d      	mov	r5, fp
    3ee8:	1a82      	subs	r2, r0, r2
    3eea:	4095      	lsls	r5, r2
    3eec:	4329      	orrs	r1, r5
    3eee:	1e4a      	subs	r2, r1, #1
    3ef0:	4191      	sbcs	r1, r2
    3ef2:	4319      	orrs	r1, r3
    3ef4:	2307      	movs	r3, #7
    3ef6:	2200      	movs	r2, #0
    3ef8:	400b      	ands	r3, r1
    3efa:	d009      	beq.n	3f10 <__aeabi_ddiv+0x618>
    3efc:	230f      	movs	r3, #15
    3efe:	2200      	movs	r2, #0
    3f00:	400b      	ands	r3, r1
    3f02:	0008      	movs	r0, r1
    3f04:	2b04      	cmp	r3, #4
    3f06:	d1bd      	bne.n	3e84 <__aeabi_ddiv+0x58c>
    3f08:	0001      	movs	r1, r0
    3f0a:	0753      	lsls	r3, r2, #29
    3f0c:	0252      	lsls	r2, r2, #9
    3f0e:	0b12      	lsrs	r2, r2, #12
    3f10:	08c9      	lsrs	r1, r1, #3
    3f12:	4319      	orrs	r1, r3
    3f14:	2301      	movs	r3, #1
    3f16:	4688      	mov	r8, r1
    3f18:	9902      	ldr	r1, [sp, #8]
    3f1a:	2400      	movs	r4, #0
    3f1c:	4019      	ands	r1, r3
    3f1e:	468c      	mov	ip, r1
    3f20:	e5b8      	b.n	3a94 <__aeabi_ddiv+0x19c>
    3f22:	4552      	cmp	r2, sl
    3f24:	d8be      	bhi.n	3ea4 <__aeabi_ddiv+0x5ac>
    3f26:	468b      	mov	fp, r1
    3f28:	2500      	movs	r5, #0
    3f2a:	e660      	b.n	3bee <__aeabi_ddiv+0x2f6>
    3f2c:	9d03      	ldr	r5, [sp, #12]
    3f2e:	429d      	cmp	r5, r3
    3f30:	d3c6      	bcc.n	3ec0 <__aeabi_ddiv+0x5c8>
    3f32:	0011      	movs	r1, r2
    3f34:	e762      	b.n	3dfc <__aeabi_ddiv+0x504>
    3f36:	2500      	movs	r5, #0
    3f38:	e7d8      	b.n	3eec <__aeabi_ddiv+0x5f4>
    3f3a:	2280      	movs	r2, #128	; 0x80
    3f3c:	465b      	mov	r3, fp
    3f3e:	0312      	lsls	r2, r2, #12
    3f40:	431a      	orrs	r2, r3
    3f42:	9b01      	ldr	r3, [sp, #4]
    3f44:	0312      	lsls	r2, r2, #12
    3f46:	0b12      	lsrs	r2, r2, #12
    3f48:	469c      	mov	ip, r3
    3f4a:	4688      	mov	r8, r1
    3f4c:	4c03      	ldr	r4, [pc, #12]	; (3f5c <__aeabi_ddiv+0x664>)
    3f4e:	e5a1      	b.n	3a94 <__aeabi_ddiv+0x19c>
    3f50:	000003ff 	.word	0x000003ff
    3f54:	feffffff 	.word	0xfeffffff
    3f58:	000007fe 	.word	0x000007fe
    3f5c:	000007ff 	.word	0x000007ff

00003f60 <__eqdf2>:
    3f60:	b5f0      	push	{r4, r5, r6, r7, lr}
    3f62:	464f      	mov	r7, r9
    3f64:	4646      	mov	r6, r8
    3f66:	46d6      	mov	lr, sl
    3f68:	005c      	lsls	r4, r3, #1
    3f6a:	b5c0      	push	{r6, r7, lr}
    3f6c:	031f      	lsls	r7, r3, #12
    3f6e:	0fdb      	lsrs	r3, r3, #31
    3f70:	469a      	mov	sl, r3
    3f72:	4b17      	ldr	r3, [pc, #92]	; (3fd0 <__eqdf2+0x70>)
    3f74:	030e      	lsls	r6, r1, #12
    3f76:	004d      	lsls	r5, r1, #1
    3f78:	4684      	mov	ip, r0
    3f7a:	4680      	mov	r8, r0
    3f7c:	0b36      	lsrs	r6, r6, #12
    3f7e:	0d6d      	lsrs	r5, r5, #21
    3f80:	0fc9      	lsrs	r1, r1, #31
    3f82:	4691      	mov	r9, r2
    3f84:	0b3f      	lsrs	r7, r7, #12
    3f86:	0d64      	lsrs	r4, r4, #21
    3f88:	2001      	movs	r0, #1
    3f8a:	429d      	cmp	r5, r3
    3f8c:	d008      	beq.n	3fa0 <__eqdf2+0x40>
    3f8e:	429c      	cmp	r4, r3
    3f90:	d001      	beq.n	3f96 <__eqdf2+0x36>
    3f92:	42a5      	cmp	r5, r4
    3f94:	d00b      	beq.n	3fae <__eqdf2+0x4e>
    3f96:	bc1c      	pop	{r2, r3, r4}
    3f98:	4690      	mov	r8, r2
    3f9a:	4699      	mov	r9, r3
    3f9c:	46a2      	mov	sl, r4
    3f9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3fa0:	4663      	mov	r3, ip
    3fa2:	4333      	orrs	r3, r6
    3fa4:	d1f7      	bne.n	3f96 <__eqdf2+0x36>
    3fa6:	42ac      	cmp	r4, r5
    3fa8:	d1f5      	bne.n	3f96 <__eqdf2+0x36>
    3faa:	433a      	orrs	r2, r7
    3fac:	d1f3      	bne.n	3f96 <__eqdf2+0x36>
    3fae:	2001      	movs	r0, #1
    3fb0:	42be      	cmp	r6, r7
    3fb2:	d1f0      	bne.n	3f96 <__eqdf2+0x36>
    3fb4:	45c8      	cmp	r8, r9
    3fb6:	d1ee      	bne.n	3f96 <__eqdf2+0x36>
    3fb8:	4551      	cmp	r1, sl
    3fba:	d007      	beq.n	3fcc <__eqdf2+0x6c>
    3fbc:	2d00      	cmp	r5, #0
    3fbe:	d1ea      	bne.n	3f96 <__eqdf2+0x36>
    3fc0:	4663      	mov	r3, ip
    3fc2:	431e      	orrs	r6, r3
    3fc4:	0030      	movs	r0, r6
    3fc6:	1e46      	subs	r6, r0, #1
    3fc8:	41b0      	sbcs	r0, r6
    3fca:	e7e4      	b.n	3f96 <__eqdf2+0x36>
    3fcc:	2000      	movs	r0, #0
    3fce:	e7e2      	b.n	3f96 <__eqdf2+0x36>
    3fd0:	000007ff 	.word	0x000007ff

00003fd4 <__gedf2>:
    3fd4:	b5f0      	push	{r4, r5, r6, r7, lr}
    3fd6:	4645      	mov	r5, r8
    3fd8:	46de      	mov	lr, fp
    3fda:	4657      	mov	r7, sl
    3fdc:	464e      	mov	r6, r9
    3fde:	b5e0      	push	{r5, r6, r7, lr}
    3fe0:	031f      	lsls	r7, r3, #12
    3fe2:	0b3d      	lsrs	r5, r7, #12
    3fe4:	4f2c      	ldr	r7, [pc, #176]	; (4098 <__gedf2+0xc4>)
    3fe6:	030e      	lsls	r6, r1, #12
    3fe8:	004c      	lsls	r4, r1, #1
    3fea:	46ab      	mov	fp, r5
    3fec:	005d      	lsls	r5, r3, #1
    3fee:	4684      	mov	ip, r0
    3ff0:	0b36      	lsrs	r6, r6, #12
    3ff2:	0d64      	lsrs	r4, r4, #21
    3ff4:	0fc9      	lsrs	r1, r1, #31
    3ff6:	4690      	mov	r8, r2
    3ff8:	0d6d      	lsrs	r5, r5, #21
    3ffa:	0fdb      	lsrs	r3, r3, #31
    3ffc:	42bc      	cmp	r4, r7
    3ffe:	d02a      	beq.n	4056 <__gedf2+0x82>
    4000:	4f25      	ldr	r7, [pc, #148]	; (4098 <__gedf2+0xc4>)
    4002:	42bd      	cmp	r5, r7
    4004:	d02d      	beq.n	4062 <__gedf2+0x8e>
    4006:	2c00      	cmp	r4, #0
    4008:	d10f      	bne.n	402a <__gedf2+0x56>
    400a:	4330      	orrs	r0, r6
    400c:	0007      	movs	r7, r0
    400e:	4681      	mov	r9, r0
    4010:	4278      	negs	r0, r7
    4012:	4178      	adcs	r0, r7
    4014:	b2c0      	uxtb	r0, r0
    4016:	2d00      	cmp	r5, #0
    4018:	d117      	bne.n	404a <__gedf2+0x76>
    401a:	465f      	mov	r7, fp
    401c:	433a      	orrs	r2, r7
    401e:	d114      	bne.n	404a <__gedf2+0x76>
    4020:	464b      	mov	r3, r9
    4022:	2000      	movs	r0, #0
    4024:	2b00      	cmp	r3, #0
    4026:	d00a      	beq.n	403e <__gedf2+0x6a>
    4028:	e006      	b.n	4038 <__gedf2+0x64>
    402a:	2d00      	cmp	r5, #0
    402c:	d102      	bne.n	4034 <__gedf2+0x60>
    402e:	4658      	mov	r0, fp
    4030:	4302      	orrs	r2, r0
    4032:	d001      	beq.n	4038 <__gedf2+0x64>
    4034:	4299      	cmp	r1, r3
    4036:	d018      	beq.n	406a <__gedf2+0x96>
    4038:	4248      	negs	r0, r1
    403a:	2101      	movs	r1, #1
    403c:	4308      	orrs	r0, r1
    403e:	bc3c      	pop	{r2, r3, r4, r5}
    4040:	4690      	mov	r8, r2
    4042:	4699      	mov	r9, r3
    4044:	46a2      	mov	sl, r4
    4046:	46ab      	mov	fp, r5
    4048:	bdf0      	pop	{r4, r5, r6, r7, pc}
    404a:	2800      	cmp	r0, #0
    404c:	d0f2      	beq.n	4034 <__gedf2+0x60>
    404e:	2001      	movs	r0, #1
    4050:	3b01      	subs	r3, #1
    4052:	4318      	orrs	r0, r3
    4054:	e7f3      	b.n	403e <__gedf2+0x6a>
    4056:	0037      	movs	r7, r6
    4058:	4307      	orrs	r7, r0
    405a:	d0d1      	beq.n	4000 <__gedf2+0x2c>
    405c:	2002      	movs	r0, #2
    405e:	4240      	negs	r0, r0
    4060:	e7ed      	b.n	403e <__gedf2+0x6a>
    4062:	465f      	mov	r7, fp
    4064:	4317      	orrs	r7, r2
    4066:	d0ce      	beq.n	4006 <__gedf2+0x32>
    4068:	e7f8      	b.n	405c <__gedf2+0x88>
    406a:	42ac      	cmp	r4, r5
    406c:	dce4      	bgt.n	4038 <__gedf2+0x64>
    406e:	da03      	bge.n	4078 <__gedf2+0xa4>
    4070:	1e48      	subs	r0, r1, #1
    4072:	2101      	movs	r1, #1
    4074:	4308      	orrs	r0, r1
    4076:	e7e2      	b.n	403e <__gedf2+0x6a>
    4078:	455e      	cmp	r6, fp
    407a:	d8dd      	bhi.n	4038 <__gedf2+0x64>
    407c:	d006      	beq.n	408c <__gedf2+0xb8>
    407e:	2000      	movs	r0, #0
    4080:	455e      	cmp	r6, fp
    4082:	d2dc      	bcs.n	403e <__gedf2+0x6a>
    4084:	2301      	movs	r3, #1
    4086:	1e48      	subs	r0, r1, #1
    4088:	4318      	orrs	r0, r3
    408a:	e7d8      	b.n	403e <__gedf2+0x6a>
    408c:	45c4      	cmp	ip, r8
    408e:	d8d3      	bhi.n	4038 <__gedf2+0x64>
    4090:	2000      	movs	r0, #0
    4092:	45c4      	cmp	ip, r8
    4094:	d3f6      	bcc.n	4084 <__gedf2+0xb0>
    4096:	e7d2      	b.n	403e <__gedf2+0x6a>
    4098:	000007ff 	.word	0x000007ff

0000409c <__ledf2>:
    409c:	b5f0      	push	{r4, r5, r6, r7, lr}
    409e:	464e      	mov	r6, r9
    40a0:	4645      	mov	r5, r8
    40a2:	46de      	mov	lr, fp
    40a4:	4657      	mov	r7, sl
    40a6:	005c      	lsls	r4, r3, #1
    40a8:	b5e0      	push	{r5, r6, r7, lr}
    40aa:	031f      	lsls	r7, r3, #12
    40ac:	0fdb      	lsrs	r3, r3, #31
    40ae:	4699      	mov	r9, r3
    40b0:	4b2a      	ldr	r3, [pc, #168]	; (415c <__ledf2+0xc0>)
    40b2:	030e      	lsls	r6, r1, #12
    40b4:	004d      	lsls	r5, r1, #1
    40b6:	0fc9      	lsrs	r1, r1, #31
    40b8:	4684      	mov	ip, r0
    40ba:	0b36      	lsrs	r6, r6, #12
    40bc:	0d6d      	lsrs	r5, r5, #21
    40be:	468b      	mov	fp, r1
    40c0:	4690      	mov	r8, r2
    40c2:	0b3f      	lsrs	r7, r7, #12
    40c4:	0d64      	lsrs	r4, r4, #21
    40c6:	429d      	cmp	r5, r3
    40c8:	d020      	beq.n	410c <__ledf2+0x70>
    40ca:	4b24      	ldr	r3, [pc, #144]	; (415c <__ledf2+0xc0>)
    40cc:	429c      	cmp	r4, r3
    40ce:	d022      	beq.n	4116 <__ledf2+0x7a>
    40d0:	2d00      	cmp	r5, #0
    40d2:	d112      	bne.n	40fa <__ledf2+0x5e>
    40d4:	4330      	orrs	r0, r6
    40d6:	4243      	negs	r3, r0
    40d8:	4143      	adcs	r3, r0
    40da:	b2db      	uxtb	r3, r3
    40dc:	2c00      	cmp	r4, #0
    40de:	d01f      	beq.n	4120 <__ledf2+0x84>
    40e0:	2b00      	cmp	r3, #0
    40e2:	d00c      	beq.n	40fe <__ledf2+0x62>
    40e4:	464b      	mov	r3, r9
    40e6:	2001      	movs	r0, #1
    40e8:	3b01      	subs	r3, #1
    40ea:	4303      	orrs	r3, r0
    40ec:	0018      	movs	r0, r3
    40ee:	bc3c      	pop	{r2, r3, r4, r5}
    40f0:	4690      	mov	r8, r2
    40f2:	4699      	mov	r9, r3
    40f4:	46a2      	mov	sl, r4
    40f6:	46ab      	mov	fp, r5
    40f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    40fa:	2c00      	cmp	r4, #0
    40fc:	d016      	beq.n	412c <__ledf2+0x90>
    40fe:	45cb      	cmp	fp, r9
    4100:	d017      	beq.n	4132 <__ledf2+0x96>
    4102:	465b      	mov	r3, fp
    4104:	4259      	negs	r1, r3
    4106:	2301      	movs	r3, #1
    4108:	430b      	orrs	r3, r1
    410a:	e7ef      	b.n	40ec <__ledf2+0x50>
    410c:	0031      	movs	r1, r6
    410e:	2302      	movs	r3, #2
    4110:	4301      	orrs	r1, r0
    4112:	d1eb      	bne.n	40ec <__ledf2+0x50>
    4114:	e7d9      	b.n	40ca <__ledf2+0x2e>
    4116:	0039      	movs	r1, r7
    4118:	2302      	movs	r3, #2
    411a:	4311      	orrs	r1, r2
    411c:	d1e6      	bne.n	40ec <__ledf2+0x50>
    411e:	e7d7      	b.n	40d0 <__ledf2+0x34>
    4120:	433a      	orrs	r2, r7
    4122:	d1dd      	bne.n	40e0 <__ledf2+0x44>
    4124:	2300      	movs	r3, #0
    4126:	2800      	cmp	r0, #0
    4128:	d0e0      	beq.n	40ec <__ledf2+0x50>
    412a:	e7ea      	b.n	4102 <__ledf2+0x66>
    412c:	433a      	orrs	r2, r7
    412e:	d1e6      	bne.n	40fe <__ledf2+0x62>
    4130:	e7e7      	b.n	4102 <__ledf2+0x66>
    4132:	42a5      	cmp	r5, r4
    4134:	dce5      	bgt.n	4102 <__ledf2+0x66>
    4136:	db05      	blt.n	4144 <__ledf2+0xa8>
    4138:	42be      	cmp	r6, r7
    413a:	d8e2      	bhi.n	4102 <__ledf2+0x66>
    413c:	d007      	beq.n	414e <__ledf2+0xb2>
    413e:	2300      	movs	r3, #0
    4140:	42be      	cmp	r6, r7
    4142:	d2d3      	bcs.n	40ec <__ledf2+0x50>
    4144:	4659      	mov	r1, fp
    4146:	2301      	movs	r3, #1
    4148:	3901      	subs	r1, #1
    414a:	430b      	orrs	r3, r1
    414c:	e7ce      	b.n	40ec <__ledf2+0x50>
    414e:	45c4      	cmp	ip, r8
    4150:	d8d7      	bhi.n	4102 <__ledf2+0x66>
    4152:	2300      	movs	r3, #0
    4154:	45c4      	cmp	ip, r8
    4156:	d3f5      	bcc.n	4144 <__ledf2+0xa8>
    4158:	e7c8      	b.n	40ec <__ledf2+0x50>
    415a:	46c0      	nop			; (mov r8, r8)
    415c:	000007ff 	.word	0x000007ff

00004160 <__aeabi_dmul>:
    4160:	b5f0      	push	{r4, r5, r6, r7, lr}
    4162:	4657      	mov	r7, sl
    4164:	4645      	mov	r5, r8
    4166:	46de      	mov	lr, fp
    4168:	464e      	mov	r6, r9
    416a:	b5e0      	push	{r5, r6, r7, lr}
    416c:	030c      	lsls	r4, r1, #12
    416e:	4698      	mov	r8, r3
    4170:	004e      	lsls	r6, r1, #1
    4172:	0b23      	lsrs	r3, r4, #12
    4174:	b087      	sub	sp, #28
    4176:	0007      	movs	r7, r0
    4178:	4692      	mov	sl, r2
    417a:	469b      	mov	fp, r3
    417c:	0d76      	lsrs	r6, r6, #21
    417e:	0fcd      	lsrs	r5, r1, #31
    4180:	2e00      	cmp	r6, #0
    4182:	d06b      	beq.n	425c <__aeabi_dmul+0xfc>
    4184:	4b6d      	ldr	r3, [pc, #436]	; (433c <__aeabi_dmul+0x1dc>)
    4186:	429e      	cmp	r6, r3
    4188:	d035      	beq.n	41f6 <__aeabi_dmul+0x96>
    418a:	2480      	movs	r4, #128	; 0x80
    418c:	465b      	mov	r3, fp
    418e:	0f42      	lsrs	r2, r0, #29
    4190:	0424      	lsls	r4, r4, #16
    4192:	00db      	lsls	r3, r3, #3
    4194:	4314      	orrs	r4, r2
    4196:	431c      	orrs	r4, r3
    4198:	00c3      	lsls	r3, r0, #3
    419a:	4699      	mov	r9, r3
    419c:	4b68      	ldr	r3, [pc, #416]	; (4340 <__aeabi_dmul+0x1e0>)
    419e:	46a3      	mov	fp, r4
    41a0:	469c      	mov	ip, r3
    41a2:	2300      	movs	r3, #0
    41a4:	2700      	movs	r7, #0
    41a6:	4466      	add	r6, ip
    41a8:	9302      	str	r3, [sp, #8]
    41aa:	4643      	mov	r3, r8
    41ac:	031c      	lsls	r4, r3, #12
    41ae:	005a      	lsls	r2, r3, #1
    41b0:	0fdb      	lsrs	r3, r3, #31
    41b2:	4650      	mov	r0, sl
    41b4:	0b24      	lsrs	r4, r4, #12
    41b6:	0d52      	lsrs	r2, r2, #21
    41b8:	4698      	mov	r8, r3
    41ba:	d100      	bne.n	41be <__aeabi_dmul+0x5e>
    41bc:	e076      	b.n	42ac <__aeabi_dmul+0x14c>
    41be:	4b5f      	ldr	r3, [pc, #380]	; (433c <__aeabi_dmul+0x1dc>)
    41c0:	429a      	cmp	r2, r3
    41c2:	d06d      	beq.n	42a0 <__aeabi_dmul+0x140>
    41c4:	2380      	movs	r3, #128	; 0x80
    41c6:	0f41      	lsrs	r1, r0, #29
    41c8:	041b      	lsls	r3, r3, #16
    41ca:	430b      	orrs	r3, r1
    41cc:	495c      	ldr	r1, [pc, #368]	; (4340 <__aeabi_dmul+0x1e0>)
    41ce:	00e4      	lsls	r4, r4, #3
    41d0:	468c      	mov	ip, r1
    41d2:	431c      	orrs	r4, r3
    41d4:	00c3      	lsls	r3, r0, #3
    41d6:	2000      	movs	r0, #0
    41d8:	4462      	add	r2, ip
    41da:	4641      	mov	r1, r8
    41dc:	18b6      	adds	r6, r6, r2
    41de:	4069      	eors	r1, r5
    41e0:	1c72      	adds	r2, r6, #1
    41e2:	9101      	str	r1, [sp, #4]
    41e4:	4694      	mov	ip, r2
    41e6:	4307      	orrs	r7, r0
    41e8:	2f0f      	cmp	r7, #15
    41ea:	d900      	bls.n	41ee <__aeabi_dmul+0x8e>
    41ec:	e0b0      	b.n	4350 <__aeabi_dmul+0x1f0>
    41ee:	4a55      	ldr	r2, [pc, #340]	; (4344 <__aeabi_dmul+0x1e4>)
    41f0:	00bf      	lsls	r7, r7, #2
    41f2:	59d2      	ldr	r2, [r2, r7]
    41f4:	4697      	mov	pc, r2
    41f6:	465b      	mov	r3, fp
    41f8:	4303      	orrs	r3, r0
    41fa:	4699      	mov	r9, r3
    41fc:	d000      	beq.n	4200 <__aeabi_dmul+0xa0>
    41fe:	e087      	b.n	4310 <__aeabi_dmul+0x1b0>
    4200:	2300      	movs	r3, #0
    4202:	469b      	mov	fp, r3
    4204:	3302      	adds	r3, #2
    4206:	2708      	movs	r7, #8
    4208:	9302      	str	r3, [sp, #8]
    420a:	e7ce      	b.n	41aa <__aeabi_dmul+0x4a>
    420c:	4642      	mov	r2, r8
    420e:	9201      	str	r2, [sp, #4]
    4210:	2802      	cmp	r0, #2
    4212:	d067      	beq.n	42e4 <__aeabi_dmul+0x184>
    4214:	2803      	cmp	r0, #3
    4216:	d100      	bne.n	421a <__aeabi_dmul+0xba>
    4218:	e20e      	b.n	4638 <__aeabi_dmul+0x4d8>
    421a:	2801      	cmp	r0, #1
    421c:	d000      	beq.n	4220 <__aeabi_dmul+0xc0>
    421e:	e162      	b.n	44e6 <__aeabi_dmul+0x386>
    4220:	2300      	movs	r3, #0
    4222:	2400      	movs	r4, #0
    4224:	2200      	movs	r2, #0
    4226:	4699      	mov	r9, r3
    4228:	9901      	ldr	r1, [sp, #4]
    422a:	4001      	ands	r1, r0
    422c:	b2cd      	uxtb	r5, r1
    422e:	2100      	movs	r1, #0
    4230:	0312      	lsls	r2, r2, #12
    4232:	0d0b      	lsrs	r3, r1, #20
    4234:	0b12      	lsrs	r2, r2, #12
    4236:	051b      	lsls	r3, r3, #20
    4238:	4313      	orrs	r3, r2
    423a:	4a43      	ldr	r2, [pc, #268]	; (4348 <__aeabi_dmul+0x1e8>)
    423c:	0524      	lsls	r4, r4, #20
    423e:	4013      	ands	r3, r2
    4240:	431c      	orrs	r4, r3
    4242:	0064      	lsls	r4, r4, #1
    4244:	07ed      	lsls	r5, r5, #31
    4246:	0864      	lsrs	r4, r4, #1
    4248:	432c      	orrs	r4, r5
    424a:	4648      	mov	r0, r9
    424c:	0021      	movs	r1, r4
    424e:	b007      	add	sp, #28
    4250:	bc3c      	pop	{r2, r3, r4, r5}
    4252:	4690      	mov	r8, r2
    4254:	4699      	mov	r9, r3
    4256:	46a2      	mov	sl, r4
    4258:	46ab      	mov	fp, r5
    425a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    425c:	4303      	orrs	r3, r0
    425e:	4699      	mov	r9, r3
    4260:	d04f      	beq.n	4302 <__aeabi_dmul+0x1a2>
    4262:	465b      	mov	r3, fp
    4264:	2b00      	cmp	r3, #0
    4266:	d100      	bne.n	426a <__aeabi_dmul+0x10a>
    4268:	e189      	b.n	457e <__aeabi_dmul+0x41e>
    426a:	4658      	mov	r0, fp
    426c:	f000 fe48 	bl	4f00 <__clzsi2>
    4270:	0003      	movs	r3, r0
    4272:	3b0b      	subs	r3, #11
    4274:	2b1c      	cmp	r3, #28
    4276:	dd00      	ble.n	427a <__aeabi_dmul+0x11a>
    4278:	e17a      	b.n	4570 <__aeabi_dmul+0x410>
    427a:	221d      	movs	r2, #29
    427c:	1ad3      	subs	r3, r2, r3
    427e:	003a      	movs	r2, r7
    4280:	0001      	movs	r1, r0
    4282:	465c      	mov	r4, fp
    4284:	40da      	lsrs	r2, r3
    4286:	3908      	subs	r1, #8
    4288:	408c      	lsls	r4, r1
    428a:	0013      	movs	r3, r2
    428c:	408f      	lsls	r7, r1
    428e:	4323      	orrs	r3, r4
    4290:	469b      	mov	fp, r3
    4292:	46b9      	mov	r9, r7
    4294:	2300      	movs	r3, #0
    4296:	4e2d      	ldr	r6, [pc, #180]	; (434c <__aeabi_dmul+0x1ec>)
    4298:	2700      	movs	r7, #0
    429a:	1a36      	subs	r6, r6, r0
    429c:	9302      	str	r3, [sp, #8]
    429e:	e784      	b.n	41aa <__aeabi_dmul+0x4a>
    42a0:	4653      	mov	r3, sl
    42a2:	4323      	orrs	r3, r4
    42a4:	d12a      	bne.n	42fc <__aeabi_dmul+0x19c>
    42a6:	2400      	movs	r4, #0
    42a8:	2002      	movs	r0, #2
    42aa:	e796      	b.n	41da <__aeabi_dmul+0x7a>
    42ac:	4653      	mov	r3, sl
    42ae:	4323      	orrs	r3, r4
    42b0:	d020      	beq.n	42f4 <__aeabi_dmul+0x194>
    42b2:	2c00      	cmp	r4, #0
    42b4:	d100      	bne.n	42b8 <__aeabi_dmul+0x158>
    42b6:	e157      	b.n	4568 <__aeabi_dmul+0x408>
    42b8:	0020      	movs	r0, r4
    42ba:	f000 fe21 	bl	4f00 <__clzsi2>
    42be:	0003      	movs	r3, r0
    42c0:	3b0b      	subs	r3, #11
    42c2:	2b1c      	cmp	r3, #28
    42c4:	dd00      	ble.n	42c8 <__aeabi_dmul+0x168>
    42c6:	e149      	b.n	455c <__aeabi_dmul+0x3fc>
    42c8:	211d      	movs	r1, #29
    42ca:	1acb      	subs	r3, r1, r3
    42cc:	4651      	mov	r1, sl
    42ce:	0002      	movs	r2, r0
    42d0:	40d9      	lsrs	r1, r3
    42d2:	4653      	mov	r3, sl
    42d4:	3a08      	subs	r2, #8
    42d6:	4094      	lsls	r4, r2
    42d8:	4093      	lsls	r3, r2
    42da:	430c      	orrs	r4, r1
    42dc:	4a1b      	ldr	r2, [pc, #108]	; (434c <__aeabi_dmul+0x1ec>)
    42de:	1a12      	subs	r2, r2, r0
    42e0:	2000      	movs	r0, #0
    42e2:	e77a      	b.n	41da <__aeabi_dmul+0x7a>
    42e4:	2501      	movs	r5, #1
    42e6:	9b01      	ldr	r3, [sp, #4]
    42e8:	4c14      	ldr	r4, [pc, #80]	; (433c <__aeabi_dmul+0x1dc>)
    42ea:	401d      	ands	r5, r3
    42ec:	2300      	movs	r3, #0
    42ee:	2200      	movs	r2, #0
    42f0:	4699      	mov	r9, r3
    42f2:	e79c      	b.n	422e <__aeabi_dmul+0xce>
    42f4:	2400      	movs	r4, #0
    42f6:	2200      	movs	r2, #0
    42f8:	2001      	movs	r0, #1
    42fa:	e76e      	b.n	41da <__aeabi_dmul+0x7a>
    42fc:	4653      	mov	r3, sl
    42fe:	2003      	movs	r0, #3
    4300:	e76b      	b.n	41da <__aeabi_dmul+0x7a>
    4302:	2300      	movs	r3, #0
    4304:	469b      	mov	fp, r3
    4306:	3301      	adds	r3, #1
    4308:	2704      	movs	r7, #4
    430a:	2600      	movs	r6, #0
    430c:	9302      	str	r3, [sp, #8]
    430e:	e74c      	b.n	41aa <__aeabi_dmul+0x4a>
    4310:	2303      	movs	r3, #3
    4312:	4681      	mov	r9, r0
    4314:	270c      	movs	r7, #12
    4316:	9302      	str	r3, [sp, #8]
    4318:	e747      	b.n	41aa <__aeabi_dmul+0x4a>
    431a:	2280      	movs	r2, #128	; 0x80
    431c:	2300      	movs	r3, #0
    431e:	2500      	movs	r5, #0
    4320:	0312      	lsls	r2, r2, #12
    4322:	4699      	mov	r9, r3
    4324:	4c05      	ldr	r4, [pc, #20]	; (433c <__aeabi_dmul+0x1dc>)
    4326:	e782      	b.n	422e <__aeabi_dmul+0xce>
    4328:	465c      	mov	r4, fp
    432a:	464b      	mov	r3, r9
    432c:	9802      	ldr	r0, [sp, #8]
    432e:	e76f      	b.n	4210 <__aeabi_dmul+0xb0>
    4330:	465c      	mov	r4, fp
    4332:	464b      	mov	r3, r9
    4334:	9501      	str	r5, [sp, #4]
    4336:	9802      	ldr	r0, [sp, #8]
    4338:	e76a      	b.n	4210 <__aeabi_dmul+0xb0>
    433a:	46c0      	nop			; (mov r8, r8)
    433c:	000007ff 	.word	0x000007ff
    4340:	fffffc01 	.word	0xfffffc01
    4344:	00009e54 	.word	0x00009e54
    4348:	800fffff 	.word	0x800fffff
    434c:	fffffc0d 	.word	0xfffffc0d
    4350:	464a      	mov	r2, r9
    4352:	4649      	mov	r1, r9
    4354:	0c17      	lsrs	r7, r2, #16
    4356:	0c1a      	lsrs	r2, r3, #16
    4358:	041b      	lsls	r3, r3, #16
    435a:	0c1b      	lsrs	r3, r3, #16
    435c:	0408      	lsls	r0, r1, #16
    435e:	0019      	movs	r1, r3
    4360:	0c00      	lsrs	r0, r0, #16
    4362:	4341      	muls	r1, r0
    4364:	0015      	movs	r5, r2
    4366:	4688      	mov	r8, r1
    4368:	0019      	movs	r1, r3
    436a:	437d      	muls	r5, r7
    436c:	4379      	muls	r1, r7
    436e:	9503      	str	r5, [sp, #12]
    4370:	4689      	mov	r9, r1
    4372:	0029      	movs	r1, r5
    4374:	0015      	movs	r5, r2
    4376:	4345      	muls	r5, r0
    4378:	444d      	add	r5, r9
    437a:	9502      	str	r5, [sp, #8]
    437c:	4645      	mov	r5, r8
    437e:	0c2d      	lsrs	r5, r5, #16
    4380:	46aa      	mov	sl, r5
    4382:	9d02      	ldr	r5, [sp, #8]
    4384:	4455      	add	r5, sl
    4386:	45a9      	cmp	r9, r5
    4388:	d906      	bls.n	4398 <__aeabi_dmul+0x238>
    438a:	468a      	mov	sl, r1
    438c:	2180      	movs	r1, #128	; 0x80
    438e:	0249      	lsls	r1, r1, #9
    4390:	4689      	mov	r9, r1
    4392:	44ca      	add	sl, r9
    4394:	4651      	mov	r1, sl
    4396:	9103      	str	r1, [sp, #12]
    4398:	0c29      	lsrs	r1, r5, #16
    439a:	9104      	str	r1, [sp, #16]
    439c:	4641      	mov	r1, r8
    439e:	0409      	lsls	r1, r1, #16
    43a0:	042d      	lsls	r5, r5, #16
    43a2:	0c09      	lsrs	r1, r1, #16
    43a4:	4688      	mov	r8, r1
    43a6:	0029      	movs	r1, r5
    43a8:	0c25      	lsrs	r5, r4, #16
    43aa:	0424      	lsls	r4, r4, #16
    43ac:	4441      	add	r1, r8
    43ae:	0c24      	lsrs	r4, r4, #16
    43b0:	9105      	str	r1, [sp, #20]
    43b2:	0021      	movs	r1, r4
    43b4:	4341      	muls	r1, r0
    43b6:	4688      	mov	r8, r1
    43b8:	0021      	movs	r1, r4
    43ba:	4379      	muls	r1, r7
    43bc:	468a      	mov	sl, r1
    43be:	4368      	muls	r0, r5
    43c0:	4641      	mov	r1, r8
    43c2:	4450      	add	r0, sl
    43c4:	4681      	mov	r9, r0
    43c6:	0c08      	lsrs	r0, r1, #16
    43c8:	4448      	add	r0, r9
    43ca:	436f      	muls	r7, r5
    43cc:	4582      	cmp	sl, r0
    43ce:	d903      	bls.n	43d8 <__aeabi_dmul+0x278>
    43d0:	2180      	movs	r1, #128	; 0x80
    43d2:	0249      	lsls	r1, r1, #9
    43d4:	4689      	mov	r9, r1
    43d6:	444f      	add	r7, r9
    43d8:	0c01      	lsrs	r1, r0, #16
    43da:	4689      	mov	r9, r1
    43dc:	0039      	movs	r1, r7
    43de:	4449      	add	r1, r9
    43e0:	9102      	str	r1, [sp, #8]
    43e2:	4641      	mov	r1, r8
    43e4:	040f      	lsls	r7, r1, #16
    43e6:	9904      	ldr	r1, [sp, #16]
    43e8:	0c3f      	lsrs	r7, r7, #16
    43ea:	4688      	mov	r8, r1
    43ec:	0400      	lsls	r0, r0, #16
    43ee:	19c0      	adds	r0, r0, r7
    43f0:	4480      	add	r8, r0
    43f2:	4641      	mov	r1, r8
    43f4:	9104      	str	r1, [sp, #16]
    43f6:	4659      	mov	r1, fp
    43f8:	0c0f      	lsrs	r7, r1, #16
    43fa:	0409      	lsls	r1, r1, #16
    43fc:	0c09      	lsrs	r1, r1, #16
    43fe:	4688      	mov	r8, r1
    4400:	4359      	muls	r1, r3
    4402:	468a      	mov	sl, r1
    4404:	0039      	movs	r1, r7
    4406:	4351      	muls	r1, r2
    4408:	4689      	mov	r9, r1
    440a:	4641      	mov	r1, r8
    440c:	434a      	muls	r2, r1
    440e:	4651      	mov	r1, sl
    4410:	0c09      	lsrs	r1, r1, #16
    4412:	468b      	mov	fp, r1
    4414:	437b      	muls	r3, r7
    4416:	18d2      	adds	r2, r2, r3
    4418:	445a      	add	r2, fp
    441a:	4293      	cmp	r3, r2
    441c:	d903      	bls.n	4426 <__aeabi_dmul+0x2c6>
    441e:	2380      	movs	r3, #128	; 0x80
    4420:	025b      	lsls	r3, r3, #9
    4422:	469b      	mov	fp, r3
    4424:	44d9      	add	r9, fp
    4426:	4651      	mov	r1, sl
    4428:	0409      	lsls	r1, r1, #16
    442a:	0c09      	lsrs	r1, r1, #16
    442c:	468a      	mov	sl, r1
    442e:	4641      	mov	r1, r8
    4430:	4361      	muls	r1, r4
    4432:	437c      	muls	r4, r7
    4434:	0c13      	lsrs	r3, r2, #16
    4436:	0412      	lsls	r2, r2, #16
    4438:	444b      	add	r3, r9
    443a:	4452      	add	r2, sl
    443c:	46a1      	mov	r9, r4
    443e:	468a      	mov	sl, r1
    4440:	003c      	movs	r4, r7
    4442:	4641      	mov	r1, r8
    4444:	436c      	muls	r4, r5
    4446:	434d      	muls	r5, r1
    4448:	4651      	mov	r1, sl
    444a:	444d      	add	r5, r9
    444c:	0c0f      	lsrs	r7, r1, #16
    444e:	197d      	adds	r5, r7, r5
    4450:	45a9      	cmp	r9, r5
    4452:	d903      	bls.n	445c <__aeabi_dmul+0x2fc>
    4454:	2180      	movs	r1, #128	; 0x80
    4456:	0249      	lsls	r1, r1, #9
    4458:	4688      	mov	r8, r1
    445a:	4444      	add	r4, r8
    445c:	9f04      	ldr	r7, [sp, #16]
    445e:	9903      	ldr	r1, [sp, #12]
    4460:	46b8      	mov	r8, r7
    4462:	4441      	add	r1, r8
    4464:	468b      	mov	fp, r1
    4466:	4583      	cmp	fp, r0
    4468:	4180      	sbcs	r0, r0
    446a:	4241      	negs	r1, r0
    446c:	4688      	mov	r8, r1
    446e:	4651      	mov	r1, sl
    4470:	0408      	lsls	r0, r1, #16
    4472:	042f      	lsls	r7, r5, #16
    4474:	0c00      	lsrs	r0, r0, #16
    4476:	183f      	adds	r7, r7, r0
    4478:	4658      	mov	r0, fp
    447a:	9902      	ldr	r1, [sp, #8]
    447c:	1810      	adds	r0, r2, r0
    447e:	4689      	mov	r9, r1
    4480:	4290      	cmp	r0, r2
    4482:	4192      	sbcs	r2, r2
    4484:	444f      	add	r7, r9
    4486:	46ba      	mov	sl, r7
    4488:	4252      	negs	r2, r2
    448a:	4699      	mov	r9, r3
    448c:	4693      	mov	fp, r2
    448e:	44c2      	add	sl, r8
    4490:	44d1      	add	r9, sl
    4492:	44cb      	add	fp, r9
    4494:	428f      	cmp	r7, r1
    4496:	41bf      	sbcs	r7, r7
    4498:	45c2      	cmp	sl, r8
    449a:	4189      	sbcs	r1, r1
    449c:	4599      	cmp	r9, r3
    449e:	419b      	sbcs	r3, r3
    44a0:	4593      	cmp	fp, r2
    44a2:	4192      	sbcs	r2, r2
    44a4:	427f      	negs	r7, r7
    44a6:	4249      	negs	r1, r1
    44a8:	0c2d      	lsrs	r5, r5, #16
    44aa:	4252      	negs	r2, r2
    44ac:	430f      	orrs	r7, r1
    44ae:	425b      	negs	r3, r3
    44b0:	4313      	orrs	r3, r2
    44b2:	197f      	adds	r7, r7, r5
    44b4:	18ff      	adds	r7, r7, r3
    44b6:	465b      	mov	r3, fp
    44b8:	193c      	adds	r4, r7, r4
    44ba:	0ddb      	lsrs	r3, r3, #23
    44bc:	9a05      	ldr	r2, [sp, #20]
    44be:	0264      	lsls	r4, r4, #9
    44c0:	431c      	orrs	r4, r3
    44c2:	0243      	lsls	r3, r0, #9
    44c4:	4313      	orrs	r3, r2
    44c6:	1e5d      	subs	r5, r3, #1
    44c8:	41ab      	sbcs	r3, r5
    44ca:	465a      	mov	r2, fp
    44cc:	0dc0      	lsrs	r0, r0, #23
    44ce:	4303      	orrs	r3, r0
    44d0:	0252      	lsls	r2, r2, #9
    44d2:	4313      	orrs	r3, r2
    44d4:	01e2      	lsls	r2, r4, #7
    44d6:	d556      	bpl.n	4586 <__aeabi_dmul+0x426>
    44d8:	2001      	movs	r0, #1
    44da:	085a      	lsrs	r2, r3, #1
    44dc:	4003      	ands	r3, r0
    44de:	4313      	orrs	r3, r2
    44e0:	07e2      	lsls	r2, r4, #31
    44e2:	4313      	orrs	r3, r2
    44e4:	0864      	lsrs	r4, r4, #1
    44e6:	485a      	ldr	r0, [pc, #360]	; (4650 <__aeabi_dmul+0x4f0>)
    44e8:	4460      	add	r0, ip
    44ea:	2800      	cmp	r0, #0
    44ec:	dd4d      	ble.n	458a <__aeabi_dmul+0x42a>
    44ee:	075a      	lsls	r2, r3, #29
    44f0:	d009      	beq.n	4506 <__aeabi_dmul+0x3a6>
    44f2:	220f      	movs	r2, #15
    44f4:	401a      	ands	r2, r3
    44f6:	2a04      	cmp	r2, #4
    44f8:	d005      	beq.n	4506 <__aeabi_dmul+0x3a6>
    44fa:	1d1a      	adds	r2, r3, #4
    44fc:	429a      	cmp	r2, r3
    44fe:	419b      	sbcs	r3, r3
    4500:	425b      	negs	r3, r3
    4502:	18e4      	adds	r4, r4, r3
    4504:	0013      	movs	r3, r2
    4506:	01e2      	lsls	r2, r4, #7
    4508:	d504      	bpl.n	4514 <__aeabi_dmul+0x3b4>
    450a:	2080      	movs	r0, #128	; 0x80
    450c:	4a51      	ldr	r2, [pc, #324]	; (4654 <__aeabi_dmul+0x4f4>)
    450e:	00c0      	lsls	r0, r0, #3
    4510:	4014      	ands	r4, r2
    4512:	4460      	add	r0, ip
    4514:	4a50      	ldr	r2, [pc, #320]	; (4658 <__aeabi_dmul+0x4f8>)
    4516:	4290      	cmp	r0, r2
    4518:	dd00      	ble.n	451c <__aeabi_dmul+0x3bc>
    451a:	e6e3      	b.n	42e4 <__aeabi_dmul+0x184>
    451c:	2501      	movs	r5, #1
    451e:	08db      	lsrs	r3, r3, #3
    4520:	0762      	lsls	r2, r4, #29
    4522:	431a      	orrs	r2, r3
    4524:	0264      	lsls	r4, r4, #9
    4526:	9b01      	ldr	r3, [sp, #4]
    4528:	4691      	mov	r9, r2
    452a:	0b22      	lsrs	r2, r4, #12
    452c:	0544      	lsls	r4, r0, #21
    452e:	0d64      	lsrs	r4, r4, #21
    4530:	401d      	ands	r5, r3
    4532:	e67c      	b.n	422e <__aeabi_dmul+0xce>
    4534:	2280      	movs	r2, #128	; 0x80
    4536:	4659      	mov	r1, fp
    4538:	0312      	lsls	r2, r2, #12
    453a:	4211      	tst	r1, r2
    453c:	d008      	beq.n	4550 <__aeabi_dmul+0x3f0>
    453e:	4214      	tst	r4, r2
    4540:	d106      	bne.n	4550 <__aeabi_dmul+0x3f0>
    4542:	4322      	orrs	r2, r4
    4544:	0312      	lsls	r2, r2, #12
    4546:	0b12      	lsrs	r2, r2, #12
    4548:	4645      	mov	r5, r8
    454a:	4699      	mov	r9, r3
    454c:	4c43      	ldr	r4, [pc, #268]	; (465c <__aeabi_dmul+0x4fc>)
    454e:	e66e      	b.n	422e <__aeabi_dmul+0xce>
    4550:	465b      	mov	r3, fp
    4552:	431a      	orrs	r2, r3
    4554:	0312      	lsls	r2, r2, #12
    4556:	0b12      	lsrs	r2, r2, #12
    4558:	4c40      	ldr	r4, [pc, #256]	; (465c <__aeabi_dmul+0x4fc>)
    455a:	e668      	b.n	422e <__aeabi_dmul+0xce>
    455c:	0003      	movs	r3, r0
    455e:	4654      	mov	r4, sl
    4560:	3b28      	subs	r3, #40	; 0x28
    4562:	409c      	lsls	r4, r3
    4564:	2300      	movs	r3, #0
    4566:	e6b9      	b.n	42dc <__aeabi_dmul+0x17c>
    4568:	f000 fcca 	bl	4f00 <__clzsi2>
    456c:	3020      	adds	r0, #32
    456e:	e6a6      	b.n	42be <__aeabi_dmul+0x15e>
    4570:	0003      	movs	r3, r0
    4572:	3b28      	subs	r3, #40	; 0x28
    4574:	409f      	lsls	r7, r3
    4576:	2300      	movs	r3, #0
    4578:	46bb      	mov	fp, r7
    457a:	4699      	mov	r9, r3
    457c:	e68a      	b.n	4294 <__aeabi_dmul+0x134>
    457e:	f000 fcbf 	bl	4f00 <__clzsi2>
    4582:	3020      	adds	r0, #32
    4584:	e674      	b.n	4270 <__aeabi_dmul+0x110>
    4586:	46b4      	mov	ip, r6
    4588:	e7ad      	b.n	44e6 <__aeabi_dmul+0x386>
    458a:	2501      	movs	r5, #1
    458c:	1a2a      	subs	r2, r5, r0
    458e:	2a38      	cmp	r2, #56	; 0x38
    4590:	dd06      	ble.n	45a0 <__aeabi_dmul+0x440>
    4592:	9b01      	ldr	r3, [sp, #4]
    4594:	2400      	movs	r4, #0
    4596:	401d      	ands	r5, r3
    4598:	2300      	movs	r3, #0
    459a:	2200      	movs	r2, #0
    459c:	4699      	mov	r9, r3
    459e:	e646      	b.n	422e <__aeabi_dmul+0xce>
    45a0:	2a1f      	cmp	r2, #31
    45a2:	dc21      	bgt.n	45e8 <__aeabi_dmul+0x488>
    45a4:	2520      	movs	r5, #32
    45a6:	0020      	movs	r0, r4
    45a8:	1aad      	subs	r5, r5, r2
    45aa:	001e      	movs	r6, r3
    45ac:	40ab      	lsls	r3, r5
    45ae:	40a8      	lsls	r0, r5
    45b0:	40d6      	lsrs	r6, r2
    45b2:	1e5d      	subs	r5, r3, #1
    45b4:	41ab      	sbcs	r3, r5
    45b6:	4330      	orrs	r0, r6
    45b8:	4318      	orrs	r0, r3
    45ba:	40d4      	lsrs	r4, r2
    45bc:	0743      	lsls	r3, r0, #29
    45be:	d009      	beq.n	45d4 <__aeabi_dmul+0x474>
    45c0:	230f      	movs	r3, #15
    45c2:	4003      	ands	r3, r0
    45c4:	2b04      	cmp	r3, #4
    45c6:	d005      	beq.n	45d4 <__aeabi_dmul+0x474>
    45c8:	0003      	movs	r3, r0
    45ca:	1d18      	adds	r0, r3, #4
    45cc:	4298      	cmp	r0, r3
    45ce:	419b      	sbcs	r3, r3
    45d0:	425b      	negs	r3, r3
    45d2:	18e4      	adds	r4, r4, r3
    45d4:	0223      	lsls	r3, r4, #8
    45d6:	d521      	bpl.n	461c <__aeabi_dmul+0x4bc>
    45d8:	2501      	movs	r5, #1
    45da:	9b01      	ldr	r3, [sp, #4]
    45dc:	2401      	movs	r4, #1
    45de:	401d      	ands	r5, r3
    45e0:	2300      	movs	r3, #0
    45e2:	2200      	movs	r2, #0
    45e4:	4699      	mov	r9, r3
    45e6:	e622      	b.n	422e <__aeabi_dmul+0xce>
    45e8:	251f      	movs	r5, #31
    45ea:	0021      	movs	r1, r4
    45ec:	426d      	negs	r5, r5
    45ee:	1a28      	subs	r0, r5, r0
    45f0:	40c1      	lsrs	r1, r0
    45f2:	0008      	movs	r0, r1
    45f4:	2a20      	cmp	r2, #32
    45f6:	d01d      	beq.n	4634 <__aeabi_dmul+0x4d4>
    45f8:	355f      	adds	r5, #95	; 0x5f
    45fa:	1aaa      	subs	r2, r5, r2
    45fc:	4094      	lsls	r4, r2
    45fe:	4323      	orrs	r3, r4
    4600:	1e5c      	subs	r4, r3, #1
    4602:	41a3      	sbcs	r3, r4
    4604:	2507      	movs	r5, #7
    4606:	4303      	orrs	r3, r0
    4608:	401d      	ands	r5, r3
    460a:	2200      	movs	r2, #0
    460c:	2d00      	cmp	r5, #0
    460e:	d009      	beq.n	4624 <__aeabi_dmul+0x4c4>
    4610:	220f      	movs	r2, #15
    4612:	2400      	movs	r4, #0
    4614:	401a      	ands	r2, r3
    4616:	0018      	movs	r0, r3
    4618:	2a04      	cmp	r2, #4
    461a:	d1d6      	bne.n	45ca <__aeabi_dmul+0x46a>
    461c:	0003      	movs	r3, r0
    461e:	0765      	lsls	r5, r4, #29
    4620:	0264      	lsls	r4, r4, #9
    4622:	0b22      	lsrs	r2, r4, #12
    4624:	08db      	lsrs	r3, r3, #3
    4626:	432b      	orrs	r3, r5
    4628:	2501      	movs	r5, #1
    462a:	4699      	mov	r9, r3
    462c:	9b01      	ldr	r3, [sp, #4]
    462e:	2400      	movs	r4, #0
    4630:	401d      	ands	r5, r3
    4632:	e5fc      	b.n	422e <__aeabi_dmul+0xce>
    4634:	2400      	movs	r4, #0
    4636:	e7e2      	b.n	45fe <__aeabi_dmul+0x49e>
    4638:	2280      	movs	r2, #128	; 0x80
    463a:	2501      	movs	r5, #1
    463c:	0312      	lsls	r2, r2, #12
    463e:	4322      	orrs	r2, r4
    4640:	9901      	ldr	r1, [sp, #4]
    4642:	0312      	lsls	r2, r2, #12
    4644:	0b12      	lsrs	r2, r2, #12
    4646:	400d      	ands	r5, r1
    4648:	4699      	mov	r9, r3
    464a:	4c04      	ldr	r4, [pc, #16]	; (465c <__aeabi_dmul+0x4fc>)
    464c:	e5ef      	b.n	422e <__aeabi_dmul+0xce>
    464e:	46c0      	nop			; (mov r8, r8)
    4650:	000003ff 	.word	0x000003ff
    4654:	feffffff 	.word	0xfeffffff
    4658:	000007fe 	.word	0x000007fe
    465c:	000007ff 	.word	0x000007ff

00004660 <__aeabi_dsub>:
    4660:	b5f0      	push	{r4, r5, r6, r7, lr}
    4662:	4646      	mov	r6, r8
    4664:	46d6      	mov	lr, sl
    4666:	464f      	mov	r7, r9
    4668:	030c      	lsls	r4, r1, #12
    466a:	b5c0      	push	{r6, r7, lr}
    466c:	0fcd      	lsrs	r5, r1, #31
    466e:	004e      	lsls	r6, r1, #1
    4670:	0a61      	lsrs	r1, r4, #9
    4672:	0f44      	lsrs	r4, r0, #29
    4674:	430c      	orrs	r4, r1
    4676:	00c1      	lsls	r1, r0, #3
    4678:	0058      	lsls	r0, r3, #1
    467a:	0d40      	lsrs	r0, r0, #21
    467c:	4684      	mov	ip, r0
    467e:	468a      	mov	sl, r1
    4680:	000f      	movs	r7, r1
    4682:	0319      	lsls	r1, r3, #12
    4684:	0f50      	lsrs	r0, r2, #29
    4686:	0a49      	lsrs	r1, r1, #9
    4688:	4301      	orrs	r1, r0
    468a:	48c6      	ldr	r0, [pc, #792]	; (49a4 <__aeabi_dsub+0x344>)
    468c:	0d76      	lsrs	r6, r6, #21
    468e:	46a8      	mov	r8, r5
    4690:	0fdb      	lsrs	r3, r3, #31
    4692:	00d2      	lsls	r2, r2, #3
    4694:	4584      	cmp	ip, r0
    4696:	d100      	bne.n	469a <__aeabi_dsub+0x3a>
    4698:	e0d8      	b.n	484c <__aeabi_dsub+0x1ec>
    469a:	2001      	movs	r0, #1
    469c:	4043      	eors	r3, r0
    469e:	42ab      	cmp	r3, r5
    46a0:	d100      	bne.n	46a4 <__aeabi_dsub+0x44>
    46a2:	e0a6      	b.n	47f2 <__aeabi_dsub+0x192>
    46a4:	4660      	mov	r0, ip
    46a6:	1a35      	subs	r5, r6, r0
    46a8:	2d00      	cmp	r5, #0
    46aa:	dc00      	bgt.n	46ae <__aeabi_dsub+0x4e>
    46ac:	e105      	b.n	48ba <__aeabi_dsub+0x25a>
    46ae:	2800      	cmp	r0, #0
    46b0:	d110      	bne.n	46d4 <__aeabi_dsub+0x74>
    46b2:	000b      	movs	r3, r1
    46b4:	4313      	orrs	r3, r2
    46b6:	d100      	bne.n	46ba <__aeabi_dsub+0x5a>
    46b8:	e0d7      	b.n	486a <__aeabi_dsub+0x20a>
    46ba:	1e6b      	subs	r3, r5, #1
    46bc:	2b00      	cmp	r3, #0
    46be:	d000      	beq.n	46c2 <__aeabi_dsub+0x62>
    46c0:	e14b      	b.n	495a <__aeabi_dsub+0x2fa>
    46c2:	4653      	mov	r3, sl
    46c4:	1a9f      	subs	r7, r3, r2
    46c6:	45ba      	cmp	sl, r7
    46c8:	4180      	sbcs	r0, r0
    46ca:	1a64      	subs	r4, r4, r1
    46cc:	4240      	negs	r0, r0
    46ce:	1a24      	subs	r4, r4, r0
    46d0:	2601      	movs	r6, #1
    46d2:	e01e      	b.n	4712 <__aeabi_dsub+0xb2>
    46d4:	4bb3      	ldr	r3, [pc, #716]	; (49a4 <__aeabi_dsub+0x344>)
    46d6:	429e      	cmp	r6, r3
    46d8:	d048      	beq.n	476c <__aeabi_dsub+0x10c>
    46da:	2380      	movs	r3, #128	; 0x80
    46dc:	041b      	lsls	r3, r3, #16
    46de:	4319      	orrs	r1, r3
    46e0:	2d38      	cmp	r5, #56	; 0x38
    46e2:	dd00      	ble.n	46e6 <__aeabi_dsub+0x86>
    46e4:	e119      	b.n	491a <__aeabi_dsub+0x2ba>
    46e6:	2d1f      	cmp	r5, #31
    46e8:	dd00      	ble.n	46ec <__aeabi_dsub+0x8c>
    46ea:	e14c      	b.n	4986 <__aeabi_dsub+0x326>
    46ec:	2320      	movs	r3, #32
    46ee:	000f      	movs	r7, r1
    46f0:	1b5b      	subs	r3, r3, r5
    46f2:	0010      	movs	r0, r2
    46f4:	409a      	lsls	r2, r3
    46f6:	409f      	lsls	r7, r3
    46f8:	40e8      	lsrs	r0, r5
    46fa:	1e53      	subs	r3, r2, #1
    46fc:	419a      	sbcs	r2, r3
    46fe:	40e9      	lsrs	r1, r5
    4700:	4307      	orrs	r7, r0
    4702:	4317      	orrs	r7, r2
    4704:	4653      	mov	r3, sl
    4706:	1bdf      	subs	r7, r3, r7
    4708:	1a61      	subs	r1, r4, r1
    470a:	45ba      	cmp	sl, r7
    470c:	41a4      	sbcs	r4, r4
    470e:	4264      	negs	r4, r4
    4710:	1b0c      	subs	r4, r1, r4
    4712:	0223      	lsls	r3, r4, #8
    4714:	d400      	bmi.n	4718 <__aeabi_dsub+0xb8>
    4716:	e0c5      	b.n	48a4 <__aeabi_dsub+0x244>
    4718:	0264      	lsls	r4, r4, #9
    471a:	0a65      	lsrs	r5, r4, #9
    471c:	2d00      	cmp	r5, #0
    471e:	d100      	bne.n	4722 <__aeabi_dsub+0xc2>
    4720:	e0f6      	b.n	4910 <__aeabi_dsub+0x2b0>
    4722:	0028      	movs	r0, r5
    4724:	f000 fbec 	bl	4f00 <__clzsi2>
    4728:	0003      	movs	r3, r0
    472a:	3b08      	subs	r3, #8
    472c:	2b1f      	cmp	r3, #31
    472e:	dd00      	ble.n	4732 <__aeabi_dsub+0xd2>
    4730:	e0e9      	b.n	4906 <__aeabi_dsub+0x2a6>
    4732:	2220      	movs	r2, #32
    4734:	003c      	movs	r4, r7
    4736:	1ad2      	subs	r2, r2, r3
    4738:	409d      	lsls	r5, r3
    473a:	40d4      	lsrs	r4, r2
    473c:	409f      	lsls	r7, r3
    473e:	4325      	orrs	r5, r4
    4740:	429e      	cmp	r6, r3
    4742:	dd00      	ble.n	4746 <__aeabi_dsub+0xe6>
    4744:	e0db      	b.n	48fe <__aeabi_dsub+0x29e>
    4746:	1b9e      	subs	r6, r3, r6
    4748:	1c73      	adds	r3, r6, #1
    474a:	2b1f      	cmp	r3, #31
    474c:	dd00      	ble.n	4750 <__aeabi_dsub+0xf0>
    474e:	e10a      	b.n	4966 <__aeabi_dsub+0x306>
    4750:	2220      	movs	r2, #32
    4752:	0038      	movs	r0, r7
    4754:	1ad2      	subs	r2, r2, r3
    4756:	0029      	movs	r1, r5
    4758:	4097      	lsls	r7, r2
    475a:	002c      	movs	r4, r5
    475c:	4091      	lsls	r1, r2
    475e:	40d8      	lsrs	r0, r3
    4760:	1e7a      	subs	r2, r7, #1
    4762:	4197      	sbcs	r7, r2
    4764:	40dc      	lsrs	r4, r3
    4766:	2600      	movs	r6, #0
    4768:	4301      	orrs	r1, r0
    476a:	430f      	orrs	r7, r1
    476c:	077b      	lsls	r3, r7, #29
    476e:	d009      	beq.n	4784 <__aeabi_dsub+0x124>
    4770:	230f      	movs	r3, #15
    4772:	403b      	ands	r3, r7
    4774:	2b04      	cmp	r3, #4
    4776:	d005      	beq.n	4784 <__aeabi_dsub+0x124>
    4778:	1d3b      	adds	r3, r7, #4
    477a:	42bb      	cmp	r3, r7
    477c:	41bf      	sbcs	r7, r7
    477e:	427f      	negs	r7, r7
    4780:	19e4      	adds	r4, r4, r7
    4782:	001f      	movs	r7, r3
    4784:	0223      	lsls	r3, r4, #8
    4786:	d525      	bpl.n	47d4 <__aeabi_dsub+0x174>
    4788:	4b86      	ldr	r3, [pc, #536]	; (49a4 <__aeabi_dsub+0x344>)
    478a:	3601      	adds	r6, #1
    478c:	429e      	cmp	r6, r3
    478e:	d100      	bne.n	4792 <__aeabi_dsub+0x132>
    4790:	e0af      	b.n	48f2 <__aeabi_dsub+0x292>
    4792:	4b85      	ldr	r3, [pc, #532]	; (49a8 <__aeabi_dsub+0x348>)
    4794:	2501      	movs	r5, #1
    4796:	401c      	ands	r4, r3
    4798:	4643      	mov	r3, r8
    479a:	0762      	lsls	r2, r4, #29
    479c:	08ff      	lsrs	r7, r7, #3
    479e:	0264      	lsls	r4, r4, #9
    47a0:	0576      	lsls	r6, r6, #21
    47a2:	4317      	orrs	r7, r2
    47a4:	0b24      	lsrs	r4, r4, #12
    47a6:	0d76      	lsrs	r6, r6, #21
    47a8:	401d      	ands	r5, r3
    47aa:	2100      	movs	r1, #0
    47ac:	0324      	lsls	r4, r4, #12
    47ae:	0b23      	lsrs	r3, r4, #12
    47b0:	0d0c      	lsrs	r4, r1, #20
    47b2:	4a7e      	ldr	r2, [pc, #504]	; (49ac <__aeabi_dsub+0x34c>)
    47b4:	0524      	lsls	r4, r4, #20
    47b6:	431c      	orrs	r4, r3
    47b8:	4014      	ands	r4, r2
    47ba:	0533      	lsls	r3, r6, #20
    47bc:	4323      	orrs	r3, r4
    47be:	005b      	lsls	r3, r3, #1
    47c0:	07ed      	lsls	r5, r5, #31
    47c2:	085b      	lsrs	r3, r3, #1
    47c4:	432b      	orrs	r3, r5
    47c6:	0038      	movs	r0, r7
    47c8:	0019      	movs	r1, r3
    47ca:	bc1c      	pop	{r2, r3, r4}
    47cc:	4690      	mov	r8, r2
    47ce:	4699      	mov	r9, r3
    47d0:	46a2      	mov	sl, r4
    47d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    47d4:	2501      	movs	r5, #1
    47d6:	4643      	mov	r3, r8
    47d8:	0762      	lsls	r2, r4, #29
    47da:	08ff      	lsrs	r7, r7, #3
    47dc:	4317      	orrs	r7, r2
    47de:	08e4      	lsrs	r4, r4, #3
    47e0:	401d      	ands	r5, r3
    47e2:	4b70      	ldr	r3, [pc, #448]	; (49a4 <__aeabi_dsub+0x344>)
    47e4:	429e      	cmp	r6, r3
    47e6:	d036      	beq.n	4856 <__aeabi_dsub+0x1f6>
    47e8:	0324      	lsls	r4, r4, #12
    47ea:	0576      	lsls	r6, r6, #21
    47ec:	0b24      	lsrs	r4, r4, #12
    47ee:	0d76      	lsrs	r6, r6, #21
    47f0:	e7db      	b.n	47aa <__aeabi_dsub+0x14a>
    47f2:	4663      	mov	r3, ip
    47f4:	1af3      	subs	r3, r6, r3
    47f6:	2b00      	cmp	r3, #0
    47f8:	dc00      	bgt.n	47fc <__aeabi_dsub+0x19c>
    47fa:	e094      	b.n	4926 <__aeabi_dsub+0x2c6>
    47fc:	4660      	mov	r0, ip
    47fe:	2800      	cmp	r0, #0
    4800:	d035      	beq.n	486e <__aeabi_dsub+0x20e>
    4802:	4868      	ldr	r0, [pc, #416]	; (49a4 <__aeabi_dsub+0x344>)
    4804:	4286      	cmp	r6, r0
    4806:	d0b1      	beq.n	476c <__aeabi_dsub+0x10c>
    4808:	2780      	movs	r7, #128	; 0x80
    480a:	043f      	lsls	r7, r7, #16
    480c:	4339      	orrs	r1, r7
    480e:	2b38      	cmp	r3, #56	; 0x38
    4810:	dc00      	bgt.n	4814 <__aeabi_dsub+0x1b4>
    4812:	e0fd      	b.n	4a10 <__aeabi_dsub+0x3b0>
    4814:	430a      	orrs	r2, r1
    4816:	0017      	movs	r7, r2
    4818:	2100      	movs	r1, #0
    481a:	1e7a      	subs	r2, r7, #1
    481c:	4197      	sbcs	r7, r2
    481e:	4457      	add	r7, sl
    4820:	4557      	cmp	r7, sl
    4822:	4180      	sbcs	r0, r0
    4824:	1909      	adds	r1, r1, r4
    4826:	4244      	negs	r4, r0
    4828:	190c      	adds	r4, r1, r4
    482a:	0223      	lsls	r3, r4, #8
    482c:	d53a      	bpl.n	48a4 <__aeabi_dsub+0x244>
    482e:	4b5d      	ldr	r3, [pc, #372]	; (49a4 <__aeabi_dsub+0x344>)
    4830:	3601      	adds	r6, #1
    4832:	429e      	cmp	r6, r3
    4834:	d100      	bne.n	4838 <__aeabi_dsub+0x1d8>
    4836:	e14b      	b.n	4ad0 <__aeabi_dsub+0x470>
    4838:	2201      	movs	r2, #1
    483a:	4b5b      	ldr	r3, [pc, #364]	; (49a8 <__aeabi_dsub+0x348>)
    483c:	401c      	ands	r4, r3
    483e:	087b      	lsrs	r3, r7, #1
    4840:	4017      	ands	r7, r2
    4842:	431f      	orrs	r7, r3
    4844:	07e2      	lsls	r2, r4, #31
    4846:	4317      	orrs	r7, r2
    4848:	0864      	lsrs	r4, r4, #1
    484a:	e78f      	b.n	476c <__aeabi_dsub+0x10c>
    484c:	0008      	movs	r0, r1
    484e:	4310      	orrs	r0, r2
    4850:	d000      	beq.n	4854 <__aeabi_dsub+0x1f4>
    4852:	e724      	b.n	469e <__aeabi_dsub+0x3e>
    4854:	e721      	b.n	469a <__aeabi_dsub+0x3a>
    4856:	0023      	movs	r3, r4
    4858:	433b      	orrs	r3, r7
    485a:	d100      	bne.n	485e <__aeabi_dsub+0x1fe>
    485c:	e1b9      	b.n	4bd2 <__aeabi_dsub+0x572>
    485e:	2280      	movs	r2, #128	; 0x80
    4860:	0312      	lsls	r2, r2, #12
    4862:	4314      	orrs	r4, r2
    4864:	0324      	lsls	r4, r4, #12
    4866:	0b24      	lsrs	r4, r4, #12
    4868:	e79f      	b.n	47aa <__aeabi_dsub+0x14a>
    486a:	002e      	movs	r6, r5
    486c:	e77e      	b.n	476c <__aeabi_dsub+0x10c>
    486e:	0008      	movs	r0, r1
    4870:	4310      	orrs	r0, r2
    4872:	d100      	bne.n	4876 <__aeabi_dsub+0x216>
    4874:	e0ca      	b.n	4a0c <__aeabi_dsub+0x3ac>
    4876:	1e58      	subs	r0, r3, #1
    4878:	4684      	mov	ip, r0
    487a:	2800      	cmp	r0, #0
    487c:	d000      	beq.n	4880 <__aeabi_dsub+0x220>
    487e:	e0e7      	b.n	4a50 <__aeabi_dsub+0x3f0>
    4880:	4452      	add	r2, sl
    4882:	4552      	cmp	r2, sl
    4884:	4180      	sbcs	r0, r0
    4886:	1864      	adds	r4, r4, r1
    4888:	4240      	negs	r0, r0
    488a:	1824      	adds	r4, r4, r0
    488c:	0017      	movs	r7, r2
    488e:	2601      	movs	r6, #1
    4890:	0223      	lsls	r3, r4, #8
    4892:	d507      	bpl.n	48a4 <__aeabi_dsub+0x244>
    4894:	2602      	movs	r6, #2
    4896:	e7cf      	b.n	4838 <__aeabi_dsub+0x1d8>
    4898:	4664      	mov	r4, ip
    489a:	432c      	orrs	r4, r5
    489c:	d100      	bne.n	48a0 <__aeabi_dsub+0x240>
    489e:	e1b3      	b.n	4c08 <__aeabi_dsub+0x5a8>
    48a0:	002c      	movs	r4, r5
    48a2:	4667      	mov	r7, ip
    48a4:	077b      	lsls	r3, r7, #29
    48a6:	d000      	beq.n	48aa <__aeabi_dsub+0x24a>
    48a8:	e762      	b.n	4770 <__aeabi_dsub+0x110>
    48aa:	0763      	lsls	r3, r4, #29
    48ac:	08ff      	lsrs	r7, r7, #3
    48ae:	431f      	orrs	r7, r3
    48b0:	2501      	movs	r5, #1
    48b2:	4643      	mov	r3, r8
    48b4:	08e4      	lsrs	r4, r4, #3
    48b6:	401d      	ands	r5, r3
    48b8:	e793      	b.n	47e2 <__aeabi_dsub+0x182>
    48ba:	2d00      	cmp	r5, #0
    48bc:	d178      	bne.n	49b0 <__aeabi_dsub+0x350>
    48be:	1c75      	adds	r5, r6, #1
    48c0:	056d      	lsls	r5, r5, #21
    48c2:	0d6d      	lsrs	r5, r5, #21
    48c4:	2d01      	cmp	r5, #1
    48c6:	dc00      	bgt.n	48ca <__aeabi_dsub+0x26a>
    48c8:	e0f2      	b.n	4ab0 <__aeabi_dsub+0x450>
    48ca:	4650      	mov	r0, sl
    48cc:	1a80      	subs	r0, r0, r2
    48ce:	4582      	cmp	sl, r0
    48d0:	41bf      	sbcs	r7, r7
    48d2:	1a65      	subs	r5, r4, r1
    48d4:	427f      	negs	r7, r7
    48d6:	1bed      	subs	r5, r5, r7
    48d8:	4684      	mov	ip, r0
    48da:	0228      	lsls	r0, r5, #8
    48dc:	d400      	bmi.n	48e0 <__aeabi_dsub+0x280>
    48de:	e08c      	b.n	49fa <__aeabi_dsub+0x39a>
    48e0:	4650      	mov	r0, sl
    48e2:	1a17      	subs	r7, r2, r0
    48e4:	42ba      	cmp	r2, r7
    48e6:	4192      	sbcs	r2, r2
    48e8:	1b0c      	subs	r4, r1, r4
    48ea:	4255      	negs	r5, r2
    48ec:	1b65      	subs	r5, r4, r5
    48ee:	4698      	mov	r8, r3
    48f0:	e714      	b.n	471c <__aeabi_dsub+0xbc>
    48f2:	2501      	movs	r5, #1
    48f4:	4643      	mov	r3, r8
    48f6:	2400      	movs	r4, #0
    48f8:	401d      	ands	r5, r3
    48fa:	2700      	movs	r7, #0
    48fc:	e755      	b.n	47aa <__aeabi_dsub+0x14a>
    48fe:	4c2a      	ldr	r4, [pc, #168]	; (49a8 <__aeabi_dsub+0x348>)
    4900:	1af6      	subs	r6, r6, r3
    4902:	402c      	ands	r4, r5
    4904:	e732      	b.n	476c <__aeabi_dsub+0x10c>
    4906:	003d      	movs	r5, r7
    4908:	3828      	subs	r0, #40	; 0x28
    490a:	4085      	lsls	r5, r0
    490c:	2700      	movs	r7, #0
    490e:	e717      	b.n	4740 <__aeabi_dsub+0xe0>
    4910:	0038      	movs	r0, r7
    4912:	f000 faf5 	bl	4f00 <__clzsi2>
    4916:	3020      	adds	r0, #32
    4918:	e706      	b.n	4728 <__aeabi_dsub+0xc8>
    491a:	430a      	orrs	r2, r1
    491c:	0017      	movs	r7, r2
    491e:	2100      	movs	r1, #0
    4920:	1e7a      	subs	r2, r7, #1
    4922:	4197      	sbcs	r7, r2
    4924:	e6ee      	b.n	4704 <__aeabi_dsub+0xa4>
    4926:	2b00      	cmp	r3, #0
    4928:	d000      	beq.n	492c <__aeabi_dsub+0x2cc>
    492a:	e0e5      	b.n	4af8 <__aeabi_dsub+0x498>
    492c:	1c73      	adds	r3, r6, #1
    492e:	469c      	mov	ip, r3
    4930:	055b      	lsls	r3, r3, #21
    4932:	0d5b      	lsrs	r3, r3, #21
    4934:	2b01      	cmp	r3, #1
    4936:	dc00      	bgt.n	493a <__aeabi_dsub+0x2da>
    4938:	e09f      	b.n	4a7a <__aeabi_dsub+0x41a>
    493a:	4b1a      	ldr	r3, [pc, #104]	; (49a4 <__aeabi_dsub+0x344>)
    493c:	459c      	cmp	ip, r3
    493e:	d100      	bne.n	4942 <__aeabi_dsub+0x2e2>
    4940:	e0c5      	b.n	4ace <__aeabi_dsub+0x46e>
    4942:	4452      	add	r2, sl
    4944:	4552      	cmp	r2, sl
    4946:	4180      	sbcs	r0, r0
    4948:	1864      	adds	r4, r4, r1
    494a:	4240      	negs	r0, r0
    494c:	1824      	adds	r4, r4, r0
    494e:	07e7      	lsls	r7, r4, #31
    4950:	0852      	lsrs	r2, r2, #1
    4952:	4317      	orrs	r7, r2
    4954:	0864      	lsrs	r4, r4, #1
    4956:	4666      	mov	r6, ip
    4958:	e708      	b.n	476c <__aeabi_dsub+0x10c>
    495a:	4812      	ldr	r0, [pc, #72]	; (49a4 <__aeabi_dsub+0x344>)
    495c:	4285      	cmp	r5, r0
    495e:	d100      	bne.n	4962 <__aeabi_dsub+0x302>
    4960:	e085      	b.n	4a6e <__aeabi_dsub+0x40e>
    4962:	001d      	movs	r5, r3
    4964:	e6bc      	b.n	46e0 <__aeabi_dsub+0x80>
    4966:	0029      	movs	r1, r5
    4968:	3e1f      	subs	r6, #31
    496a:	40f1      	lsrs	r1, r6
    496c:	2b20      	cmp	r3, #32
    496e:	d100      	bne.n	4972 <__aeabi_dsub+0x312>
    4970:	e07f      	b.n	4a72 <__aeabi_dsub+0x412>
    4972:	2240      	movs	r2, #64	; 0x40
    4974:	1ad3      	subs	r3, r2, r3
    4976:	409d      	lsls	r5, r3
    4978:	432f      	orrs	r7, r5
    497a:	1e7d      	subs	r5, r7, #1
    497c:	41af      	sbcs	r7, r5
    497e:	2400      	movs	r4, #0
    4980:	430f      	orrs	r7, r1
    4982:	2600      	movs	r6, #0
    4984:	e78e      	b.n	48a4 <__aeabi_dsub+0x244>
    4986:	002b      	movs	r3, r5
    4988:	000f      	movs	r7, r1
    498a:	3b20      	subs	r3, #32
    498c:	40df      	lsrs	r7, r3
    498e:	2d20      	cmp	r5, #32
    4990:	d071      	beq.n	4a76 <__aeabi_dsub+0x416>
    4992:	2340      	movs	r3, #64	; 0x40
    4994:	1b5d      	subs	r5, r3, r5
    4996:	40a9      	lsls	r1, r5
    4998:	430a      	orrs	r2, r1
    499a:	1e51      	subs	r1, r2, #1
    499c:	418a      	sbcs	r2, r1
    499e:	2100      	movs	r1, #0
    49a0:	4317      	orrs	r7, r2
    49a2:	e6af      	b.n	4704 <__aeabi_dsub+0xa4>
    49a4:	000007ff 	.word	0x000007ff
    49a8:	ff7fffff 	.word	0xff7fffff
    49ac:	800fffff 	.word	0x800fffff
    49b0:	2e00      	cmp	r6, #0
    49b2:	d03e      	beq.n	4a32 <__aeabi_dsub+0x3d2>
    49b4:	4eb3      	ldr	r6, [pc, #716]	; (4c84 <__aeabi_dsub+0x624>)
    49b6:	45b4      	cmp	ip, r6
    49b8:	d045      	beq.n	4a46 <__aeabi_dsub+0x3e6>
    49ba:	2680      	movs	r6, #128	; 0x80
    49bc:	0436      	lsls	r6, r6, #16
    49be:	426d      	negs	r5, r5
    49c0:	4334      	orrs	r4, r6
    49c2:	2d38      	cmp	r5, #56	; 0x38
    49c4:	dd00      	ble.n	49c8 <__aeabi_dsub+0x368>
    49c6:	e0a8      	b.n	4b1a <__aeabi_dsub+0x4ba>
    49c8:	2d1f      	cmp	r5, #31
    49ca:	dd00      	ble.n	49ce <__aeabi_dsub+0x36e>
    49cc:	e11f      	b.n	4c0e <__aeabi_dsub+0x5ae>
    49ce:	2620      	movs	r6, #32
    49d0:	0027      	movs	r7, r4
    49d2:	4650      	mov	r0, sl
    49d4:	1b76      	subs	r6, r6, r5
    49d6:	40b7      	lsls	r7, r6
    49d8:	40e8      	lsrs	r0, r5
    49da:	4307      	orrs	r7, r0
    49dc:	4650      	mov	r0, sl
    49de:	40b0      	lsls	r0, r6
    49e0:	1e46      	subs	r6, r0, #1
    49e2:	41b0      	sbcs	r0, r6
    49e4:	40ec      	lsrs	r4, r5
    49e6:	4338      	orrs	r0, r7
    49e8:	1a17      	subs	r7, r2, r0
    49ea:	42ba      	cmp	r2, r7
    49ec:	4192      	sbcs	r2, r2
    49ee:	1b0c      	subs	r4, r1, r4
    49f0:	4252      	negs	r2, r2
    49f2:	1aa4      	subs	r4, r4, r2
    49f4:	4666      	mov	r6, ip
    49f6:	4698      	mov	r8, r3
    49f8:	e68b      	b.n	4712 <__aeabi_dsub+0xb2>
    49fa:	4664      	mov	r4, ip
    49fc:	4667      	mov	r7, ip
    49fe:	432c      	orrs	r4, r5
    4a00:	d000      	beq.n	4a04 <__aeabi_dsub+0x3a4>
    4a02:	e68b      	b.n	471c <__aeabi_dsub+0xbc>
    4a04:	2500      	movs	r5, #0
    4a06:	2600      	movs	r6, #0
    4a08:	2700      	movs	r7, #0
    4a0a:	e6ea      	b.n	47e2 <__aeabi_dsub+0x182>
    4a0c:	001e      	movs	r6, r3
    4a0e:	e6ad      	b.n	476c <__aeabi_dsub+0x10c>
    4a10:	2b1f      	cmp	r3, #31
    4a12:	dc60      	bgt.n	4ad6 <__aeabi_dsub+0x476>
    4a14:	2720      	movs	r7, #32
    4a16:	1af8      	subs	r0, r7, r3
    4a18:	000f      	movs	r7, r1
    4a1a:	4684      	mov	ip, r0
    4a1c:	4087      	lsls	r7, r0
    4a1e:	0010      	movs	r0, r2
    4a20:	40d8      	lsrs	r0, r3
    4a22:	4307      	orrs	r7, r0
    4a24:	4660      	mov	r0, ip
    4a26:	4082      	lsls	r2, r0
    4a28:	1e50      	subs	r0, r2, #1
    4a2a:	4182      	sbcs	r2, r0
    4a2c:	40d9      	lsrs	r1, r3
    4a2e:	4317      	orrs	r7, r2
    4a30:	e6f5      	b.n	481e <__aeabi_dsub+0x1be>
    4a32:	0026      	movs	r6, r4
    4a34:	4650      	mov	r0, sl
    4a36:	4306      	orrs	r6, r0
    4a38:	d005      	beq.n	4a46 <__aeabi_dsub+0x3e6>
    4a3a:	43ed      	mvns	r5, r5
    4a3c:	2d00      	cmp	r5, #0
    4a3e:	d0d3      	beq.n	49e8 <__aeabi_dsub+0x388>
    4a40:	4e90      	ldr	r6, [pc, #576]	; (4c84 <__aeabi_dsub+0x624>)
    4a42:	45b4      	cmp	ip, r6
    4a44:	d1bd      	bne.n	49c2 <__aeabi_dsub+0x362>
    4a46:	000c      	movs	r4, r1
    4a48:	0017      	movs	r7, r2
    4a4a:	4666      	mov	r6, ip
    4a4c:	4698      	mov	r8, r3
    4a4e:	e68d      	b.n	476c <__aeabi_dsub+0x10c>
    4a50:	488c      	ldr	r0, [pc, #560]	; (4c84 <__aeabi_dsub+0x624>)
    4a52:	4283      	cmp	r3, r0
    4a54:	d00b      	beq.n	4a6e <__aeabi_dsub+0x40e>
    4a56:	4663      	mov	r3, ip
    4a58:	e6d9      	b.n	480e <__aeabi_dsub+0x1ae>
    4a5a:	2d00      	cmp	r5, #0
    4a5c:	d000      	beq.n	4a60 <__aeabi_dsub+0x400>
    4a5e:	e096      	b.n	4b8e <__aeabi_dsub+0x52e>
    4a60:	0008      	movs	r0, r1
    4a62:	4310      	orrs	r0, r2
    4a64:	d100      	bne.n	4a68 <__aeabi_dsub+0x408>
    4a66:	e0e2      	b.n	4c2e <__aeabi_dsub+0x5ce>
    4a68:	000c      	movs	r4, r1
    4a6a:	0017      	movs	r7, r2
    4a6c:	4698      	mov	r8, r3
    4a6e:	4e85      	ldr	r6, [pc, #532]	; (4c84 <__aeabi_dsub+0x624>)
    4a70:	e67c      	b.n	476c <__aeabi_dsub+0x10c>
    4a72:	2500      	movs	r5, #0
    4a74:	e780      	b.n	4978 <__aeabi_dsub+0x318>
    4a76:	2100      	movs	r1, #0
    4a78:	e78e      	b.n	4998 <__aeabi_dsub+0x338>
    4a7a:	0023      	movs	r3, r4
    4a7c:	4650      	mov	r0, sl
    4a7e:	4303      	orrs	r3, r0
    4a80:	2e00      	cmp	r6, #0
    4a82:	d000      	beq.n	4a86 <__aeabi_dsub+0x426>
    4a84:	e0a8      	b.n	4bd8 <__aeabi_dsub+0x578>
    4a86:	2b00      	cmp	r3, #0
    4a88:	d100      	bne.n	4a8c <__aeabi_dsub+0x42c>
    4a8a:	e0de      	b.n	4c4a <__aeabi_dsub+0x5ea>
    4a8c:	000b      	movs	r3, r1
    4a8e:	4313      	orrs	r3, r2
    4a90:	d100      	bne.n	4a94 <__aeabi_dsub+0x434>
    4a92:	e66b      	b.n	476c <__aeabi_dsub+0x10c>
    4a94:	4452      	add	r2, sl
    4a96:	4552      	cmp	r2, sl
    4a98:	4180      	sbcs	r0, r0
    4a9a:	1864      	adds	r4, r4, r1
    4a9c:	4240      	negs	r0, r0
    4a9e:	1824      	adds	r4, r4, r0
    4aa0:	0017      	movs	r7, r2
    4aa2:	0223      	lsls	r3, r4, #8
    4aa4:	d400      	bmi.n	4aa8 <__aeabi_dsub+0x448>
    4aa6:	e6fd      	b.n	48a4 <__aeabi_dsub+0x244>
    4aa8:	4b77      	ldr	r3, [pc, #476]	; (4c88 <__aeabi_dsub+0x628>)
    4aaa:	4666      	mov	r6, ip
    4aac:	401c      	ands	r4, r3
    4aae:	e65d      	b.n	476c <__aeabi_dsub+0x10c>
    4ab0:	0025      	movs	r5, r4
    4ab2:	4650      	mov	r0, sl
    4ab4:	4305      	orrs	r5, r0
    4ab6:	2e00      	cmp	r6, #0
    4ab8:	d1cf      	bne.n	4a5a <__aeabi_dsub+0x3fa>
    4aba:	2d00      	cmp	r5, #0
    4abc:	d14f      	bne.n	4b5e <__aeabi_dsub+0x4fe>
    4abe:	000c      	movs	r4, r1
    4ac0:	4314      	orrs	r4, r2
    4ac2:	d100      	bne.n	4ac6 <__aeabi_dsub+0x466>
    4ac4:	e0a0      	b.n	4c08 <__aeabi_dsub+0x5a8>
    4ac6:	000c      	movs	r4, r1
    4ac8:	0017      	movs	r7, r2
    4aca:	4698      	mov	r8, r3
    4acc:	e64e      	b.n	476c <__aeabi_dsub+0x10c>
    4ace:	4666      	mov	r6, ip
    4ad0:	2400      	movs	r4, #0
    4ad2:	2700      	movs	r7, #0
    4ad4:	e685      	b.n	47e2 <__aeabi_dsub+0x182>
    4ad6:	001f      	movs	r7, r3
    4ad8:	0008      	movs	r0, r1
    4ada:	3f20      	subs	r7, #32
    4adc:	40f8      	lsrs	r0, r7
    4ade:	0007      	movs	r7, r0
    4ae0:	2b20      	cmp	r3, #32
    4ae2:	d100      	bne.n	4ae6 <__aeabi_dsub+0x486>
    4ae4:	e08e      	b.n	4c04 <__aeabi_dsub+0x5a4>
    4ae6:	2040      	movs	r0, #64	; 0x40
    4ae8:	1ac3      	subs	r3, r0, r3
    4aea:	4099      	lsls	r1, r3
    4aec:	430a      	orrs	r2, r1
    4aee:	1e51      	subs	r1, r2, #1
    4af0:	418a      	sbcs	r2, r1
    4af2:	2100      	movs	r1, #0
    4af4:	4317      	orrs	r7, r2
    4af6:	e692      	b.n	481e <__aeabi_dsub+0x1be>
    4af8:	2e00      	cmp	r6, #0
    4afa:	d114      	bne.n	4b26 <__aeabi_dsub+0x4c6>
    4afc:	0026      	movs	r6, r4
    4afe:	4650      	mov	r0, sl
    4b00:	4306      	orrs	r6, r0
    4b02:	d062      	beq.n	4bca <__aeabi_dsub+0x56a>
    4b04:	43db      	mvns	r3, r3
    4b06:	2b00      	cmp	r3, #0
    4b08:	d15c      	bne.n	4bc4 <__aeabi_dsub+0x564>
    4b0a:	1887      	adds	r7, r0, r2
    4b0c:	4297      	cmp	r7, r2
    4b0e:	4192      	sbcs	r2, r2
    4b10:	1864      	adds	r4, r4, r1
    4b12:	4252      	negs	r2, r2
    4b14:	18a4      	adds	r4, r4, r2
    4b16:	4666      	mov	r6, ip
    4b18:	e687      	b.n	482a <__aeabi_dsub+0x1ca>
    4b1a:	4650      	mov	r0, sl
    4b1c:	4320      	orrs	r0, r4
    4b1e:	1e44      	subs	r4, r0, #1
    4b20:	41a0      	sbcs	r0, r4
    4b22:	2400      	movs	r4, #0
    4b24:	e760      	b.n	49e8 <__aeabi_dsub+0x388>
    4b26:	4e57      	ldr	r6, [pc, #348]	; (4c84 <__aeabi_dsub+0x624>)
    4b28:	45b4      	cmp	ip, r6
    4b2a:	d04e      	beq.n	4bca <__aeabi_dsub+0x56a>
    4b2c:	2680      	movs	r6, #128	; 0x80
    4b2e:	0436      	lsls	r6, r6, #16
    4b30:	425b      	negs	r3, r3
    4b32:	4334      	orrs	r4, r6
    4b34:	2b38      	cmp	r3, #56	; 0x38
    4b36:	dd00      	ble.n	4b3a <__aeabi_dsub+0x4da>
    4b38:	e07f      	b.n	4c3a <__aeabi_dsub+0x5da>
    4b3a:	2b1f      	cmp	r3, #31
    4b3c:	dd00      	ble.n	4b40 <__aeabi_dsub+0x4e0>
    4b3e:	e08b      	b.n	4c58 <__aeabi_dsub+0x5f8>
    4b40:	2620      	movs	r6, #32
    4b42:	0027      	movs	r7, r4
    4b44:	4650      	mov	r0, sl
    4b46:	1af6      	subs	r6, r6, r3
    4b48:	40b7      	lsls	r7, r6
    4b4a:	40d8      	lsrs	r0, r3
    4b4c:	4307      	orrs	r7, r0
    4b4e:	4650      	mov	r0, sl
    4b50:	40b0      	lsls	r0, r6
    4b52:	1e46      	subs	r6, r0, #1
    4b54:	41b0      	sbcs	r0, r6
    4b56:	4307      	orrs	r7, r0
    4b58:	40dc      	lsrs	r4, r3
    4b5a:	18bf      	adds	r7, r7, r2
    4b5c:	e7d6      	b.n	4b0c <__aeabi_dsub+0x4ac>
    4b5e:	000d      	movs	r5, r1
    4b60:	4315      	orrs	r5, r2
    4b62:	d100      	bne.n	4b66 <__aeabi_dsub+0x506>
    4b64:	e602      	b.n	476c <__aeabi_dsub+0x10c>
    4b66:	4650      	mov	r0, sl
    4b68:	1a80      	subs	r0, r0, r2
    4b6a:	4582      	cmp	sl, r0
    4b6c:	41bf      	sbcs	r7, r7
    4b6e:	1a65      	subs	r5, r4, r1
    4b70:	427f      	negs	r7, r7
    4b72:	1bed      	subs	r5, r5, r7
    4b74:	4684      	mov	ip, r0
    4b76:	0228      	lsls	r0, r5, #8
    4b78:	d400      	bmi.n	4b7c <__aeabi_dsub+0x51c>
    4b7a:	e68d      	b.n	4898 <__aeabi_dsub+0x238>
    4b7c:	4650      	mov	r0, sl
    4b7e:	1a17      	subs	r7, r2, r0
    4b80:	42ba      	cmp	r2, r7
    4b82:	4192      	sbcs	r2, r2
    4b84:	1b0c      	subs	r4, r1, r4
    4b86:	4252      	negs	r2, r2
    4b88:	1aa4      	subs	r4, r4, r2
    4b8a:	4698      	mov	r8, r3
    4b8c:	e5ee      	b.n	476c <__aeabi_dsub+0x10c>
    4b8e:	000d      	movs	r5, r1
    4b90:	4315      	orrs	r5, r2
    4b92:	d100      	bne.n	4b96 <__aeabi_dsub+0x536>
    4b94:	e76b      	b.n	4a6e <__aeabi_dsub+0x40e>
    4b96:	4650      	mov	r0, sl
    4b98:	0767      	lsls	r7, r4, #29
    4b9a:	08c0      	lsrs	r0, r0, #3
    4b9c:	4307      	orrs	r7, r0
    4b9e:	2080      	movs	r0, #128	; 0x80
    4ba0:	08e4      	lsrs	r4, r4, #3
    4ba2:	0300      	lsls	r0, r0, #12
    4ba4:	4204      	tst	r4, r0
    4ba6:	d007      	beq.n	4bb8 <__aeabi_dsub+0x558>
    4ba8:	08cd      	lsrs	r5, r1, #3
    4baa:	4205      	tst	r5, r0
    4bac:	d104      	bne.n	4bb8 <__aeabi_dsub+0x558>
    4bae:	002c      	movs	r4, r5
    4bb0:	4698      	mov	r8, r3
    4bb2:	08d7      	lsrs	r7, r2, #3
    4bb4:	0749      	lsls	r1, r1, #29
    4bb6:	430f      	orrs	r7, r1
    4bb8:	0f7b      	lsrs	r3, r7, #29
    4bba:	00e4      	lsls	r4, r4, #3
    4bbc:	431c      	orrs	r4, r3
    4bbe:	00ff      	lsls	r7, r7, #3
    4bc0:	4e30      	ldr	r6, [pc, #192]	; (4c84 <__aeabi_dsub+0x624>)
    4bc2:	e5d3      	b.n	476c <__aeabi_dsub+0x10c>
    4bc4:	4e2f      	ldr	r6, [pc, #188]	; (4c84 <__aeabi_dsub+0x624>)
    4bc6:	45b4      	cmp	ip, r6
    4bc8:	d1b4      	bne.n	4b34 <__aeabi_dsub+0x4d4>
    4bca:	000c      	movs	r4, r1
    4bcc:	0017      	movs	r7, r2
    4bce:	4666      	mov	r6, ip
    4bd0:	e5cc      	b.n	476c <__aeabi_dsub+0x10c>
    4bd2:	2700      	movs	r7, #0
    4bd4:	2400      	movs	r4, #0
    4bd6:	e5e8      	b.n	47aa <__aeabi_dsub+0x14a>
    4bd8:	2b00      	cmp	r3, #0
    4bda:	d039      	beq.n	4c50 <__aeabi_dsub+0x5f0>
    4bdc:	000b      	movs	r3, r1
    4bde:	4313      	orrs	r3, r2
    4be0:	d100      	bne.n	4be4 <__aeabi_dsub+0x584>
    4be2:	e744      	b.n	4a6e <__aeabi_dsub+0x40e>
    4be4:	08c0      	lsrs	r0, r0, #3
    4be6:	0767      	lsls	r7, r4, #29
    4be8:	4307      	orrs	r7, r0
    4bea:	2080      	movs	r0, #128	; 0x80
    4bec:	08e4      	lsrs	r4, r4, #3
    4bee:	0300      	lsls	r0, r0, #12
    4bf0:	4204      	tst	r4, r0
    4bf2:	d0e1      	beq.n	4bb8 <__aeabi_dsub+0x558>
    4bf4:	08cb      	lsrs	r3, r1, #3
    4bf6:	4203      	tst	r3, r0
    4bf8:	d1de      	bne.n	4bb8 <__aeabi_dsub+0x558>
    4bfa:	08d7      	lsrs	r7, r2, #3
    4bfc:	0749      	lsls	r1, r1, #29
    4bfe:	430f      	orrs	r7, r1
    4c00:	001c      	movs	r4, r3
    4c02:	e7d9      	b.n	4bb8 <__aeabi_dsub+0x558>
    4c04:	2100      	movs	r1, #0
    4c06:	e771      	b.n	4aec <__aeabi_dsub+0x48c>
    4c08:	2500      	movs	r5, #0
    4c0a:	2700      	movs	r7, #0
    4c0c:	e5e9      	b.n	47e2 <__aeabi_dsub+0x182>
    4c0e:	002e      	movs	r6, r5
    4c10:	0027      	movs	r7, r4
    4c12:	3e20      	subs	r6, #32
    4c14:	40f7      	lsrs	r7, r6
    4c16:	2d20      	cmp	r5, #32
    4c18:	d02f      	beq.n	4c7a <__aeabi_dsub+0x61a>
    4c1a:	2640      	movs	r6, #64	; 0x40
    4c1c:	1b75      	subs	r5, r6, r5
    4c1e:	40ac      	lsls	r4, r5
    4c20:	4650      	mov	r0, sl
    4c22:	4320      	orrs	r0, r4
    4c24:	1e44      	subs	r4, r0, #1
    4c26:	41a0      	sbcs	r0, r4
    4c28:	2400      	movs	r4, #0
    4c2a:	4338      	orrs	r0, r7
    4c2c:	e6dc      	b.n	49e8 <__aeabi_dsub+0x388>
    4c2e:	2480      	movs	r4, #128	; 0x80
    4c30:	2500      	movs	r5, #0
    4c32:	0324      	lsls	r4, r4, #12
    4c34:	4e13      	ldr	r6, [pc, #76]	; (4c84 <__aeabi_dsub+0x624>)
    4c36:	2700      	movs	r7, #0
    4c38:	e5d3      	b.n	47e2 <__aeabi_dsub+0x182>
    4c3a:	4650      	mov	r0, sl
    4c3c:	4320      	orrs	r0, r4
    4c3e:	0007      	movs	r7, r0
    4c40:	1e78      	subs	r0, r7, #1
    4c42:	4187      	sbcs	r7, r0
    4c44:	2400      	movs	r4, #0
    4c46:	18bf      	adds	r7, r7, r2
    4c48:	e760      	b.n	4b0c <__aeabi_dsub+0x4ac>
    4c4a:	000c      	movs	r4, r1
    4c4c:	0017      	movs	r7, r2
    4c4e:	e58d      	b.n	476c <__aeabi_dsub+0x10c>
    4c50:	000c      	movs	r4, r1
    4c52:	0017      	movs	r7, r2
    4c54:	4e0b      	ldr	r6, [pc, #44]	; (4c84 <__aeabi_dsub+0x624>)
    4c56:	e589      	b.n	476c <__aeabi_dsub+0x10c>
    4c58:	001e      	movs	r6, r3
    4c5a:	0027      	movs	r7, r4
    4c5c:	3e20      	subs	r6, #32
    4c5e:	40f7      	lsrs	r7, r6
    4c60:	2b20      	cmp	r3, #32
    4c62:	d00c      	beq.n	4c7e <__aeabi_dsub+0x61e>
    4c64:	2640      	movs	r6, #64	; 0x40
    4c66:	1af3      	subs	r3, r6, r3
    4c68:	409c      	lsls	r4, r3
    4c6a:	4650      	mov	r0, sl
    4c6c:	4320      	orrs	r0, r4
    4c6e:	1e44      	subs	r4, r0, #1
    4c70:	41a0      	sbcs	r0, r4
    4c72:	4307      	orrs	r7, r0
    4c74:	2400      	movs	r4, #0
    4c76:	18bf      	adds	r7, r7, r2
    4c78:	e748      	b.n	4b0c <__aeabi_dsub+0x4ac>
    4c7a:	2400      	movs	r4, #0
    4c7c:	e7d0      	b.n	4c20 <__aeabi_dsub+0x5c0>
    4c7e:	2400      	movs	r4, #0
    4c80:	e7f3      	b.n	4c6a <__aeabi_dsub+0x60a>
    4c82:	46c0      	nop			; (mov r8, r8)
    4c84:	000007ff 	.word	0x000007ff
    4c88:	ff7fffff 	.word	0xff7fffff

00004c8c <__aeabi_d2iz>:
    4c8c:	b530      	push	{r4, r5, lr}
    4c8e:	4d13      	ldr	r5, [pc, #76]	; (4cdc <__aeabi_d2iz+0x50>)
    4c90:	030a      	lsls	r2, r1, #12
    4c92:	004b      	lsls	r3, r1, #1
    4c94:	0b12      	lsrs	r2, r2, #12
    4c96:	0d5b      	lsrs	r3, r3, #21
    4c98:	0fc9      	lsrs	r1, r1, #31
    4c9a:	2400      	movs	r4, #0
    4c9c:	42ab      	cmp	r3, r5
    4c9e:	dd10      	ble.n	4cc2 <__aeabi_d2iz+0x36>
    4ca0:	4c0f      	ldr	r4, [pc, #60]	; (4ce0 <__aeabi_d2iz+0x54>)
    4ca2:	42a3      	cmp	r3, r4
    4ca4:	dc0f      	bgt.n	4cc6 <__aeabi_d2iz+0x3a>
    4ca6:	2480      	movs	r4, #128	; 0x80
    4ca8:	4d0e      	ldr	r5, [pc, #56]	; (4ce4 <__aeabi_d2iz+0x58>)
    4caa:	0364      	lsls	r4, r4, #13
    4cac:	4322      	orrs	r2, r4
    4cae:	1aed      	subs	r5, r5, r3
    4cb0:	2d1f      	cmp	r5, #31
    4cb2:	dd0b      	ble.n	4ccc <__aeabi_d2iz+0x40>
    4cb4:	480c      	ldr	r0, [pc, #48]	; (4ce8 <__aeabi_d2iz+0x5c>)
    4cb6:	1ac3      	subs	r3, r0, r3
    4cb8:	40da      	lsrs	r2, r3
    4cba:	4254      	negs	r4, r2
    4cbc:	2900      	cmp	r1, #0
    4cbe:	d100      	bne.n	4cc2 <__aeabi_d2iz+0x36>
    4cc0:	0014      	movs	r4, r2
    4cc2:	0020      	movs	r0, r4
    4cc4:	bd30      	pop	{r4, r5, pc}
    4cc6:	4b09      	ldr	r3, [pc, #36]	; (4cec <__aeabi_d2iz+0x60>)
    4cc8:	18cc      	adds	r4, r1, r3
    4cca:	e7fa      	b.n	4cc2 <__aeabi_d2iz+0x36>
    4ccc:	4c08      	ldr	r4, [pc, #32]	; (4cf0 <__aeabi_d2iz+0x64>)
    4cce:	40e8      	lsrs	r0, r5
    4cd0:	46a4      	mov	ip, r4
    4cd2:	4463      	add	r3, ip
    4cd4:	409a      	lsls	r2, r3
    4cd6:	4302      	orrs	r2, r0
    4cd8:	e7ef      	b.n	4cba <__aeabi_d2iz+0x2e>
    4cda:	46c0      	nop			; (mov r8, r8)
    4cdc:	000003fe 	.word	0x000003fe
    4ce0:	0000041d 	.word	0x0000041d
    4ce4:	00000433 	.word	0x00000433
    4ce8:	00000413 	.word	0x00000413
    4cec:	7fffffff 	.word	0x7fffffff
    4cf0:	fffffbed 	.word	0xfffffbed

00004cf4 <__aeabi_i2d>:
    4cf4:	b570      	push	{r4, r5, r6, lr}
    4cf6:	2800      	cmp	r0, #0
    4cf8:	d030      	beq.n	4d5c <__aeabi_i2d+0x68>
    4cfa:	17c3      	asrs	r3, r0, #31
    4cfc:	18c4      	adds	r4, r0, r3
    4cfe:	405c      	eors	r4, r3
    4d00:	0fc5      	lsrs	r5, r0, #31
    4d02:	0020      	movs	r0, r4
    4d04:	f000 f8fc 	bl	4f00 <__clzsi2>
    4d08:	4b17      	ldr	r3, [pc, #92]	; (4d68 <__aeabi_i2d+0x74>)
    4d0a:	4a18      	ldr	r2, [pc, #96]	; (4d6c <__aeabi_i2d+0x78>)
    4d0c:	1a1b      	subs	r3, r3, r0
    4d0e:	1ad2      	subs	r2, r2, r3
    4d10:	2a1f      	cmp	r2, #31
    4d12:	dd18      	ble.n	4d46 <__aeabi_i2d+0x52>
    4d14:	4a16      	ldr	r2, [pc, #88]	; (4d70 <__aeabi_i2d+0x7c>)
    4d16:	1ad2      	subs	r2, r2, r3
    4d18:	4094      	lsls	r4, r2
    4d1a:	2200      	movs	r2, #0
    4d1c:	0324      	lsls	r4, r4, #12
    4d1e:	055b      	lsls	r3, r3, #21
    4d20:	0b24      	lsrs	r4, r4, #12
    4d22:	0d5b      	lsrs	r3, r3, #21
    4d24:	2100      	movs	r1, #0
    4d26:	0010      	movs	r0, r2
    4d28:	0324      	lsls	r4, r4, #12
    4d2a:	0d0a      	lsrs	r2, r1, #20
    4d2c:	0b24      	lsrs	r4, r4, #12
    4d2e:	0512      	lsls	r2, r2, #20
    4d30:	4322      	orrs	r2, r4
    4d32:	4c10      	ldr	r4, [pc, #64]	; (4d74 <__aeabi_i2d+0x80>)
    4d34:	051b      	lsls	r3, r3, #20
    4d36:	4022      	ands	r2, r4
    4d38:	4313      	orrs	r3, r2
    4d3a:	005b      	lsls	r3, r3, #1
    4d3c:	07ed      	lsls	r5, r5, #31
    4d3e:	085b      	lsrs	r3, r3, #1
    4d40:	432b      	orrs	r3, r5
    4d42:	0019      	movs	r1, r3
    4d44:	bd70      	pop	{r4, r5, r6, pc}
    4d46:	0021      	movs	r1, r4
    4d48:	4091      	lsls	r1, r2
    4d4a:	000a      	movs	r2, r1
    4d4c:	210b      	movs	r1, #11
    4d4e:	1a08      	subs	r0, r1, r0
    4d50:	40c4      	lsrs	r4, r0
    4d52:	055b      	lsls	r3, r3, #21
    4d54:	0324      	lsls	r4, r4, #12
    4d56:	0b24      	lsrs	r4, r4, #12
    4d58:	0d5b      	lsrs	r3, r3, #21
    4d5a:	e7e3      	b.n	4d24 <__aeabi_i2d+0x30>
    4d5c:	2500      	movs	r5, #0
    4d5e:	2300      	movs	r3, #0
    4d60:	2400      	movs	r4, #0
    4d62:	2200      	movs	r2, #0
    4d64:	e7de      	b.n	4d24 <__aeabi_i2d+0x30>
    4d66:	46c0      	nop			; (mov r8, r8)
    4d68:	0000041e 	.word	0x0000041e
    4d6c:	00000433 	.word	0x00000433
    4d70:	00000413 	.word	0x00000413
    4d74:	800fffff 	.word	0x800fffff

00004d78 <__aeabi_ui2d>:
    4d78:	b510      	push	{r4, lr}
    4d7a:	1e04      	subs	r4, r0, #0
    4d7c:	d028      	beq.n	4dd0 <__aeabi_ui2d+0x58>
    4d7e:	f000 f8bf 	bl	4f00 <__clzsi2>
    4d82:	4b15      	ldr	r3, [pc, #84]	; (4dd8 <__aeabi_ui2d+0x60>)
    4d84:	4a15      	ldr	r2, [pc, #84]	; (4ddc <__aeabi_ui2d+0x64>)
    4d86:	1a1b      	subs	r3, r3, r0
    4d88:	1ad2      	subs	r2, r2, r3
    4d8a:	2a1f      	cmp	r2, #31
    4d8c:	dd15      	ble.n	4dba <__aeabi_ui2d+0x42>
    4d8e:	4a14      	ldr	r2, [pc, #80]	; (4de0 <__aeabi_ui2d+0x68>)
    4d90:	1ad2      	subs	r2, r2, r3
    4d92:	4094      	lsls	r4, r2
    4d94:	2200      	movs	r2, #0
    4d96:	0324      	lsls	r4, r4, #12
    4d98:	055b      	lsls	r3, r3, #21
    4d9a:	0b24      	lsrs	r4, r4, #12
    4d9c:	0d5b      	lsrs	r3, r3, #21
    4d9e:	2100      	movs	r1, #0
    4da0:	0010      	movs	r0, r2
    4da2:	0324      	lsls	r4, r4, #12
    4da4:	0d0a      	lsrs	r2, r1, #20
    4da6:	0b24      	lsrs	r4, r4, #12
    4da8:	0512      	lsls	r2, r2, #20
    4daa:	4322      	orrs	r2, r4
    4dac:	4c0d      	ldr	r4, [pc, #52]	; (4de4 <__aeabi_ui2d+0x6c>)
    4dae:	051b      	lsls	r3, r3, #20
    4db0:	4022      	ands	r2, r4
    4db2:	4313      	orrs	r3, r2
    4db4:	005b      	lsls	r3, r3, #1
    4db6:	0859      	lsrs	r1, r3, #1
    4db8:	bd10      	pop	{r4, pc}
    4dba:	0021      	movs	r1, r4
    4dbc:	4091      	lsls	r1, r2
    4dbe:	000a      	movs	r2, r1
    4dc0:	210b      	movs	r1, #11
    4dc2:	1a08      	subs	r0, r1, r0
    4dc4:	40c4      	lsrs	r4, r0
    4dc6:	055b      	lsls	r3, r3, #21
    4dc8:	0324      	lsls	r4, r4, #12
    4dca:	0b24      	lsrs	r4, r4, #12
    4dcc:	0d5b      	lsrs	r3, r3, #21
    4dce:	e7e6      	b.n	4d9e <__aeabi_ui2d+0x26>
    4dd0:	2300      	movs	r3, #0
    4dd2:	2400      	movs	r4, #0
    4dd4:	2200      	movs	r2, #0
    4dd6:	e7e2      	b.n	4d9e <__aeabi_ui2d+0x26>
    4dd8:	0000041e 	.word	0x0000041e
    4ddc:	00000433 	.word	0x00000433
    4de0:	00000413 	.word	0x00000413
    4de4:	800fffff 	.word	0x800fffff

00004de8 <__aeabi_f2d>:
    4de8:	0041      	lsls	r1, r0, #1
    4dea:	0e09      	lsrs	r1, r1, #24
    4dec:	1c4b      	adds	r3, r1, #1
    4dee:	b570      	push	{r4, r5, r6, lr}
    4df0:	b2db      	uxtb	r3, r3
    4df2:	0246      	lsls	r6, r0, #9
    4df4:	0a75      	lsrs	r5, r6, #9
    4df6:	0fc4      	lsrs	r4, r0, #31
    4df8:	2b01      	cmp	r3, #1
    4dfa:	dd14      	ble.n	4e26 <__aeabi_f2d+0x3e>
    4dfc:	23e0      	movs	r3, #224	; 0xe0
    4dfe:	009b      	lsls	r3, r3, #2
    4e00:	076d      	lsls	r5, r5, #29
    4e02:	0b36      	lsrs	r6, r6, #12
    4e04:	18cb      	adds	r3, r1, r3
    4e06:	2100      	movs	r1, #0
    4e08:	0d0a      	lsrs	r2, r1, #20
    4e0a:	0028      	movs	r0, r5
    4e0c:	0512      	lsls	r2, r2, #20
    4e0e:	4d1c      	ldr	r5, [pc, #112]	; (4e80 <__aeabi_f2d+0x98>)
    4e10:	4332      	orrs	r2, r6
    4e12:	055b      	lsls	r3, r3, #21
    4e14:	402a      	ands	r2, r5
    4e16:	085b      	lsrs	r3, r3, #1
    4e18:	4313      	orrs	r3, r2
    4e1a:	005b      	lsls	r3, r3, #1
    4e1c:	07e4      	lsls	r4, r4, #31
    4e1e:	085b      	lsrs	r3, r3, #1
    4e20:	4323      	orrs	r3, r4
    4e22:	0019      	movs	r1, r3
    4e24:	bd70      	pop	{r4, r5, r6, pc}
    4e26:	2900      	cmp	r1, #0
    4e28:	d114      	bne.n	4e54 <__aeabi_f2d+0x6c>
    4e2a:	2d00      	cmp	r5, #0
    4e2c:	d01e      	beq.n	4e6c <__aeabi_f2d+0x84>
    4e2e:	0028      	movs	r0, r5
    4e30:	f000 f866 	bl	4f00 <__clzsi2>
    4e34:	280a      	cmp	r0, #10
    4e36:	dc1c      	bgt.n	4e72 <__aeabi_f2d+0x8a>
    4e38:	230b      	movs	r3, #11
    4e3a:	002a      	movs	r2, r5
    4e3c:	1a1b      	subs	r3, r3, r0
    4e3e:	40da      	lsrs	r2, r3
    4e40:	0003      	movs	r3, r0
    4e42:	3315      	adds	r3, #21
    4e44:	409d      	lsls	r5, r3
    4e46:	4b0f      	ldr	r3, [pc, #60]	; (4e84 <__aeabi_f2d+0x9c>)
    4e48:	0312      	lsls	r2, r2, #12
    4e4a:	1a1b      	subs	r3, r3, r0
    4e4c:	055b      	lsls	r3, r3, #21
    4e4e:	0b16      	lsrs	r6, r2, #12
    4e50:	0d5b      	lsrs	r3, r3, #21
    4e52:	e7d8      	b.n	4e06 <__aeabi_f2d+0x1e>
    4e54:	2d00      	cmp	r5, #0
    4e56:	d006      	beq.n	4e66 <__aeabi_f2d+0x7e>
    4e58:	0b32      	lsrs	r2, r6, #12
    4e5a:	2680      	movs	r6, #128	; 0x80
    4e5c:	0336      	lsls	r6, r6, #12
    4e5e:	076d      	lsls	r5, r5, #29
    4e60:	4316      	orrs	r6, r2
    4e62:	4b09      	ldr	r3, [pc, #36]	; (4e88 <__aeabi_f2d+0xa0>)
    4e64:	e7cf      	b.n	4e06 <__aeabi_f2d+0x1e>
    4e66:	4b08      	ldr	r3, [pc, #32]	; (4e88 <__aeabi_f2d+0xa0>)
    4e68:	2600      	movs	r6, #0
    4e6a:	e7cc      	b.n	4e06 <__aeabi_f2d+0x1e>
    4e6c:	2300      	movs	r3, #0
    4e6e:	2600      	movs	r6, #0
    4e70:	e7c9      	b.n	4e06 <__aeabi_f2d+0x1e>
    4e72:	0003      	movs	r3, r0
    4e74:	002a      	movs	r2, r5
    4e76:	3b0b      	subs	r3, #11
    4e78:	409a      	lsls	r2, r3
    4e7a:	2500      	movs	r5, #0
    4e7c:	e7e3      	b.n	4e46 <__aeabi_f2d+0x5e>
    4e7e:	46c0      	nop			; (mov r8, r8)
    4e80:	800fffff 	.word	0x800fffff
    4e84:	00000389 	.word	0x00000389
    4e88:	000007ff 	.word	0x000007ff

00004e8c <__aeabi_cfrcmple>:
    4e8c:	4684      	mov	ip, r0
    4e8e:	1c08      	adds	r0, r1, #0
    4e90:	4661      	mov	r1, ip
    4e92:	e7ff      	b.n	4e94 <__aeabi_cfcmpeq>

00004e94 <__aeabi_cfcmpeq>:
    4e94:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    4e96:	f000 f8c3 	bl	5020 <__lesf2>
    4e9a:	2800      	cmp	r0, #0
    4e9c:	d401      	bmi.n	4ea2 <__aeabi_cfcmpeq+0xe>
    4e9e:	2100      	movs	r1, #0
    4ea0:	42c8      	cmn	r0, r1
    4ea2:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00004ea4 <__aeabi_fcmpeq>:
    4ea4:	b510      	push	{r4, lr}
    4ea6:	f000 f855 	bl	4f54 <__eqsf2>
    4eaa:	4240      	negs	r0, r0
    4eac:	3001      	adds	r0, #1
    4eae:	bd10      	pop	{r4, pc}

00004eb0 <__aeabi_fcmplt>:
    4eb0:	b510      	push	{r4, lr}
    4eb2:	f000 f8b5 	bl	5020 <__lesf2>
    4eb6:	2800      	cmp	r0, #0
    4eb8:	db01      	blt.n	4ebe <__aeabi_fcmplt+0xe>
    4eba:	2000      	movs	r0, #0
    4ebc:	bd10      	pop	{r4, pc}
    4ebe:	2001      	movs	r0, #1
    4ec0:	bd10      	pop	{r4, pc}
    4ec2:	46c0      	nop			; (mov r8, r8)

00004ec4 <__aeabi_fcmple>:
    4ec4:	b510      	push	{r4, lr}
    4ec6:	f000 f8ab 	bl	5020 <__lesf2>
    4eca:	2800      	cmp	r0, #0
    4ecc:	dd01      	ble.n	4ed2 <__aeabi_fcmple+0xe>
    4ece:	2000      	movs	r0, #0
    4ed0:	bd10      	pop	{r4, pc}
    4ed2:	2001      	movs	r0, #1
    4ed4:	bd10      	pop	{r4, pc}
    4ed6:	46c0      	nop			; (mov r8, r8)

00004ed8 <__aeabi_fcmpgt>:
    4ed8:	b510      	push	{r4, lr}
    4eda:	f000 f861 	bl	4fa0 <__gesf2>
    4ede:	2800      	cmp	r0, #0
    4ee0:	dc01      	bgt.n	4ee6 <__aeabi_fcmpgt+0xe>
    4ee2:	2000      	movs	r0, #0
    4ee4:	bd10      	pop	{r4, pc}
    4ee6:	2001      	movs	r0, #1
    4ee8:	bd10      	pop	{r4, pc}
    4eea:	46c0      	nop			; (mov r8, r8)

00004eec <__aeabi_fcmpge>:
    4eec:	b510      	push	{r4, lr}
    4eee:	f000 f857 	bl	4fa0 <__gesf2>
    4ef2:	2800      	cmp	r0, #0
    4ef4:	da01      	bge.n	4efa <__aeabi_fcmpge+0xe>
    4ef6:	2000      	movs	r0, #0
    4ef8:	bd10      	pop	{r4, pc}
    4efa:	2001      	movs	r0, #1
    4efc:	bd10      	pop	{r4, pc}
    4efe:	46c0      	nop			; (mov r8, r8)

00004f00 <__clzsi2>:
    4f00:	211c      	movs	r1, #28
    4f02:	2301      	movs	r3, #1
    4f04:	041b      	lsls	r3, r3, #16
    4f06:	4298      	cmp	r0, r3
    4f08:	d301      	bcc.n	4f0e <__clzsi2+0xe>
    4f0a:	0c00      	lsrs	r0, r0, #16
    4f0c:	3910      	subs	r1, #16
    4f0e:	0a1b      	lsrs	r3, r3, #8
    4f10:	4298      	cmp	r0, r3
    4f12:	d301      	bcc.n	4f18 <__clzsi2+0x18>
    4f14:	0a00      	lsrs	r0, r0, #8
    4f16:	3908      	subs	r1, #8
    4f18:	091b      	lsrs	r3, r3, #4
    4f1a:	4298      	cmp	r0, r3
    4f1c:	d301      	bcc.n	4f22 <__clzsi2+0x22>
    4f1e:	0900      	lsrs	r0, r0, #4
    4f20:	3904      	subs	r1, #4
    4f22:	a202      	add	r2, pc, #8	; (adr r2, 4f2c <__clzsi2+0x2c>)
    4f24:	5c10      	ldrb	r0, [r2, r0]
    4f26:	1840      	adds	r0, r0, r1
    4f28:	4770      	bx	lr
    4f2a:	46c0      	nop			; (mov r8, r8)
    4f2c:	02020304 	.word	0x02020304
    4f30:	01010101 	.word	0x01010101
	...

00004f3c <__clzdi2>:
    4f3c:	b510      	push	{r4, lr}
    4f3e:	2900      	cmp	r1, #0
    4f40:	d103      	bne.n	4f4a <__clzdi2+0xe>
    4f42:	f7ff ffdd 	bl	4f00 <__clzsi2>
    4f46:	3020      	adds	r0, #32
    4f48:	e002      	b.n	4f50 <__clzdi2+0x14>
    4f4a:	1c08      	adds	r0, r1, #0
    4f4c:	f7ff ffd8 	bl	4f00 <__clzsi2>
    4f50:	bd10      	pop	{r4, pc}
    4f52:	46c0      	nop			; (mov r8, r8)

00004f54 <__eqsf2>:
    4f54:	b570      	push	{r4, r5, r6, lr}
    4f56:	0042      	lsls	r2, r0, #1
    4f58:	0245      	lsls	r5, r0, #9
    4f5a:	024e      	lsls	r6, r1, #9
    4f5c:	004c      	lsls	r4, r1, #1
    4f5e:	0fc3      	lsrs	r3, r0, #31
    4f60:	0a6d      	lsrs	r5, r5, #9
    4f62:	0e12      	lsrs	r2, r2, #24
    4f64:	0a76      	lsrs	r6, r6, #9
    4f66:	0e24      	lsrs	r4, r4, #24
    4f68:	0fc9      	lsrs	r1, r1, #31
    4f6a:	2001      	movs	r0, #1
    4f6c:	2aff      	cmp	r2, #255	; 0xff
    4f6e:	d006      	beq.n	4f7e <__eqsf2+0x2a>
    4f70:	2cff      	cmp	r4, #255	; 0xff
    4f72:	d003      	beq.n	4f7c <__eqsf2+0x28>
    4f74:	42a2      	cmp	r2, r4
    4f76:	d101      	bne.n	4f7c <__eqsf2+0x28>
    4f78:	42b5      	cmp	r5, r6
    4f7a:	d006      	beq.n	4f8a <__eqsf2+0x36>
    4f7c:	bd70      	pop	{r4, r5, r6, pc}
    4f7e:	2d00      	cmp	r5, #0
    4f80:	d1fc      	bne.n	4f7c <__eqsf2+0x28>
    4f82:	2cff      	cmp	r4, #255	; 0xff
    4f84:	d1fa      	bne.n	4f7c <__eqsf2+0x28>
    4f86:	2e00      	cmp	r6, #0
    4f88:	d1f8      	bne.n	4f7c <__eqsf2+0x28>
    4f8a:	428b      	cmp	r3, r1
    4f8c:	d006      	beq.n	4f9c <__eqsf2+0x48>
    4f8e:	2001      	movs	r0, #1
    4f90:	2a00      	cmp	r2, #0
    4f92:	d1f3      	bne.n	4f7c <__eqsf2+0x28>
    4f94:	0028      	movs	r0, r5
    4f96:	1e45      	subs	r5, r0, #1
    4f98:	41a8      	sbcs	r0, r5
    4f9a:	e7ef      	b.n	4f7c <__eqsf2+0x28>
    4f9c:	2000      	movs	r0, #0
    4f9e:	e7ed      	b.n	4f7c <__eqsf2+0x28>

00004fa0 <__gesf2>:
    4fa0:	b5f0      	push	{r4, r5, r6, r7, lr}
    4fa2:	0042      	lsls	r2, r0, #1
    4fa4:	0245      	lsls	r5, r0, #9
    4fa6:	024c      	lsls	r4, r1, #9
    4fa8:	0fc3      	lsrs	r3, r0, #31
    4faa:	0048      	lsls	r0, r1, #1
    4fac:	0a6d      	lsrs	r5, r5, #9
    4fae:	0e12      	lsrs	r2, r2, #24
    4fb0:	0a64      	lsrs	r4, r4, #9
    4fb2:	0e00      	lsrs	r0, r0, #24
    4fb4:	0fc9      	lsrs	r1, r1, #31
    4fb6:	2aff      	cmp	r2, #255	; 0xff
    4fb8:	d01e      	beq.n	4ff8 <__gesf2+0x58>
    4fba:	28ff      	cmp	r0, #255	; 0xff
    4fbc:	d021      	beq.n	5002 <__gesf2+0x62>
    4fbe:	2a00      	cmp	r2, #0
    4fc0:	d10a      	bne.n	4fd8 <__gesf2+0x38>
    4fc2:	426e      	negs	r6, r5
    4fc4:	416e      	adcs	r6, r5
    4fc6:	b2f6      	uxtb	r6, r6
    4fc8:	2800      	cmp	r0, #0
    4fca:	d10f      	bne.n	4fec <__gesf2+0x4c>
    4fcc:	2c00      	cmp	r4, #0
    4fce:	d10d      	bne.n	4fec <__gesf2+0x4c>
    4fd0:	2000      	movs	r0, #0
    4fd2:	2d00      	cmp	r5, #0
    4fd4:	d009      	beq.n	4fea <__gesf2+0x4a>
    4fd6:	e005      	b.n	4fe4 <__gesf2+0x44>
    4fd8:	2800      	cmp	r0, #0
    4fda:	d101      	bne.n	4fe0 <__gesf2+0x40>
    4fdc:	2c00      	cmp	r4, #0
    4fde:	d001      	beq.n	4fe4 <__gesf2+0x44>
    4fe0:	428b      	cmp	r3, r1
    4fe2:	d011      	beq.n	5008 <__gesf2+0x68>
    4fe4:	2101      	movs	r1, #1
    4fe6:	4258      	negs	r0, r3
    4fe8:	4308      	orrs	r0, r1
    4fea:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4fec:	2e00      	cmp	r6, #0
    4fee:	d0f7      	beq.n	4fe0 <__gesf2+0x40>
    4ff0:	2001      	movs	r0, #1
    4ff2:	3901      	subs	r1, #1
    4ff4:	4308      	orrs	r0, r1
    4ff6:	e7f8      	b.n	4fea <__gesf2+0x4a>
    4ff8:	2d00      	cmp	r5, #0
    4ffa:	d0de      	beq.n	4fba <__gesf2+0x1a>
    4ffc:	2002      	movs	r0, #2
    4ffe:	4240      	negs	r0, r0
    5000:	e7f3      	b.n	4fea <__gesf2+0x4a>
    5002:	2c00      	cmp	r4, #0
    5004:	d0db      	beq.n	4fbe <__gesf2+0x1e>
    5006:	e7f9      	b.n	4ffc <__gesf2+0x5c>
    5008:	4282      	cmp	r2, r0
    500a:	dceb      	bgt.n	4fe4 <__gesf2+0x44>
    500c:	db04      	blt.n	5018 <__gesf2+0x78>
    500e:	42a5      	cmp	r5, r4
    5010:	d8e8      	bhi.n	4fe4 <__gesf2+0x44>
    5012:	2000      	movs	r0, #0
    5014:	42a5      	cmp	r5, r4
    5016:	d2e8      	bcs.n	4fea <__gesf2+0x4a>
    5018:	2101      	movs	r1, #1
    501a:	1e58      	subs	r0, r3, #1
    501c:	4308      	orrs	r0, r1
    501e:	e7e4      	b.n	4fea <__gesf2+0x4a>

00005020 <__lesf2>:
    5020:	b5f0      	push	{r4, r5, r6, r7, lr}
    5022:	0042      	lsls	r2, r0, #1
    5024:	024d      	lsls	r5, r1, #9
    5026:	004c      	lsls	r4, r1, #1
    5028:	0246      	lsls	r6, r0, #9
    502a:	0a76      	lsrs	r6, r6, #9
    502c:	0e12      	lsrs	r2, r2, #24
    502e:	0fc3      	lsrs	r3, r0, #31
    5030:	0a6d      	lsrs	r5, r5, #9
    5032:	0e24      	lsrs	r4, r4, #24
    5034:	0fc9      	lsrs	r1, r1, #31
    5036:	2aff      	cmp	r2, #255	; 0xff
    5038:	d016      	beq.n	5068 <__lesf2+0x48>
    503a:	2cff      	cmp	r4, #255	; 0xff
    503c:	d018      	beq.n	5070 <__lesf2+0x50>
    503e:	2a00      	cmp	r2, #0
    5040:	d10a      	bne.n	5058 <__lesf2+0x38>
    5042:	4270      	negs	r0, r6
    5044:	4170      	adcs	r0, r6
    5046:	b2c0      	uxtb	r0, r0
    5048:	2c00      	cmp	r4, #0
    504a:	d015      	beq.n	5078 <__lesf2+0x58>
    504c:	2800      	cmp	r0, #0
    504e:	d005      	beq.n	505c <__lesf2+0x3c>
    5050:	2001      	movs	r0, #1
    5052:	3901      	subs	r1, #1
    5054:	4308      	orrs	r0, r1
    5056:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5058:	2c00      	cmp	r4, #0
    505a:	d013      	beq.n	5084 <__lesf2+0x64>
    505c:	4299      	cmp	r1, r3
    505e:	d014      	beq.n	508a <__lesf2+0x6a>
    5060:	2001      	movs	r0, #1
    5062:	425b      	negs	r3, r3
    5064:	4318      	orrs	r0, r3
    5066:	e7f6      	b.n	5056 <__lesf2+0x36>
    5068:	2002      	movs	r0, #2
    506a:	2e00      	cmp	r6, #0
    506c:	d1f3      	bne.n	5056 <__lesf2+0x36>
    506e:	e7e4      	b.n	503a <__lesf2+0x1a>
    5070:	2002      	movs	r0, #2
    5072:	2d00      	cmp	r5, #0
    5074:	d1ef      	bne.n	5056 <__lesf2+0x36>
    5076:	e7e2      	b.n	503e <__lesf2+0x1e>
    5078:	2d00      	cmp	r5, #0
    507a:	d1e7      	bne.n	504c <__lesf2+0x2c>
    507c:	2000      	movs	r0, #0
    507e:	2e00      	cmp	r6, #0
    5080:	d0e9      	beq.n	5056 <__lesf2+0x36>
    5082:	e7ed      	b.n	5060 <__lesf2+0x40>
    5084:	2d00      	cmp	r5, #0
    5086:	d1e9      	bne.n	505c <__lesf2+0x3c>
    5088:	e7ea      	b.n	5060 <__lesf2+0x40>
    508a:	42a2      	cmp	r2, r4
    508c:	dc06      	bgt.n	509c <__lesf2+0x7c>
    508e:	dbdf      	blt.n	5050 <__lesf2+0x30>
    5090:	42ae      	cmp	r6, r5
    5092:	d803      	bhi.n	509c <__lesf2+0x7c>
    5094:	2000      	movs	r0, #0
    5096:	42ae      	cmp	r6, r5
    5098:	d3da      	bcc.n	5050 <__lesf2+0x30>
    509a:	e7dc      	b.n	5056 <__lesf2+0x36>
    509c:	2001      	movs	r0, #1
    509e:	4249      	negs	r1, r1
    50a0:	4308      	orrs	r0, r1
    50a2:	e7d8      	b.n	5056 <__lesf2+0x36>

000050a4 <__libc_init_array>:
    50a4:	b570      	push	{r4, r5, r6, lr}
    50a6:	4e0d      	ldr	r6, [pc, #52]	; (50dc <__libc_init_array+0x38>)
    50a8:	4d0d      	ldr	r5, [pc, #52]	; (50e0 <__libc_init_array+0x3c>)
    50aa:	2400      	movs	r4, #0
    50ac:	1bad      	subs	r5, r5, r6
    50ae:	10ad      	asrs	r5, r5, #2
    50b0:	d005      	beq.n	50be <__libc_init_array+0x1a>
    50b2:	00a3      	lsls	r3, r4, #2
    50b4:	58f3      	ldr	r3, [r6, r3]
    50b6:	3401      	adds	r4, #1
    50b8:	4798      	blx	r3
    50ba:	42a5      	cmp	r5, r4
    50bc:	d1f9      	bne.n	50b2 <__libc_init_array+0xe>
    50be:	f005 f8e1 	bl	a284 <_init>
    50c2:	4e08      	ldr	r6, [pc, #32]	; (50e4 <__libc_init_array+0x40>)
    50c4:	4d08      	ldr	r5, [pc, #32]	; (50e8 <__libc_init_array+0x44>)
    50c6:	2400      	movs	r4, #0
    50c8:	1bad      	subs	r5, r5, r6
    50ca:	10ad      	asrs	r5, r5, #2
    50cc:	d005      	beq.n	50da <__libc_init_array+0x36>
    50ce:	00a3      	lsls	r3, r4, #2
    50d0:	58f3      	ldr	r3, [r6, r3]
    50d2:	3401      	adds	r4, #1
    50d4:	4798      	blx	r3
    50d6:	42a5      	cmp	r5, r4
    50d8:	d1f9      	bne.n	50ce <__libc_init_array+0x2a>
    50da:	bd70      	pop	{r4, r5, r6, pc}
    50dc:	0000a290 	.word	0x0000a290
    50e0:	0000a290 	.word	0x0000a290
    50e4:	0000a290 	.word	0x0000a290
    50e8:	0000a298 	.word	0x0000a298

000050ec <memcpy>:
    50ec:	b5f0      	push	{r4, r5, r6, r7, lr}
    50ee:	0005      	movs	r5, r0
    50f0:	2a0f      	cmp	r2, #15
    50f2:	d92f      	bls.n	5154 <memcpy+0x68>
    50f4:	000b      	movs	r3, r1
    50f6:	4303      	orrs	r3, r0
    50f8:	079b      	lsls	r3, r3, #30
    50fa:	d134      	bne.n	5166 <memcpy+0x7a>
    50fc:	0016      	movs	r6, r2
    50fe:	000c      	movs	r4, r1
    5100:	0003      	movs	r3, r0
    5102:	3e10      	subs	r6, #16
    5104:	0935      	lsrs	r5, r6, #4
    5106:	3501      	adds	r5, #1
    5108:	012d      	lsls	r5, r5, #4
    510a:	1945      	adds	r5, r0, r5
    510c:	6827      	ldr	r7, [r4, #0]
    510e:	601f      	str	r7, [r3, #0]
    5110:	6867      	ldr	r7, [r4, #4]
    5112:	605f      	str	r7, [r3, #4]
    5114:	68a7      	ldr	r7, [r4, #8]
    5116:	609f      	str	r7, [r3, #8]
    5118:	68e7      	ldr	r7, [r4, #12]
    511a:	3410      	adds	r4, #16
    511c:	60df      	str	r7, [r3, #12]
    511e:	3310      	adds	r3, #16
    5120:	429d      	cmp	r5, r3
    5122:	d1f3      	bne.n	510c <memcpy+0x20>
    5124:	230f      	movs	r3, #15
    5126:	439e      	bics	r6, r3
    5128:	3610      	adds	r6, #16
    512a:	1985      	adds	r5, r0, r6
    512c:	1989      	adds	r1, r1, r6
    512e:	4013      	ands	r3, r2
    5130:	2b03      	cmp	r3, #3
    5132:	d91a      	bls.n	516a <memcpy+0x7e>
    5134:	1f1e      	subs	r6, r3, #4
    5136:	2300      	movs	r3, #0
    5138:	08b4      	lsrs	r4, r6, #2
    513a:	3401      	adds	r4, #1
    513c:	00a4      	lsls	r4, r4, #2
    513e:	58cf      	ldr	r7, [r1, r3]
    5140:	50ef      	str	r7, [r5, r3]
    5142:	3304      	adds	r3, #4
    5144:	42a3      	cmp	r3, r4
    5146:	d1fa      	bne.n	513e <memcpy+0x52>
    5148:	2403      	movs	r4, #3
    514a:	43a6      	bics	r6, r4
    514c:	1d33      	adds	r3, r6, #4
    514e:	4022      	ands	r2, r4
    5150:	18c9      	adds	r1, r1, r3
    5152:	18ed      	adds	r5, r5, r3
    5154:	2a00      	cmp	r2, #0
    5156:	d005      	beq.n	5164 <memcpy+0x78>
    5158:	2300      	movs	r3, #0
    515a:	5ccc      	ldrb	r4, [r1, r3]
    515c:	54ec      	strb	r4, [r5, r3]
    515e:	3301      	adds	r3, #1
    5160:	4293      	cmp	r3, r2
    5162:	d1fa      	bne.n	515a <memcpy+0x6e>
    5164:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5166:	0005      	movs	r5, r0
    5168:	e7f6      	b.n	5158 <memcpy+0x6c>
    516a:	001a      	movs	r2, r3
    516c:	e7f2      	b.n	5154 <memcpy+0x68>
    516e:	46c0      	nop			; (mov r8, r8)

00005170 <memset>:
    5170:	b5f0      	push	{r4, r5, r6, r7, lr}
    5172:	0783      	lsls	r3, r0, #30
    5174:	d043      	beq.n	51fe <memset+0x8e>
    5176:	1e54      	subs	r4, r2, #1
    5178:	2a00      	cmp	r2, #0
    517a:	d03f      	beq.n	51fc <memset+0x8c>
    517c:	b2ce      	uxtb	r6, r1
    517e:	0002      	movs	r2, r0
    5180:	2503      	movs	r5, #3
    5182:	e002      	b.n	518a <memset+0x1a>
    5184:	001a      	movs	r2, r3
    5186:	3c01      	subs	r4, #1
    5188:	d338      	bcc.n	51fc <memset+0x8c>
    518a:	1c53      	adds	r3, r2, #1
    518c:	7016      	strb	r6, [r2, #0]
    518e:	422b      	tst	r3, r5
    5190:	d1f8      	bne.n	5184 <memset+0x14>
    5192:	2c03      	cmp	r4, #3
    5194:	d92a      	bls.n	51ec <memset+0x7c>
    5196:	22ff      	movs	r2, #255	; 0xff
    5198:	400a      	ands	r2, r1
    519a:	0215      	lsls	r5, r2, #8
    519c:	4315      	orrs	r5, r2
    519e:	042a      	lsls	r2, r5, #16
    51a0:	4315      	orrs	r5, r2
    51a2:	2c0f      	cmp	r4, #15
    51a4:	d914      	bls.n	51d0 <memset+0x60>
    51a6:	0027      	movs	r7, r4
    51a8:	001a      	movs	r2, r3
    51aa:	3f10      	subs	r7, #16
    51ac:	093e      	lsrs	r6, r7, #4
    51ae:	3601      	adds	r6, #1
    51b0:	0136      	lsls	r6, r6, #4
    51b2:	199e      	adds	r6, r3, r6
    51b4:	6015      	str	r5, [r2, #0]
    51b6:	6055      	str	r5, [r2, #4]
    51b8:	6095      	str	r5, [r2, #8]
    51ba:	60d5      	str	r5, [r2, #12]
    51bc:	3210      	adds	r2, #16
    51be:	4296      	cmp	r6, r2
    51c0:	d1f8      	bne.n	51b4 <memset+0x44>
    51c2:	220f      	movs	r2, #15
    51c4:	4397      	bics	r7, r2
    51c6:	3710      	adds	r7, #16
    51c8:	19db      	adds	r3, r3, r7
    51ca:	4014      	ands	r4, r2
    51cc:	2c03      	cmp	r4, #3
    51ce:	d90d      	bls.n	51ec <memset+0x7c>
    51d0:	001a      	movs	r2, r3
    51d2:	1f27      	subs	r7, r4, #4
    51d4:	08be      	lsrs	r6, r7, #2
    51d6:	3601      	adds	r6, #1
    51d8:	00b6      	lsls	r6, r6, #2
    51da:	199e      	adds	r6, r3, r6
    51dc:	c220      	stmia	r2!, {r5}
    51de:	42b2      	cmp	r2, r6
    51e0:	d1fc      	bne.n	51dc <memset+0x6c>
    51e2:	2203      	movs	r2, #3
    51e4:	4397      	bics	r7, r2
    51e6:	3704      	adds	r7, #4
    51e8:	19db      	adds	r3, r3, r7
    51ea:	4014      	ands	r4, r2
    51ec:	2c00      	cmp	r4, #0
    51ee:	d005      	beq.n	51fc <memset+0x8c>
    51f0:	b2c9      	uxtb	r1, r1
    51f2:	191c      	adds	r4, r3, r4
    51f4:	7019      	strb	r1, [r3, #0]
    51f6:	3301      	adds	r3, #1
    51f8:	429c      	cmp	r4, r3
    51fa:	d1fb      	bne.n	51f4 <memset+0x84>
    51fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    51fe:	0014      	movs	r4, r2
    5200:	0003      	movs	r3, r0
    5202:	e7c6      	b.n	5192 <memset+0x22>

00005204 <strlen>:
    5204:	b510      	push	{r4, lr}
    5206:	0783      	lsls	r3, r0, #30
    5208:	d025      	beq.n	5256 <strlen+0x52>
    520a:	7803      	ldrb	r3, [r0, #0]
    520c:	2b00      	cmp	r3, #0
    520e:	d024      	beq.n	525a <strlen+0x56>
    5210:	0003      	movs	r3, r0
    5212:	2103      	movs	r1, #3
    5214:	e002      	b.n	521c <strlen+0x18>
    5216:	781a      	ldrb	r2, [r3, #0]
    5218:	2a00      	cmp	r2, #0
    521a:	d01a      	beq.n	5252 <strlen+0x4e>
    521c:	3301      	adds	r3, #1
    521e:	420b      	tst	r3, r1
    5220:	d1f9      	bne.n	5216 <strlen+0x12>
    5222:	6819      	ldr	r1, [r3, #0]
    5224:	4a0e      	ldr	r2, [pc, #56]	; (5260 <strlen+0x5c>)
    5226:	4c0f      	ldr	r4, [pc, #60]	; (5264 <strlen+0x60>)
    5228:	188a      	adds	r2, r1, r2
    522a:	438a      	bics	r2, r1
    522c:	4222      	tst	r2, r4
    522e:	d106      	bne.n	523e <strlen+0x3a>
    5230:	3304      	adds	r3, #4
    5232:	6819      	ldr	r1, [r3, #0]
    5234:	4a0a      	ldr	r2, [pc, #40]	; (5260 <strlen+0x5c>)
    5236:	188a      	adds	r2, r1, r2
    5238:	438a      	bics	r2, r1
    523a:	4222      	tst	r2, r4
    523c:	d0f8      	beq.n	5230 <strlen+0x2c>
    523e:	001a      	movs	r2, r3
    5240:	781b      	ldrb	r3, [r3, #0]
    5242:	2b00      	cmp	r3, #0
    5244:	d003      	beq.n	524e <strlen+0x4a>
    5246:	3201      	adds	r2, #1
    5248:	7811      	ldrb	r1, [r2, #0]
    524a:	2900      	cmp	r1, #0
    524c:	d1fb      	bne.n	5246 <strlen+0x42>
    524e:	1a10      	subs	r0, r2, r0
    5250:	bd10      	pop	{r4, pc}
    5252:	1a18      	subs	r0, r3, r0
    5254:	e7fc      	b.n	5250 <strlen+0x4c>
    5256:	0003      	movs	r3, r0
    5258:	e7e3      	b.n	5222 <strlen+0x1e>
    525a:	2000      	movs	r0, #0
    525c:	e7f8      	b.n	5250 <strlen+0x4c>
    525e:	46c0      	nop			; (mov r8, r8)
    5260:	fefefeff 	.word	0xfefefeff
    5264:	80808080 	.word	0x80808080

00005268 <strncpy>:
    5268:	000b      	movs	r3, r1
    526a:	4303      	orrs	r3, r0
    526c:	b5f0      	push	{r4, r5, r6, r7, lr}
    526e:	079b      	lsls	r3, r3, #30
    5270:	d101      	bne.n	5276 <strncpy+0xe>
    5272:	2a03      	cmp	r2, #3
    5274:	d814      	bhi.n	52a0 <strncpy+0x38>
    5276:	0006      	movs	r6, r0
    5278:	2a00      	cmp	r2, #0
    527a:	d010      	beq.n	529e <strncpy+0x36>
    527c:	780c      	ldrb	r4, [r1, #0]
    527e:	3a01      	subs	r2, #1
    5280:	1c73      	adds	r3, r6, #1
    5282:	7034      	strb	r4, [r6, #0]
    5284:	2c00      	cmp	r4, #0
    5286:	d01d      	beq.n	52c4 <strncpy+0x5c>
    5288:	2401      	movs	r4, #1
    528a:	e006      	b.n	529a <strncpy+0x32>
    528c:	5d0d      	ldrb	r5, [r1, r4]
    528e:	3a01      	subs	r2, #1
    5290:	5535      	strb	r5, [r6, r4]
    5292:	3301      	adds	r3, #1
    5294:	3401      	adds	r4, #1
    5296:	2d00      	cmp	r5, #0
    5298:	d014      	beq.n	52c4 <strncpy+0x5c>
    529a:	2a00      	cmp	r2, #0
    529c:	d1f6      	bne.n	528c <strncpy+0x24>
    529e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    52a0:	0005      	movs	r5, r0
    52a2:	4f0d      	ldr	r7, [pc, #52]	; (52d8 <strncpy+0x70>)
    52a4:	e006      	b.n	52b4 <strncpy+0x4c>
    52a6:	3a04      	subs	r2, #4
    52a8:	1d2e      	adds	r6, r5, #4
    52aa:	3104      	adds	r1, #4
    52ac:	602c      	str	r4, [r5, #0]
    52ae:	2a03      	cmp	r2, #3
    52b0:	d9e2      	bls.n	5278 <strncpy+0x10>
    52b2:	0035      	movs	r5, r6
    52b4:	680c      	ldr	r4, [r1, #0]
    52b6:	4b09      	ldr	r3, [pc, #36]	; (52dc <strncpy+0x74>)
    52b8:	18e3      	adds	r3, r4, r3
    52ba:	43a3      	bics	r3, r4
    52bc:	423b      	tst	r3, r7
    52be:	d0f2      	beq.n	52a6 <strncpy+0x3e>
    52c0:	002e      	movs	r6, r5
    52c2:	e7db      	b.n	527c <strncpy+0x14>
    52c4:	189c      	adds	r4, r3, r2
    52c6:	2100      	movs	r1, #0
    52c8:	2a00      	cmp	r2, #0
    52ca:	d0e8      	beq.n	529e <strncpy+0x36>
    52cc:	7019      	strb	r1, [r3, #0]
    52ce:	3301      	adds	r3, #1
    52d0:	42a3      	cmp	r3, r4
    52d2:	d1fb      	bne.n	52cc <strncpy+0x64>
    52d4:	e7e3      	b.n	529e <strncpy+0x36>
    52d6:	46c0      	nop			; (mov r8, r8)
    52d8:	80808080 	.word	0x80808080
    52dc:	fefefeff 	.word	0xfefefeff

000052e0 <_vsnprintf_r>:
    52e0:	b530      	push	{r4, r5, lr}
    52e2:	0004      	movs	r4, r0
    52e4:	b09b      	sub	sp, #108	; 0x6c
    52e6:	0018      	movs	r0, r3
    52e8:	2a00      	cmp	r2, #0
    52ea:	db2e      	blt.n	534a <_vsnprintf_r+0x6a>
    52ec:	2382      	movs	r3, #130	; 0x82
    52ee:	466d      	mov	r5, sp
    52f0:	009b      	lsls	r3, r3, #2
    52f2:	81ab      	strh	r3, [r5, #12]
    52f4:	9100      	str	r1, [sp, #0]
    52f6:	9104      	str	r1, [sp, #16]
    52f8:	2a00      	cmp	r2, #0
    52fa:	d011      	beq.n	5320 <_vsnprintf_r+0x40>
    52fc:	2301      	movs	r3, #1
    52fe:	3a01      	subs	r2, #1
    5300:	425b      	negs	r3, r3
    5302:	9202      	str	r2, [sp, #8]
    5304:	9205      	str	r2, [sp, #20]
    5306:	81eb      	strh	r3, [r5, #14]
    5308:	0002      	movs	r2, r0
    530a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
    530c:	4669      	mov	r1, sp
    530e:	0020      	movs	r0, r4
    5310:	f002 f86a 	bl	73e8 <_svfprintf_r>
    5314:	1c43      	adds	r3, r0, #1
    5316:	db12      	blt.n	533e <_vsnprintf_r+0x5e>
    5318:	2300      	movs	r3, #0
    531a:	9a00      	ldr	r2, [sp, #0]
    531c:	7013      	strb	r3, [r2, #0]
    531e:	e00c      	b.n	533a <_vsnprintf_r+0x5a>
    5320:	2301      	movs	r3, #1
    5322:	425b      	negs	r3, r3
    5324:	9202      	str	r2, [sp, #8]
    5326:	9205      	str	r2, [sp, #20]
    5328:	81eb      	strh	r3, [r5, #14]
    532a:	0002      	movs	r2, r0
    532c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
    532e:	4669      	mov	r1, sp
    5330:	0020      	movs	r0, r4
    5332:	f002 f859 	bl	73e8 <_svfprintf_r>
    5336:	1c43      	adds	r3, r0, #1
    5338:	db04      	blt.n	5344 <_vsnprintf_r+0x64>
    533a:	b01b      	add	sp, #108	; 0x6c
    533c:	bd30      	pop	{r4, r5, pc}
    533e:	238b      	movs	r3, #139	; 0x8b
    5340:	6023      	str	r3, [r4, #0]
    5342:	e7e9      	b.n	5318 <_vsnprintf_r+0x38>
    5344:	238b      	movs	r3, #139	; 0x8b
    5346:	6023      	str	r3, [r4, #0]
    5348:	e7f7      	b.n	533a <_vsnprintf_r+0x5a>
    534a:	238b      	movs	r3, #139	; 0x8b
    534c:	2001      	movs	r0, #1
    534e:	6023      	str	r3, [r4, #0]
    5350:	4240      	negs	r0, r0
    5352:	e7f2      	b.n	533a <_vsnprintf_r+0x5a>

00005354 <vsnprintf>:
    5354:	b510      	push	{r4, lr}
    5356:	0004      	movs	r4, r0
    5358:	4805      	ldr	r0, [pc, #20]	; (5370 <vsnprintf+0x1c>)
    535a:	b082      	sub	sp, #8
    535c:	6800      	ldr	r0, [r0, #0]
    535e:	9300      	str	r3, [sp, #0]
    5360:	0013      	movs	r3, r2
    5362:	000a      	movs	r2, r1
    5364:	0021      	movs	r1, r4
    5366:	f7ff ffbb 	bl	52e0 <_vsnprintf_r>
    536a:	b002      	add	sp, #8
    536c:	bd10      	pop	{r4, pc}
    536e:	46c0      	nop			; (mov r8, r8)
    5370:	20000008 	.word	0x20000008

00005374 <register_fini>:
    5374:	4b03      	ldr	r3, [pc, #12]	; (5384 <register_fini+0x10>)
    5376:	b510      	push	{r4, lr}
    5378:	2b00      	cmp	r3, #0
    537a:	d002      	beq.n	5382 <register_fini+0xe>
    537c:	4802      	ldr	r0, [pc, #8]	; (5388 <register_fini+0x14>)
    537e:	f000 f805 	bl	538c <atexit>
    5382:	bd10      	pop	{r4, pc}
    5384:	00000000 	.word	0x00000000
    5388:	00006479 	.word	0x00006479

0000538c <atexit>:
    538c:	b510      	push	{r4, lr}
    538e:	0001      	movs	r1, r0
    5390:	2300      	movs	r3, #0
    5392:	2200      	movs	r2, #0
    5394:	2000      	movs	r0, #0
    5396:	f003 fb2b 	bl	89f0 <__register_exitproc>
    539a:	bd10      	pop	{r4, pc}

0000539c <quorem>:
    539c:	b5f0      	push	{r4, r5, r6, r7, lr}
    539e:	4645      	mov	r5, r8
    53a0:	4680      	mov	r8, r0
    53a2:	46de      	mov	lr, fp
    53a4:	4657      	mov	r7, sl
    53a6:	464e      	mov	r6, r9
    53a8:	4642      	mov	r2, r8
    53aa:	b5e0      	push	{r5, r6, r7, lr}
    53ac:	690c      	ldr	r4, [r1, #16]
    53ae:	6912      	ldr	r2, [r2, #16]
    53b0:	b085      	sub	sp, #20
    53b2:	000b      	movs	r3, r1
    53b4:	9102      	str	r1, [sp, #8]
    53b6:	2000      	movs	r0, #0
    53b8:	4294      	cmp	r4, r2
    53ba:	dd00      	ble.n	53be <quorem+0x22>
    53bc:	e090      	b.n	54e0 <quorem+0x144>
    53be:	2214      	movs	r2, #20
    53c0:	4694      	mov	ip, r2
    53c2:	4463      	add	r3, ip
    53c4:	4699      	mov	r9, r3
    53c6:	464a      	mov	r2, r9
    53c8:	3c01      	subs	r4, #1
    53ca:	00a3      	lsls	r3, r4, #2
    53cc:	18d6      	adds	r6, r2, r3
    53ce:	2214      	movs	r2, #20
    53d0:	4442      	add	r2, r8
    53d2:	4693      	mov	fp, r2
    53d4:	449b      	add	fp, r3
    53d6:	6833      	ldr	r3, [r6, #0]
    53d8:	0015      	movs	r5, r2
    53da:	1c59      	adds	r1, r3, #1
    53dc:	465b      	mov	r3, fp
    53de:	6818      	ldr	r0, [r3, #0]
    53e0:	9201      	str	r2, [sp, #4]
    53e2:	f7fd f915 	bl	2610 <__udivsi3>
    53e6:	1e03      	subs	r3, r0, #0
    53e8:	9000      	str	r0, [sp, #0]
    53ea:	d042      	beq.n	5472 <quorem+0xd6>
    53ec:	0029      	movs	r1, r5
    53ee:	2700      	movs	r7, #0
    53f0:	464d      	mov	r5, r9
    53f2:	2000      	movs	r0, #0
    53f4:	46b1      	mov	r9, r6
    53f6:	46a2      	mov	sl, r4
    53f8:	003e      	movs	r6, r7
    53fa:	0004      	movs	r4, r0
    53fc:	469c      	mov	ip, r3
    53fe:	002f      	movs	r7, r5
    5400:	0008      	movs	r0, r1
    5402:	9503      	str	r5, [sp, #12]
    5404:	4663      	mov	r3, ip
    5406:	cf04      	ldmia	r7!, {r2}
    5408:	0415      	lsls	r5, r2, #16
    540a:	0c2d      	lsrs	r5, r5, #16
    540c:	435d      	muls	r5, r3
    540e:	0c12      	lsrs	r2, r2, #16
    5410:	435a      	muls	r2, r3
    5412:	19ad      	adds	r5, r5, r6
    5414:	0c2b      	lsrs	r3, r5, #16
    5416:	18d2      	adds	r2, r2, r3
    5418:	6803      	ldr	r3, [r0, #0]
    541a:	042d      	lsls	r5, r5, #16
    541c:	0419      	lsls	r1, r3, #16
    541e:	0c09      	lsrs	r1, r1, #16
    5420:	1909      	adds	r1, r1, r4
    5422:	0c16      	lsrs	r6, r2, #16
    5424:	0c2d      	lsrs	r5, r5, #16
    5426:	0412      	lsls	r2, r2, #16
    5428:	1b49      	subs	r1, r1, r5
    542a:	0c12      	lsrs	r2, r2, #16
    542c:	0c1b      	lsrs	r3, r3, #16
    542e:	1a9b      	subs	r3, r3, r2
    5430:	140a      	asrs	r2, r1, #16
    5432:	189b      	adds	r3, r3, r2
    5434:	0409      	lsls	r1, r1, #16
    5436:	141c      	asrs	r4, r3, #16
    5438:	0c09      	lsrs	r1, r1, #16
    543a:	041b      	lsls	r3, r3, #16
    543c:	4319      	orrs	r1, r3
    543e:	c002      	stmia	r0!, {r1}
    5440:	45b9      	cmp	r9, r7
    5442:	d2df      	bcs.n	5404 <quorem+0x68>
    5444:	9b03      	ldr	r3, [sp, #12]
    5446:	464e      	mov	r6, r9
    5448:	4699      	mov	r9, r3
    544a:	465b      	mov	r3, fp
    544c:	681b      	ldr	r3, [r3, #0]
    544e:	4654      	mov	r4, sl
    5450:	2b00      	cmp	r3, #0
    5452:	d10e      	bne.n	5472 <quorem+0xd6>
    5454:	465b      	mov	r3, fp
    5456:	9a01      	ldr	r2, [sp, #4]
    5458:	3b04      	subs	r3, #4
    545a:	429a      	cmp	r2, r3
    545c:	d304      	bcc.n	5468 <quorem+0xcc>
    545e:	e006      	b.n	546e <quorem+0xd2>
    5460:	3b04      	subs	r3, #4
    5462:	3c01      	subs	r4, #1
    5464:	429a      	cmp	r2, r3
    5466:	d202      	bcs.n	546e <quorem+0xd2>
    5468:	6819      	ldr	r1, [r3, #0]
    546a:	2900      	cmp	r1, #0
    546c:	d0f8      	beq.n	5460 <quorem+0xc4>
    546e:	4643      	mov	r3, r8
    5470:	611c      	str	r4, [r3, #16]
    5472:	9902      	ldr	r1, [sp, #8]
    5474:	4640      	mov	r0, r8
    5476:	f001 fe91 	bl	719c <__mcmp>
    547a:	2800      	cmp	r0, #0
    547c:	db2f      	blt.n	54de <quorem+0x142>
    547e:	464f      	mov	r7, r9
    5480:	2000      	movs	r0, #0
    5482:	9b00      	ldr	r3, [sp, #0]
    5484:	9d01      	ldr	r5, [sp, #4]
    5486:	3301      	adds	r3, #1
    5488:	9300      	str	r3, [sp, #0]
    548a:	682b      	ldr	r3, [r5, #0]
    548c:	cf02      	ldmia	r7!, {r1}
    548e:	041a      	lsls	r2, r3, #16
    5490:	0c12      	lsrs	r2, r2, #16
    5492:	1810      	adds	r0, r2, r0
    5494:	040a      	lsls	r2, r1, #16
    5496:	0c12      	lsrs	r2, r2, #16
    5498:	1a82      	subs	r2, r0, r2
    549a:	0c09      	lsrs	r1, r1, #16
    549c:	0c1b      	lsrs	r3, r3, #16
    549e:	1a5b      	subs	r3, r3, r1
    54a0:	1411      	asrs	r1, r2, #16
    54a2:	185b      	adds	r3, r3, r1
    54a4:	0412      	lsls	r2, r2, #16
    54a6:	1418      	asrs	r0, r3, #16
    54a8:	0c12      	lsrs	r2, r2, #16
    54aa:	041b      	lsls	r3, r3, #16
    54ac:	4313      	orrs	r3, r2
    54ae:	c508      	stmia	r5!, {r3}
    54b0:	42be      	cmp	r6, r7
    54b2:	d2ea      	bcs.n	548a <quorem+0xee>
    54b4:	9901      	ldr	r1, [sp, #4]
    54b6:	00a3      	lsls	r3, r4, #2
    54b8:	468c      	mov	ip, r1
    54ba:	4463      	add	r3, ip
    54bc:	681a      	ldr	r2, [r3, #0]
    54be:	2a00      	cmp	r2, #0
    54c0:	d10d      	bne.n	54de <quorem+0x142>
    54c2:	3b04      	subs	r3, #4
    54c4:	000a      	movs	r2, r1
    54c6:	4299      	cmp	r1, r3
    54c8:	d304      	bcc.n	54d4 <quorem+0x138>
    54ca:	e006      	b.n	54da <quorem+0x13e>
    54cc:	3b04      	subs	r3, #4
    54ce:	3c01      	subs	r4, #1
    54d0:	429a      	cmp	r2, r3
    54d2:	d202      	bcs.n	54da <quorem+0x13e>
    54d4:	6819      	ldr	r1, [r3, #0]
    54d6:	2900      	cmp	r1, #0
    54d8:	d0f8      	beq.n	54cc <quorem+0x130>
    54da:	4643      	mov	r3, r8
    54dc:	611c      	str	r4, [r3, #16]
    54de:	9800      	ldr	r0, [sp, #0]
    54e0:	b005      	add	sp, #20
    54e2:	bc3c      	pop	{r2, r3, r4, r5}
    54e4:	4690      	mov	r8, r2
    54e6:	4699      	mov	r9, r3
    54e8:	46a2      	mov	sl, r4
    54ea:	46ab      	mov	fp, r5
    54ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
    54ee:	46c0      	nop			; (mov r8, r8)

000054f0 <_dtoa_r>:
    54f0:	b5f0      	push	{r4, r5, r6, r7, lr}
    54f2:	4657      	mov	r7, sl
    54f4:	464e      	mov	r6, r9
    54f6:	4645      	mov	r5, r8
    54f8:	46de      	mov	lr, fp
    54fa:	b5e0      	push	{r5, r6, r7, lr}
    54fc:	6c01      	ldr	r1, [r0, #64]	; 0x40
    54fe:	b099      	sub	sp, #100	; 0x64
    5500:	4682      	mov	sl, r0
    5502:	001d      	movs	r5, r3
    5504:	0016      	movs	r6, r2
    5506:	001f      	movs	r7, r3
    5508:	2900      	cmp	r1, #0
    550a:	d009      	beq.n	5520 <_dtoa_r+0x30>
    550c:	2301      	movs	r3, #1
    550e:	6c42      	ldr	r2, [r0, #68]	; 0x44
    5510:	4093      	lsls	r3, r2
    5512:	604a      	str	r2, [r1, #4]
    5514:	608b      	str	r3, [r1, #8]
    5516:	f001 fc35 	bl	6d84 <_Bfree>
    551a:	2300      	movs	r3, #0
    551c:	4652      	mov	r2, sl
    551e:	6413      	str	r3, [r2, #64]	; 0x40
    5520:	46b8      	mov	r8, r7
    5522:	2f00      	cmp	r7, #0
    5524:	db37      	blt.n	5596 <_dtoa_r+0xa6>
    5526:	2300      	movs	r3, #0
    5528:	9a25      	ldr	r2, [sp, #148]	; 0x94
    552a:	6013      	str	r3, [r2, #0]
    552c:	4642      	mov	r2, r8
    552e:	4bd6      	ldr	r3, [pc, #856]	; (5888 <_dtoa_r+0x398>)
    5530:	401a      	ands	r2, r3
    5532:	429a      	cmp	r2, r3
    5534:	d018      	beq.n	5568 <_dtoa_r+0x78>
    5536:	2200      	movs	r2, #0
    5538:	2300      	movs	r3, #0
    553a:	0030      	movs	r0, r6
    553c:	0039      	movs	r1, r7
    553e:	f7fd f9ed 	bl	291c <__aeabi_dcmpeq>
    5542:	2800      	cmp	r0, #0
    5544:	d02f      	beq.n	55a6 <_dtoa_r+0xb6>
    5546:	2301      	movs	r3, #1
    5548:	9a24      	ldr	r2, [sp, #144]	; 0x90
    554a:	6013      	str	r3, [r2, #0]
    554c:	9b26      	ldr	r3, [sp, #152]	; 0x98
    554e:	2b00      	cmp	r3, #0
    5550:	d100      	bne.n	5554 <_dtoa_r+0x64>
    5552:	e22a      	b.n	59aa <_dtoa_r+0x4ba>
    5554:	48cd      	ldr	r0, [pc, #820]	; (588c <_dtoa_r+0x39c>)
    5556:	6018      	str	r0, [r3, #0]
    5558:	3801      	subs	r0, #1
    555a:	b019      	add	sp, #100	; 0x64
    555c:	bc3c      	pop	{r2, r3, r4, r5}
    555e:	4690      	mov	r8, r2
    5560:	4699      	mov	r9, r3
    5562:	46a2      	mov	sl, r4
    5564:	46ab      	mov	fp, r5
    5566:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5568:	4bc9      	ldr	r3, [pc, #804]	; (5890 <_dtoa_r+0x3a0>)
    556a:	9a24      	ldr	r2, [sp, #144]	; 0x90
    556c:	6013      	str	r3, [r2, #0]
    556e:	2e00      	cmp	r6, #0
    5570:	d10b      	bne.n	558a <_dtoa_r+0x9a>
    5572:	4643      	mov	r3, r8
    5574:	0318      	lsls	r0, r3, #12
    5576:	d108      	bne.n	558a <_dtoa_r+0x9a>
    5578:	9b26      	ldr	r3, [sp, #152]	; 0x98
    557a:	48c6      	ldr	r0, [pc, #792]	; (5894 <_dtoa_r+0x3a4>)
    557c:	2b00      	cmp	r3, #0
    557e:	d0ec      	beq.n	555a <_dtoa_r+0x6a>
    5580:	0003      	movs	r3, r0
    5582:	3308      	adds	r3, #8
    5584:	9a26      	ldr	r2, [sp, #152]	; 0x98
    5586:	6013      	str	r3, [r2, #0]
    5588:	e7e7      	b.n	555a <_dtoa_r+0x6a>
    558a:	9b26      	ldr	r3, [sp, #152]	; 0x98
    558c:	48c2      	ldr	r0, [pc, #776]	; (5898 <_dtoa_r+0x3a8>)
    558e:	2b00      	cmp	r3, #0
    5590:	d0e3      	beq.n	555a <_dtoa_r+0x6a>
    5592:	1cc3      	adds	r3, r0, #3
    5594:	e7f6      	b.n	5584 <_dtoa_r+0x94>
    5596:	2301      	movs	r3, #1
    5598:	9a25      	ldr	r2, [sp, #148]	; 0x94
    559a:	0068      	lsls	r0, r5, #1
    559c:	6013      	str	r3, [r2, #0]
    559e:	0843      	lsrs	r3, r0, #1
    55a0:	4698      	mov	r8, r3
    55a2:	001f      	movs	r7, r3
    55a4:	e7c2      	b.n	552c <_dtoa_r+0x3c>
    55a6:	ab16      	add	r3, sp, #88	; 0x58
    55a8:	9301      	str	r3, [sp, #4]
    55aa:	ab17      	add	r3, sp, #92	; 0x5c
    55ac:	9300      	str	r3, [sp, #0]
    55ae:	0032      	movs	r2, r6
    55b0:	003b      	movs	r3, r7
    55b2:	4650      	mov	r0, sl
    55b4:	f001 fea8 	bl	7308 <__d2b>
    55b8:	4643      	mov	r3, r8
    55ba:	4683      	mov	fp, r0
    55bc:	0d1a      	lsrs	r2, r3, #20
    55be:	d100      	bne.n	55c2 <_dtoa_r+0xd2>
    55c0:	e1d6      	b.n	5970 <_dtoa_r+0x480>
    55c2:	033b      	lsls	r3, r7, #12
    55c4:	4cb5      	ldr	r4, [pc, #724]	; (589c <_dtoa_r+0x3ac>)
    55c6:	0b1b      	lsrs	r3, r3, #12
    55c8:	431c      	orrs	r4, r3
    55ca:	4bb5      	ldr	r3, [pc, #724]	; (58a0 <_dtoa_r+0x3b0>)
    55cc:	0030      	movs	r0, r6
    55ce:	4698      	mov	r8, r3
    55d0:	9b16      	ldr	r3, [sp, #88]	; 0x58
    55d2:	0021      	movs	r1, r4
    55d4:	4699      	mov	r9, r3
    55d6:	2300      	movs	r3, #0
    55d8:	4490      	add	r8, r2
    55da:	930f      	str	r3, [sp, #60]	; 0x3c
    55dc:	2200      	movs	r2, #0
    55de:	4bb1      	ldr	r3, [pc, #708]	; (58a4 <_dtoa_r+0x3b4>)
    55e0:	f7ff f83e 	bl	4660 <__aeabi_dsub>
    55e4:	4ab0      	ldr	r2, [pc, #704]	; (58a8 <_dtoa_r+0x3b8>)
    55e6:	4bb1      	ldr	r3, [pc, #708]	; (58ac <_dtoa_r+0x3bc>)
    55e8:	f7fe fdba 	bl	4160 <__aeabi_dmul>
    55ec:	4ab0      	ldr	r2, [pc, #704]	; (58b0 <_dtoa_r+0x3c0>)
    55ee:	4bb1      	ldr	r3, [pc, #708]	; (58b4 <_dtoa_r+0x3c4>)
    55f0:	f7fd fe72 	bl	32d8 <__aeabi_dadd>
    55f4:	0004      	movs	r4, r0
    55f6:	4640      	mov	r0, r8
    55f8:	000d      	movs	r5, r1
    55fa:	f7ff fb7b 	bl	4cf4 <__aeabi_i2d>
    55fe:	4aae      	ldr	r2, [pc, #696]	; (58b8 <_dtoa_r+0x3c8>)
    5600:	4bae      	ldr	r3, [pc, #696]	; (58bc <_dtoa_r+0x3cc>)
    5602:	f7fe fdad 	bl	4160 <__aeabi_dmul>
    5606:	0002      	movs	r2, r0
    5608:	000b      	movs	r3, r1
    560a:	0020      	movs	r0, r4
    560c:	0029      	movs	r1, r5
    560e:	f7fd fe63 	bl	32d8 <__aeabi_dadd>
    5612:	0004      	movs	r4, r0
    5614:	000d      	movs	r5, r1
    5616:	f7ff fb39 	bl	4c8c <__aeabi_d2iz>
    561a:	2200      	movs	r2, #0
    561c:	9003      	str	r0, [sp, #12]
    561e:	2300      	movs	r3, #0
    5620:	0020      	movs	r0, r4
    5622:	0029      	movs	r1, r5
    5624:	f7fd f980 	bl	2928 <__aeabi_dcmplt>
    5628:	2800      	cmp	r0, #0
    562a:	d000      	beq.n	562e <_dtoa_r+0x13e>
    562c:	e2b1      	b.n	5b92 <_dtoa_r+0x6a2>
    562e:	2301      	movs	r3, #1
    5630:	9c03      	ldr	r4, [sp, #12]
    5632:	930c      	str	r3, [sp, #48]	; 0x30
    5634:	2c16      	cmp	r4, #22
    5636:	d810      	bhi.n	565a <_dtoa_r+0x16a>
    5638:	49a1      	ldr	r1, [pc, #644]	; (58c0 <_dtoa_r+0x3d0>)
    563a:	00e3      	lsls	r3, r4, #3
    563c:	18c9      	adds	r1, r1, r3
    563e:	0032      	movs	r2, r6
    5640:	6808      	ldr	r0, [r1, #0]
    5642:	6849      	ldr	r1, [r1, #4]
    5644:	003b      	movs	r3, r7
    5646:	f7fd f983 	bl	2950 <__aeabi_dcmpgt>
    564a:	2800      	cmp	r0, #0
    564c:	d100      	bne.n	5650 <_dtoa_r+0x160>
    564e:	e31d      	b.n	5c8c <_dtoa_r+0x79c>
    5650:	0023      	movs	r3, r4
    5652:	3b01      	subs	r3, #1
    5654:	9303      	str	r3, [sp, #12]
    5656:	2300      	movs	r3, #0
    5658:	930c      	str	r3, [sp, #48]	; 0x30
    565a:	464b      	mov	r3, r9
    565c:	4642      	mov	r2, r8
    565e:	1a9a      	subs	r2, r3, r2
    5660:	2300      	movs	r3, #0
    5662:	9306      	str	r3, [sp, #24]
    5664:	0013      	movs	r3, r2
    5666:	3b01      	subs	r3, #1
    5668:	9304      	str	r3, [sp, #16]
    566a:	d500      	bpl.n	566e <_dtoa_r+0x17e>
    566c:	e2a1      	b.n	5bb2 <_dtoa_r+0x6c2>
    566e:	9b03      	ldr	r3, [sp, #12]
    5670:	2b00      	cmp	r3, #0
    5672:	da00      	bge.n	5676 <_dtoa_r+0x186>
    5674:	e284      	b.n	5b80 <_dtoa_r+0x690>
    5676:	469c      	mov	ip, r3
    5678:	930d      	str	r3, [sp, #52]	; 0x34
    567a:	2300      	movs	r3, #0
    567c:	9a04      	ldr	r2, [sp, #16]
    567e:	4699      	mov	r9, r3
    5680:	0011      	movs	r1, r2
    5682:	4461      	add	r1, ip
    5684:	9104      	str	r1, [sp, #16]
    5686:	9b22      	ldr	r3, [sp, #136]	; 0x88
    5688:	2b09      	cmp	r3, #9
    568a:	d900      	bls.n	568e <_dtoa_r+0x19e>
    568c:	e18f      	b.n	59ae <_dtoa_r+0x4be>
    568e:	2401      	movs	r4, #1
    5690:	2b05      	cmp	r3, #5
    5692:	dd02      	ble.n	569a <_dtoa_r+0x1aa>
    5694:	2400      	movs	r4, #0
    5696:	3b04      	subs	r3, #4
    5698:	9322      	str	r3, [sp, #136]	; 0x88
    569a:	9b22      	ldr	r3, [sp, #136]	; 0x88
    569c:	2b03      	cmp	r3, #3
    569e:	d101      	bne.n	56a4 <_dtoa_r+0x1b4>
    56a0:	f000 fcce 	bl	6040 <_dtoa_r+0xb50>
    56a4:	dc01      	bgt.n	56aa <_dtoa_r+0x1ba>
    56a6:	f000 fc92 	bl	5fce <_dtoa_r+0xade>
    56aa:	9b22      	ldr	r3, [sp, #136]	; 0x88
    56ac:	2b04      	cmp	r3, #4
    56ae:	d101      	bne.n	56b4 <_dtoa_r+0x1c4>
    56b0:	f000 fc40 	bl	5f34 <_dtoa_r+0xa44>
    56b4:	2301      	movs	r3, #1
    56b6:	930b      	str	r3, [sp, #44]	; 0x2c
    56b8:	9b22      	ldr	r3, [sp, #136]	; 0x88
    56ba:	2b05      	cmp	r3, #5
    56bc:	d001      	beq.n	56c2 <_dtoa_r+0x1d2>
    56be:	f000 fc8b 	bl	5fd8 <_dtoa_r+0xae8>
    56c2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    56c4:	9b03      	ldr	r3, [sp, #12]
    56c6:	4694      	mov	ip, r2
    56c8:	4463      	add	r3, ip
    56ca:	930e      	str	r3, [sp, #56]	; 0x38
    56cc:	3301      	adds	r3, #1
    56ce:	9307      	str	r3, [sp, #28]
    56d0:	1e1d      	subs	r5, r3, #0
    56d2:	dc01      	bgt.n	56d8 <_dtoa_r+0x1e8>
    56d4:	f000 fd49 	bl	616a <_dtoa_r+0xc7a>
    56d8:	9b07      	ldr	r3, [sp, #28]
    56da:	4698      	mov	r8, r3
    56dc:	2300      	movs	r3, #0
    56de:	4652      	mov	r2, sl
    56e0:	2100      	movs	r1, #0
    56e2:	6453      	str	r3, [r2, #68]	; 0x44
    56e4:	2d17      	cmp	r5, #23
    56e6:	d90a      	bls.n	56fe <_dtoa_r+0x20e>
    56e8:	2201      	movs	r2, #1
    56ea:	3304      	adds	r3, #4
    56ec:	005b      	lsls	r3, r3, #1
    56ee:	0018      	movs	r0, r3
    56f0:	3014      	adds	r0, #20
    56f2:	0011      	movs	r1, r2
    56f4:	3201      	adds	r2, #1
    56f6:	4285      	cmp	r5, r0
    56f8:	d2f8      	bcs.n	56ec <_dtoa_r+0x1fc>
    56fa:	4653      	mov	r3, sl
    56fc:	6459      	str	r1, [r3, #68]	; 0x44
    56fe:	4650      	mov	r0, sl
    5700:	f001 fb18 	bl	6d34 <_Balloc>
    5704:	4653      	mov	r3, sl
    5706:	6418      	str	r0, [r3, #64]	; 0x40
    5708:	4643      	mov	r3, r8
    570a:	900a      	str	r0, [sp, #40]	; 0x28
    570c:	2b0e      	cmp	r3, #14
    570e:	d900      	bls.n	5712 <_dtoa_r+0x222>
    5710:	e161      	b.n	59d6 <_dtoa_r+0x4e6>
    5712:	2c00      	cmp	r4, #0
    5714:	d100      	bne.n	5718 <_dtoa_r+0x228>
    5716:	e15e      	b.n	59d6 <_dtoa_r+0x4e6>
    5718:	9610      	str	r6, [sp, #64]	; 0x40
    571a:	9711      	str	r7, [sp, #68]	; 0x44
    571c:	9e03      	ldr	r6, [sp, #12]
    571e:	2e00      	cmp	r6, #0
    5720:	dc01      	bgt.n	5726 <_dtoa_r+0x236>
    5722:	f000 fd25 	bl	6170 <_dtoa_r+0xc80>
    5726:	0032      	movs	r2, r6
    5728:	210f      	movs	r1, #15
    572a:	4b65      	ldr	r3, [pc, #404]	; (58c0 <_dtoa_r+0x3d0>)
    572c:	400a      	ands	r2, r1
    572e:	00d2      	lsls	r2, r2, #3
    5730:	189b      	adds	r3, r3, r2
    5732:	1136      	asrs	r6, r6, #4
    5734:	681c      	ldr	r4, [r3, #0]
    5736:	685d      	ldr	r5, [r3, #4]
    5738:	06f3      	lsls	r3, r6, #27
    573a:	d401      	bmi.n	5740 <_dtoa_r+0x250>
    573c:	f000 fcca 	bl	60d4 <_dtoa_r+0xbe4>
    5740:	4b60      	ldr	r3, [pc, #384]	; (58c4 <_dtoa_r+0x3d4>)
    5742:	400e      	ands	r6, r1
    5744:	6a1a      	ldr	r2, [r3, #32]
    5746:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    5748:	9810      	ldr	r0, [sp, #64]	; 0x40
    574a:	9911      	ldr	r1, [sp, #68]	; 0x44
    574c:	f7fe f8d4 	bl	38f8 <__aeabi_ddiv>
    5750:	2303      	movs	r3, #3
    5752:	4698      	mov	r8, r3
    5754:	9008      	str	r0, [sp, #32]
    5756:	9109      	str	r1, [sp, #36]	; 0x24
    5758:	2e00      	cmp	r6, #0
    575a:	d011      	beq.n	5780 <_dtoa_r+0x290>
    575c:	4f59      	ldr	r7, [pc, #356]	; (58c4 <_dtoa_r+0x3d4>)
    575e:	2301      	movs	r3, #1
    5760:	4233      	tst	r3, r6
    5762:	d009      	beq.n	5778 <_dtoa_r+0x288>
    5764:	469c      	mov	ip, r3
    5766:	683a      	ldr	r2, [r7, #0]
    5768:	687b      	ldr	r3, [r7, #4]
    576a:	0020      	movs	r0, r4
    576c:	0029      	movs	r1, r5
    576e:	44e0      	add	r8, ip
    5770:	f7fe fcf6 	bl	4160 <__aeabi_dmul>
    5774:	0004      	movs	r4, r0
    5776:	000d      	movs	r5, r1
    5778:	1076      	asrs	r6, r6, #1
    577a:	3708      	adds	r7, #8
    577c:	2e00      	cmp	r6, #0
    577e:	d1ee      	bne.n	575e <_dtoa_r+0x26e>
    5780:	0022      	movs	r2, r4
    5782:	9808      	ldr	r0, [sp, #32]
    5784:	9909      	ldr	r1, [sp, #36]	; 0x24
    5786:	002b      	movs	r3, r5
    5788:	f7fe f8b6 	bl	38f8 <__aeabi_ddiv>
    578c:	0006      	movs	r6, r0
    578e:	000f      	movs	r7, r1
    5790:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    5792:	2b00      	cmp	r3, #0
    5794:	d009      	beq.n	57aa <_dtoa_r+0x2ba>
    5796:	2200      	movs	r2, #0
    5798:	4b40      	ldr	r3, [pc, #256]	; (589c <_dtoa_r+0x3ac>)
    579a:	0030      	movs	r0, r6
    579c:	0039      	movs	r1, r7
    579e:	f7fd f8c3 	bl	2928 <__aeabi_dcmplt>
    57a2:	2800      	cmp	r0, #0
    57a4:	d001      	beq.n	57aa <_dtoa_r+0x2ba>
    57a6:	f000 fdc2 	bl	632e <_dtoa_r+0xe3e>
    57aa:	4640      	mov	r0, r8
    57ac:	f7ff faa2 	bl	4cf4 <__aeabi_i2d>
    57b0:	0032      	movs	r2, r6
    57b2:	003b      	movs	r3, r7
    57b4:	f7fe fcd4 	bl	4160 <__aeabi_dmul>
    57b8:	2200      	movs	r2, #0
    57ba:	4b43      	ldr	r3, [pc, #268]	; (58c8 <_dtoa_r+0x3d8>)
    57bc:	f7fd fd8c 	bl	32d8 <__aeabi_dadd>
    57c0:	4a42      	ldr	r2, [pc, #264]	; (58cc <_dtoa_r+0x3dc>)
    57c2:	000b      	movs	r3, r1
    57c4:	4694      	mov	ip, r2
    57c6:	4463      	add	r3, ip
    57c8:	9008      	str	r0, [sp, #32]
    57ca:	9109      	str	r1, [sp, #36]	; 0x24
    57cc:	9309      	str	r3, [sp, #36]	; 0x24
    57ce:	9b07      	ldr	r3, [sp, #28]
    57d0:	2b00      	cmp	r3, #0
    57d2:	d101      	bne.n	57d8 <_dtoa_r+0x2e8>
    57d4:	f000 fc50 	bl	6078 <_dtoa_r+0xb88>
    57d8:	9b03      	ldr	r3, [sp, #12]
    57da:	9313      	str	r3, [sp, #76]	; 0x4c
    57dc:	9b07      	ldr	r3, [sp, #28]
    57de:	9312      	str	r3, [sp, #72]	; 0x48
    57e0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    57e2:	2b00      	cmp	r3, #0
    57e4:	d101      	bne.n	57ea <_dtoa_r+0x2fa>
    57e6:	f000 fd1d 	bl	6224 <_dtoa_r+0xd34>
    57ea:	9b12      	ldr	r3, [sp, #72]	; 0x48
    57ec:	2000      	movs	r0, #0
    57ee:	1e5a      	subs	r2, r3, #1
    57f0:	4b33      	ldr	r3, [pc, #204]	; (58c0 <_dtoa_r+0x3d0>)
    57f2:	00d2      	lsls	r2, r2, #3
    57f4:	189b      	adds	r3, r3, r2
    57f6:	681a      	ldr	r2, [r3, #0]
    57f8:	685b      	ldr	r3, [r3, #4]
    57fa:	4935      	ldr	r1, [pc, #212]	; (58d0 <_dtoa_r+0x3e0>)
    57fc:	f7fe f87c 	bl	38f8 <__aeabi_ddiv>
    5800:	9a08      	ldr	r2, [sp, #32]
    5802:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5804:	f7fe ff2c 	bl	4660 <__aeabi_dsub>
    5808:	9008      	str	r0, [sp, #32]
    580a:	9109      	str	r1, [sp, #36]	; 0x24
    580c:	0039      	movs	r1, r7
    580e:	0030      	movs	r0, r6
    5810:	f7ff fa3c 	bl	4c8c <__aeabi_d2iz>
    5814:	0004      	movs	r4, r0
    5816:	f7ff fa6d 	bl	4cf4 <__aeabi_i2d>
    581a:	0002      	movs	r2, r0
    581c:	000b      	movs	r3, r1
    581e:	0030      	movs	r0, r6
    5820:	0039      	movs	r1, r7
    5822:	f7fe ff1d 	bl	4660 <__aeabi_dsub>
    5826:	0005      	movs	r5, r0
    5828:	000e      	movs	r6, r1
    582a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    582c:	3430      	adds	r4, #48	; 0x30
    582e:	1c51      	adds	r1, r2, #1
    5830:	b2e7      	uxtb	r7, r4
    5832:	9114      	str	r1, [sp, #80]	; 0x50
    5834:	7017      	strb	r7, [r2, #0]
    5836:	0033      	movs	r3, r6
    5838:	9808      	ldr	r0, [sp, #32]
    583a:	9909      	ldr	r1, [sp, #36]	; 0x24
    583c:	002a      	movs	r2, r5
    583e:	f7fd f887 	bl	2950 <__aeabi_dcmpgt>
    5842:	2800      	cmp	r0, #0
    5844:	d001      	beq.n	584a <_dtoa_r+0x35a>
    5846:	f000 fdfe 	bl	6446 <_dtoa_r+0xf56>
    584a:	002a      	movs	r2, r5
    584c:	0033      	movs	r3, r6
    584e:	2000      	movs	r0, #0
    5850:	4912      	ldr	r1, [pc, #72]	; (589c <_dtoa_r+0x3ac>)
    5852:	f7fe ff05 	bl	4660 <__aeabi_dsub>
    5856:	0002      	movs	r2, r0
    5858:	000b      	movs	r3, r1
    585a:	9808      	ldr	r0, [sp, #32]
    585c:	9909      	ldr	r1, [sp, #36]	; 0x24
    585e:	f7fd f877 	bl	2950 <__aeabi_dcmpgt>
    5862:	2800      	cmp	r0, #0
    5864:	d001      	beq.n	586a <_dtoa_r+0x37a>
    5866:	f000 fde7 	bl	6438 <_dtoa_r+0xf48>
    586a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    586c:	2b01      	cmp	r3, #1
    586e:	d101      	bne.n	5874 <_dtoa_r+0x384>
    5870:	f000 fc78 	bl	6164 <_dtoa_r+0xc74>
    5874:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5876:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5878:	4694      	mov	ip, r2
    587a:	4463      	add	r3, ip
    587c:	4698      	mov	r8, r3
    587e:	464b      	mov	r3, r9
    5880:	9312      	str	r3, [sp, #72]	; 0x48
    5882:	9b14      	ldr	r3, [sp, #80]	; 0x50
    5884:	4699      	mov	r9, r3
    5886:	e038      	b.n	58fa <_dtoa_r+0x40a>
    5888:	7ff00000 	.word	0x7ff00000
    588c:	00009ea9 	.word	0x00009ea9
    5890:	0000270f 	.word	0x0000270f
    5894:	00009e98 	.word	0x00009e98
    5898:	00009ea4 	.word	0x00009ea4
    589c:	3ff00000 	.word	0x3ff00000
    58a0:	fffffc01 	.word	0xfffffc01
    58a4:	3ff80000 	.word	0x3ff80000
    58a8:	636f4361 	.word	0x636f4361
    58ac:	3fd287a7 	.word	0x3fd287a7
    58b0:	8b60c8b3 	.word	0x8b60c8b3
    58b4:	3fc68a28 	.word	0x3fc68a28
    58b8:	509f79fb 	.word	0x509f79fb
    58bc:	3fd34413 	.word	0x3fd34413
    58c0:	00009ed8 	.word	0x00009ed8
    58c4:	00009eb0 	.word	0x00009eb0
    58c8:	401c0000 	.word	0x401c0000
    58cc:	fcc00000 	.word	0xfcc00000
    58d0:	3fe00000 	.word	0x3fe00000
    58d4:	002a      	movs	r2, r5
    58d6:	0033      	movs	r3, r6
    58d8:	2000      	movs	r0, #0
    58da:	49b9      	ldr	r1, [pc, #740]	; (5bc0 <_dtoa_r+0x6d0>)
    58dc:	f7fe fec0 	bl	4660 <__aeabi_dsub>
    58e0:	9a08      	ldr	r2, [sp, #32]
    58e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
    58e4:	f7fd f820 	bl	2928 <__aeabi_dcmplt>
    58e8:	2800      	cmp	r0, #0
    58ea:	d001      	beq.n	58f0 <_dtoa_r+0x400>
    58ec:	f000 fd74 	bl	63d8 <_dtoa_r+0xee8>
    58f0:	46a1      	mov	r9, r4
    58f2:	4544      	cmp	r4, r8
    58f4:	d101      	bne.n	58fa <_dtoa_r+0x40a>
    58f6:	f000 fc33 	bl	6160 <_dtoa_r+0xc70>
    58fa:	9808      	ldr	r0, [sp, #32]
    58fc:	9909      	ldr	r1, [sp, #36]	; 0x24
    58fe:	2200      	movs	r2, #0
    5900:	4bb0      	ldr	r3, [pc, #704]	; (5bc4 <_dtoa_r+0x6d4>)
    5902:	f7fe fc2d 	bl	4160 <__aeabi_dmul>
    5906:	2200      	movs	r2, #0
    5908:	4bae      	ldr	r3, [pc, #696]	; (5bc4 <_dtoa_r+0x6d4>)
    590a:	9008      	str	r0, [sp, #32]
    590c:	9109      	str	r1, [sp, #36]	; 0x24
    590e:	0028      	movs	r0, r5
    5910:	0031      	movs	r1, r6
    5912:	f7fe fc25 	bl	4160 <__aeabi_dmul>
    5916:	000d      	movs	r5, r1
    5918:	0004      	movs	r4, r0
    591a:	f7ff f9b7 	bl	4c8c <__aeabi_d2iz>
    591e:	0007      	movs	r7, r0
    5920:	f7ff f9e8 	bl	4cf4 <__aeabi_i2d>
    5924:	0002      	movs	r2, r0
    5926:	000b      	movs	r3, r1
    5928:	0020      	movs	r0, r4
    592a:	0029      	movs	r1, r5
    592c:	f7fe fe98 	bl	4660 <__aeabi_dsub>
    5930:	464b      	mov	r3, r9
    5932:	3730      	adds	r7, #48	; 0x30
    5934:	b2ff      	uxtb	r7, r7
    5936:	1c5c      	adds	r4, r3, #1
    5938:	701f      	strb	r7, [r3, #0]
    593a:	9a08      	ldr	r2, [sp, #32]
    593c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    593e:	0005      	movs	r5, r0
    5940:	000e      	movs	r6, r1
    5942:	f7fc fff1 	bl	2928 <__aeabi_dcmplt>
    5946:	2800      	cmp	r0, #0
    5948:	d0c4      	beq.n	58d4 <_dtoa_r+0x3e4>
    594a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    594c:	9303      	str	r3, [sp, #12]
    594e:	4659      	mov	r1, fp
    5950:	4650      	mov	r0, sl
    5952:	f001 fa17 	bl	6d84 <_Bfree>
    5956:	2300      	movs	r3, #0
    5958:	7023      	strb	r3, [r4, #0]
    595a:	9b03      	ldr	r3, [sp, #12]
    595c:	9a24      	ldr	r2, [sp, #144]	; 0x90
    595e:	3301      	adds	r3, #1
    5960:	6013      	str	r3, [r2, #0]
    5962:	9b26      	ldr	r3, [sp, #152]	; 0x98
    5964:	2b00      	cmp	r3, #0
    5966:	d100      	bne.n	596a <_dtoa_r+0x47a>
    5968:	e3a8      	b.n	60bc <_dtoa_r+0xbcc>
    596a:	601c      	str	r4, [r3, #0]
    596c:	980a      	ldr	r0, [sp, #40]	; 0x28
    596e:	e5f4      	b.n	555a <_dtoa_r+0x6a>
    5970:	9b16      	ldr	r3, [sp, #88]	; 0x58
    5972:	4699      	mov	r9, r3
    5974:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    5976:	444b      	add	r3, r9
    5978:	001c      	movs	r4, r3
    597a:	4b93      	ldr	r3, [pc, #588]	; (5bc8 <_dtoa_r+0x6d8>)
    597c:	18e3      	adds	r3, r4, r3
    597e:	2b20      	cmp	r3, #32
    5980:	dc00      	bgt.n	5984 <_dtoa_r+0x494>
    5982:	e17e      	b.n	5c82 <_dtoa_r+0x792>
    5984:	0031      	movs	r1, r6
    5986:	4a91      	ldr	r2, [pc, #580]	; (5bcc <_dtoa_r+0x6dc>)
    5988:	4640      	mov	r0, r8
    598a:	18a2      	adds	r2, r4, r2
    598c:	40d1      	lsrs	r1, r2
    598e:	000a      	movs	r2, r1
    5990:	2140      	movs	r1, #64	; 0x40
    5992:	1acb      	subs	r3, r1, r3
    5994:	4098      	lsls	r0, r3
    5996:	4310      	orrs	r0, r2
    5998:	f7ff f9ee 	bl	4d78 <__aeabi_ui2d>
    599c:	1e63      	subs	r3, r4, #1
    599e:	4698      	mov	r8, r3
    59a0:	2301      	movs	r3, #1
    59a2:	4d8b      	ldr	r5, [pc, #556]	; (5bd0 <_dtoa_r+0x6e0>)
    59a4:	930f      	str	r3, [sp, #60]	; 0x3c
    59a6:	1949      	adds	r1, r1, r5
    59a8:	e618      	b.n	55dc <_dtoa_r+0xec>
    59aa:	488a      	ldr	r0, [pc, #552]	; (5bd4 <_dtoa_r+0x6e4>)
    59ac:	e5d5      	b.n	555a <_dtoa_r+0x6a>
    59ae:	2300      	movs	r3, #0
    59b0:	4652      	mov	r2, sl
    59b2:	2100      	movs	r1, #0
    59b4:	6453      	str	r3, [r2, #68]	; 0x44
    59b6:	4650      	mov	r0, sl
    59b8:	f001 f9bc 	bl	6d34 <_Balloc>
    59bc:	4653      	mov	r3, sl
    59be:	6418      	str	r0, [r3, #64]	; 0x40
    59c0:	2301      	movs	r3, #1
    59c2:	425b      	negs	r3, r3
    59c4:	9307      	str	r3, [sp, #28]
    59c6:	930e      	str	r3, [sp, #56]	; 0x38
    59c8:	3302      	adds	r3, #2
    59ca:	2200      	movs	r2, #0
    59cc:	930b      	str	r3, [sp, #44]	; 0x2c
    59ce:	2300      	movs	r3, #0
    59d0:	900a      	str	r0, [sp, #40]	; 0x28
    59d2:	9223      	str	r2, [sp, #140]	; 0x8c
    59d4:	9322      	str	r3, [sp, #136]	; 0x88
    59d6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    59d8:	2b00      	cmp	r3, #0
    59da:	da00      	bge.n	59de <_dtoa_r+0x4ee>
    59dc:	e0ab      	b.n	5b36 <_dtoa_r+0x646>
    59de:	9a03      	ldr	r2, [sp, #12]
    59e0:	2a0e      	cmp	r2, #14
    59e2:	dd00      	ble.n	59e6 <_dtoa_r+0x4f6>
    59e4:	e0a7      	b.n	5b36 <_dtoa_r+0x646>
    59e6:	4b7c      	ldr	r3, [pc, #496]	; (5bd8 <_dtoa_r+0x6e8>)
    59e8:	00d2      	lsls	r2, r2, #3
    59ea:	189b      	adds	r3, r3, r2
    59ec:	685c      	ldr	r4, [r3, #4]
    59ee:	681b      	ldr	r3, [r3, #0]
    59f0:	9304      	str	r3, [sp, #16]
    59f2:	9405      	str	r4, [sp, #20]
    59f4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    59f6:	2b00      	cmp	r3, #0
    59f8:	da00      	bge.n	59fc <_dtoa_r+0x50c>
    59fa:	e2a7      	b.n	5f4c <_dtoa_r+0xa5c>
    59fc:	9c04      	ldr	r4, [sp, #16]
    59fe:	9d05      	ldr	r5, [sp, #20]
    5a00:	0030      	movs	r0, r6
    5a02:	0022      	movs	r2, r4
    5a04:	002b      	movs	r3, r5
    5a06:	0039      	movs	r1, r7
    5a08:	f7fd ff76 	bl	38f8 <__aeabi_ddiv>
    5a0c:	f7ff f93e 	bl	4c8c <__aeabi_d2iz>
    5a10:	4680      	mov	r8, r0
    5a12:	f7ff f96f 	bl	4cf4 <__aeabi_i2d>
    5a16:	0022      	movs	r2, r4
    5a18:	002b      	movs	r3, r5
    5a1a:	f7fe fba1 	bl	4160 <__aeabi_dmul>
    5a1e:	0002      	movs	r2, r0
    5a20:	000b      	movs	r3, r1
    5a22:	0030      	movs	r0, r6
    5a24:	0039      	movs	r1, r7
    5a26:	f7fe fe1b 	bl	4660 <__aeabi_dsub>
    5a2a:	4643      	mov	r3, r8
    5a2c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5a2e:	3330      	adds	r3, #48	; 0x30
    5a30:	7013      	strb	r3, [r2, #0]
    5a32:	9b07      	ldr	r3, [sp, #28]
    5a34:	0006      	movs	r6, r0
    5a36:	000f      	movs	r7, r1
    5a38:	1c54      	adds	r4, r2, #1
    5a3a:	2b01      	cmp	r3, #1
    5a3c:	d04e      	beq.n	5adc <_dtoa_r+0x5ec>
    5a3e:	2200      	movs	r2, #0
    5a40:	4b60      	ldr	r3, [pc, #384]	; (5bc4 <_dtoa_r+0x6d4>)
    5a42:	f7fe fb8d 	bl	4160 <__aeabi_dmul>
    5a46:	2200      	movs	r2, #0
    5a48:	2300      	movs	r3, #0
    5a4a:	0006      	movs	r6, r0
    5a4c:	000f      	movs	r7, r1
    5a4e:	f7fc ff65 	bl	291c <__aeabi_dcmpeq>
    5a52:	2800      	cmp	r0, #0
    5a54:	d000      	beq.n	5a58 <_dtoa_r+0x568>
    5a56:	e77a      	b.n	594e <_dtoa_r+0x45e>
    5a58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5a5a:	9a07      	ldr	r2, [sp, #28]
    5a5c:	1c9d      	adds	r5, r3, #2
    5a5e:	469c      	mov	ip, r3
    5a60:	465b      	mov	r3, fp
    5a62:	9306      	str	r3, [sp, #24]
    5a64:	4653      	mov	r3, sl
    5a66:	4462      	add	r2, ip
    5a68:	46aa      	mov	sl, r5
    5a6a:	9c04      	ldr	r4, [sp, #16]
    5a6c:	9d05      	ldr	r5, [sp, #20]
    5a6e:	4691      	mov	r9, r2
    5a70:	9307      	str	r3, [sp, #28]
    5a72:	e00f      	b.n	5a94 <_dtoa_r+0x5a4>
    5a74:	2200      	movs	r2, #0
    5a76:	4b53      	ldr	r3, [pc, #332]	; (5bc4 <_dtoa_r+0x6d4>)
    5a78:	f7fe fb72 	bl	4160 <__aeabi_dmul>
    5a7c:	2301      	movs	r3, #1
    5a7e:	469c      	mov	ip, r3
    5a80:	2200      	movs	r2, #0
    5a82:	2300      	movs	r3, #0
    5a84:	0006      	movs	r6, r0
    5a86:	000f      	movs	r7, r1
    5a88:	44e2      	add	sl, ip
    5a8a:	f7fc ff47 	bl	291c <__aeabi_dcmpeq>
    5a8e:	2800      	cmp	r0, #0
    5a90:	d000      	beq.n	5a94 <_dtoa_r+0x5a4>
    5a92:	e2d9      	b.n	6048 <_dtoa_r+0xb58>
    5a94:	0022      	movs	r2, r4
    5a96:	002b      	movs	r3, r5
    5a98:	0030      	movs	r0, r6
    5a9a:	0039      	movs	r1, r7
    5a9c:	f7fd ff2c 	bl	38f8 <__aeabi_ddiv>
    5aa0:	f7ff f8f4 	bl	4c8c <__aeabi_d2iz>
    5aa4:	4680      	mov	r8, r0
    5aa6:	f7ff f925 	bl	4cf4 <__aeabi_i2d>
    5aaa:	0022      	movs	r2, r4
    5aac:	002b      	movs	r3, r5
    5aae:	f7fe fb57 	bl	4160 <__aeabi_dmul>
    5ab2:	0002      	movs	r2, r0
    5ab4:	000b      	movs	r3, r1
    5ab6:	0030      	movs	r0, r6
    5ab8:	0039      	movs	r1, r7
    5aba:	f7fe fdd1 	bl	4660 <__aeabi_dsub>
    5abe:	4653      	mov	r3, sl
    5ac0:	4642      	mov	r2, r8
    5ac2:	3b01      	subs	r3, #1
    5ac4:	3230      	adds	r2, #48	; 0x30
    5ac6:	0006      	movs	r6, r0
    5ac8:	000f      	movs	r7, r1
    5aca:	46d3      	mov	fp, sl
    5acc:	701a      	strb	r2, [r3, #0]
    5ace:	45d1      	cmp	r9, sl
    5ad0:	d1d0      	bne.n	5a74 <_dtoa_r+0x584>
    5ad2:	9b06      	ldr	r3, [sp, #24]
    5ad4:	4654      	mov	r4, sl
    5ad6:	469b      	mov	fp, r3
    5ad8:	9b07      	ldr	r3, [sp, #28]
    5ada:	469a      	mov	sl, r3
    5adc:	0032      	movs	r2, r6
    5ade:	003b      	movs	r3, r7
    5ae0:	0030      	movs	r0, r6
    5ae2:	0039      	movs	r1, r7
    5ae4:	f7fd fbf8 	bl	32d8 <__aeabi_dadd>
    5ae8:	0006      	movs	r6, r0
    5aea:	000f      	movs	r7, r1
    5aec:	0002      	movs	r2, r0
    5aee:	000b      	movs	r3, r1
    5af0:	9804      	ldr	r0, [sp, #16]
    5af2:	9905      	ldr	r1, [sp, #20]
    5af4:	f7fc ff18 	bl	2928 <__aeabi_dcmplt>
    5af8:	2800      	cmp	r0, #0
    5afa:	d10c      	bne.n	5b16 <_dtoa_r+0x626>
    5afc:	9804      	ldr	r0, [sp, #16]
    5afe:	9905      	ldr	r1, [sp, #20]
    5b00:	0032      	movs	r2, r6
    5b02:	003b      	movs	r3, r7
    5b04:	f7fc ff0a 	bl	291c <__aeabi_dcmpeq>
    5b08:	2800      	cmp	r0, #0
    5b0a:	d100      	bne.n	5b0e <_dtoa_r+0x61e>
    5b0c:	e71f      	b.n	594e <_dtoa_r+0x45e>
    5b0e:	4643      	mov	r3, r8
    5b10:	07db      	lsls	r3, r3, #31
    5b12:	d400      	bmi.n	5b16 <_dtoa_r+0x626>
    5b14:	e71b      	b.n	594e <_dtoa_r+0x45e>
    5b16:	1e65      	subs	r5, r4, #1
    5b18:	782f      	ldrb	r7, [r5, #0]
    5b1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5b1c:	e006      	b.n	5b2c <_dtoa_r+0x63c>
    5b1e:	429d      	cmp	r5, r3
    5b20:	d100      	bne.n	5b24 <_dtoa_r+0x634>
    5b22:	e351      	b.n	61c8 <_dtoa_r+0xcd8>
    5b24:	3c02      	subs	r4, #2
    5b26:	7827      	ldrb	r7, [r4, #0]
    5b28:	002c      	movs	r4, r5
    5b2a:	3d01      	subs	r5, #1
    5b2c:	2f39      	cmp	r7, #57	; 0x39
    5b2e:	d0f6      	beq.n	5b1e <_dtoa_r+0x62e>
    5b30:	3701      	adds	r7, #1
    5b32:	702f      	strb	r7, [r5, #0]
    5b34:	e70b      	b.n	594e <_dtoa_r+0x45e>
    5b36:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    5b38:	2a00      	cmp	r2, #0
    5b3a:	d04f      	beq.n	5bdc <_dtoa_r+0x6ec>
    5b3c:	9a22      	ldr	r2, [sp, #136]	; 0x88
    5b3e:	2a01      	cmp	r2, #1
    5b40:	dc00      	bgt.n	5b44 <_dtoa_r+0x654>
    5b42:	e22c      	b.n	5f9e <_dtoa_r+0xaae>
    5b44:	9b07      	ldr	r3, [sp, #28]
    5b46:	1e5c      	subs	r4, r3, #1
    5b48:	464b      	mov	r3, r9
    5b4a:	45a1      	cmp	r9, r4
    5b4c:	da00      	bge.n	5b50 <_dtoa_r+0x660>
    5b4e:	e2b8      	b.n	60c2 <_dtoa_r+0xbd2>
    5b50:	1b1c      	subs	r4, r3, r4
    5b52:	9b07      	ldr	r3, [sp, #28]
    5b54:	2b00      	cmp	r3, #0
    5b56:	da00      	bge.n	5b5a <_dtoa_r+0x66a>
    5b58:	e3d4      	b.n	6304 <_dtoa_r+0xe14>
    5b5a:	9b06      	ldr	r3, [sp, #24]
    5b5c:	9308      	str	r3, [sp, #32]
    5b5e:	9b07      	ldr	r3, [sp, #28]
    5b60:	9a06      	ldr	r2, [sp, #24]
    5b62:	2101      	movs	r1, #1
    5b64:	4694      	mov	ip, r2
    5b66:	449c      	add	ip, r3
    5b68:	4662      	mov	r2, ip
    5b6a:	9206      	str	r2, [sp, #24]
    5b6c:	9a04      	ldr	r2, [sp, #16]
    5b6e:	4650      	mov	r0, sl
    5b70:	4694      	mov	ip, r2
    5b72:	449c      	add	ip, r3
    5b74:	4663      	mov	r3, ip
    5b76:	9304      	str	r3, [sp, #16]
    5b78:	f001 f99c 	bl	6eb4 <__i2b>
    5b7c:	4680      	mov	r8, r0
    5b7e:	e032      	b.n	5be6 <_dtoa_r+0x6f6>
    5b80:	9a06      	ldr	r2, [sp, #24]
    5b82:	9b03      	ldr	r3, [sp, #12]
    5b84:	1ad2      	subs	r2, r2, r3
    5b86:	425b      	negs	r3, r3
    5b88:	4699      	mov	r9, r3
    5b8a:	2300      	movs	r3, #0
    5b8c:	9206      	str	r2, [sp, #24]
    5b8e:	930d      	str	r3, [sp, #52]	; 0x34
    5b90:	e579      	b.n	5686 <_dtoa_r+0x196>
    5b92:	9803      	ldr	r0, [sp, #12]
    5b94:	f7ff f8ae 	bl	4cf4 <__aeabi_i2d>
    5b98:	000b      	movs	r3, r1
    5b9a:	0002      	movs	r2, r0
    5b9c:	0029      	movs	r1, r5
    5b9e:	0020      	movs	r0, r4
    5ba0:	f7fc febc 	bl	291c <__aeabi_dcmpeq>
    5ba4:	0002      	movs	r2, r0
    5ba6:	4250      	negs	r0, r2
    5ba8:	4150      	adcs	r0, r2
    5baa:	9b03      	ldr	r3, [sp, #12]
    5bac:	1a1b      	subs	r3, r3, r0
    5bae:	9303      	str	r3, [sp, #12]
    5bb0:	e53d      	b.n	562e <_dtoa_r+0x13e>
    5bb2:	2301      	movs	r3, #1
    5bb4:	1a9b      	subs	r3, r3, r2
    5bb6:	9306      	str	r3, [sp, #24]
    5bb8:	2300      	movs	r3, #0
    5bba:	9304      	str	r3, [sp, #16]
    5bbc:	e557      	b.n	566e <_dtoa_r+0x17e>
    5bbe:	46c0      	nop			; (mov r8, r8)
    5bc0:	3ff00000 	.word	0x3ff00000
    5bc4:	40240000 	.word	0x40240000
    5bc8:	00000432 	.word	0x00000432
    5bcc:	00000412 	.word	0x00000412
    5bd0:	fe100000 	.word	0xfe100000
    5bd4:	00009ea8 	.word	0x00009ea8
    5bd8:	00009ed8 	.word	0x00009ed8
    5bdc:	9b06      	ldr	r3, [sp, #24]
    5bde:	464c      	mov	r4, r9
    5be0:	9308      	str	r3, [sp, #32]
    5be2:	2300      	movs	r3, #0
    5be4:	4698      	mov	r8, r3
    5be6:	9908      	ldr	r1, [sp, #32]
    5be8:	1e0b      	subs	r3, r1, #0
    5bea:	dd0e      	ble.n	5c0a <_dtoa_r+0x71a>
    5bec:	9a04      	ldr	r2, [sp, #16]
    5bee:	2a00      	cmp	r2, #0
    5bf0:	dd0b      	ble.n	5c0a <_dtoa_r+0x71a>
    5bf2:	4293      	cmp	r3, r2
    5bf4:	dd00      	ble.n	5bf8 <_dtoa_r+0x708>
    5bf6:	e187      	b.n	5f08 <_dtoa_r+0xa18>
    5bf8:	9a06      	ldr	r2, [sp, #24]
    5bfa:	1ad2      	subs	r2, r2, r3
    5bfc:	9206      	str	r2, [sp, #24]
    5bfe:	9a08      	ldr	r2, [sp, #32]
    5c00:	1ad2      	subs	r2, r2, r3
    5c02:	9208      	str	r2, [sp, #32]
    5c04:	9a04      	ldr	r2, [sp, #16]
    5c06:	1ad3      	subs	r3, r2, r3
    5c08:	9304      	str	r3, [sp, #16]
    5c0a:	464b      	mov	r3, r9
    5c0c:	2b00      	cmp	r3, #0
    5c0e:	d01a      	beq.n	5c46 <_dtoa_r+0x756>
    5c10:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    5c12:	2b00      	cmp	r3, #0
    5c14:	d100      	bne.n	5c18 <_dtoa_r+0x728>
    5c16:	e1bb      	b.n	5f90 <_dtoa_r+0xaa0>
    5c18:	2c00      	cmp	r4, #0
    5c1a:	dd10      	ble.n	5c3e <_dtoa_r+0x74e>
    5c1c:	4641      	mov	r1, r8
    5c1e:	0022      	movs	r2, r4
    5c20:	4650      	mov	r0, sl
    5c22:	f001 f9fb 	bl	701c <__pow5mult>
    5c26:	465a      	mov	r2, fp
    5c28:	0001      	movs	r1, r0
    5c2a:	4680      	mov	r8, r0
    5c2c:	4650      	mov	r0, sl
    5c2e:	f001 f94b 	bl	6ec8 <__multiply>
    5c32:	0005      	movs	r5, r0
    5c34:	4659      	mov	r1, fp
    5c36:	4650      	mov	r0, sl
    5c38:	f001 f8a4 	bl	6d84 <_Bfree>
    5c3c:	46ab      	mov	fp, r5
    5c3e:	464b      	mov	r3, r9
    5c40:	1b1a      	subs	r2, r3, r4
    5c42:	d000      	beq.n	5c46 <_dtoa_r+0x756>
    5c44:	e1a5      	b.n	5f92 <_dtoa_r+0xaa2>
    5c46:	2101      	movs	r1, #1
    5c48:	4650      	mov	r0, sl
    5c4a:	f001 f933 	bl	6eb4 <__i2b>
    5c4e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    5c50:	4681      	mov	r9, r0
    5c52:	2b00      	cmp	r3, #0
    5c54:	dd1d      	ble.n	5c92 <_dtoa_r+0x7a2>
    5c56:	001a      	movs	r2, r3
    5c58:	0001      	movs	r1, r0
    5c5a:	4650      	mov	r0, sl
    5c5c:	f001 f9de 	bl	701c <__pow5mult>
    5c60:	9b22      	ldr	r3, [sp, #136]	; 0x88
    5c62:	4681      	mov	r9, r0
    5c64:	2b01      	cmp	r3, #1
    5c66:	dc00      	bgt.n	5c6a <_dtoa_r+0x77a>
    5c68:	e150      	b.n	5f0c <_dtoa_r+0xa1c>
    5c6a:	2400      	movs	r4, #0
    5c6c:	464b      	mov	r3, r9
    5c6e:	691b      	ldr	r3, [r3, #16]
    5c70:	3303      	adds	r3, #3
    5c72:	009b      	lsls	r3, r3, #2
    5c74:	444b      	add	r3, r9
    5c76:	6858      	ldr	r0, [r3, #4]
    5c78:	f001 f8d4 	bl	6e24 <__hi0bits>
    5c7c:	2320      	movs	r3, #32
    5c7e:	1a1b      	subs	r3, r3, r0
    5c80:	e010      	b.n	5ca4 <_dtoa_r+0x7b4>
    5c82:	2220      	movs	r2, #32
    5c84:	0030      	movs	r0, r6
    5c86:	1ad3      	subs	r3, r2, r3
    5c88:	4098      	lsls	r0, r3
    5c8a:	e685      	b.n	5998 <_dtoa_r+0x4a8>
    5c8c:	2300      	movs	r3, #0
    5c8e:	930c      	str	r3, [sp, #48]	; 0x30
    5c90:	e4e3      	b.n	565a <_dtoa_r+0x16a>
    5c92:	9b22      	ldr	r3, [sp, #136]	; 0x88
    5c94:	2400      	movs	r4, #0
    5c96:	2b01      	cmp	r3, #1
    5c98:	dc00      	bgt.n	5c9c <_dtoa_r+0x7ac>
    5c9a:	e18b      	b.n	5fb4 <_dtoa_r+0xac4>
    5c9c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    5c9e:	2301      	movs	r3, #1
    5ca0:	2a00      	cmp	r2, #0
    5ca2:	d1e3      	bne.n	5c6c <_dtoa_r+0x77c>
    5ca4:	9904      	ldr	r1, [sp, #16]
    5ca6:	201f      	movs	r0, #31
    5ca8:	468c      	mov	ip, r1
    5caa:	4463      	add	r3, ip
    5cac:	4018      	ands	r0, r3
    5cae:	d100      	bne.n	5cb2 <_dtoa_r+0x7c2>
    5cb0:	e0ae      	b.n	5e10 <_dtoa_r+0x920>
    5cb2:	2320      	movs	r3, #32
    5cb4:	1a1b      	subs	r3, r3, r0
    5cb6:	2b04      	cmp	r3, #4
    5cb8:	dc00      	bgt.n	5cbc <_dtoa_r+0x7cc>
    5cba:	e3cc      	b.n	6456 <_dtoa_r+0xf66>
    5cbc:	231c      	movs	r3, #28
    5cbe:	1a18      	subs	r0, r3, r0
    5cc0:	9b06      	ldr	r3, [sp, #24]
    5cc2:	469c      	mov	ip, r3
    5cc4:	4484      	add	ip, r0
    5cc6:	4663      	mov	r3, ip
    5cc8:	9306      	str	r3, [sp, #24]
    5cca:	9b08      	ldr	r3, [sp, #32]
    5ccc:	469c      	mov	ip, r3
    5cce:	4484      	add	ip, r0
    5cd0:	4663      	mov	r3, ip
    5cd2:	468c      	mov	ip, r1
    5cd4:	4484      	add	ip, r0
    5cd6:	9308      	str	r3, [sp, #32]
    5cd8:	4663      	mov	r3, ip
    5cda:	9304      	str	r3, [sp, #16]
    5cdc:	9b06      	ldr	r3, [sp, #24]
    5cde:	2b00      	cmp	r3, #0
    5ce0:	dd05      	ble.n	5cee <_dtoa_r+0x7fe>
    5ce2:	4659      	mov	r1, fp
    5ce4:	001a      	movs	r2, r3
    5ce6:	4650      	mov	r0, sl
    5ce8:	f001 f9f8 	bl	70dc <__lshift>
    5cec:	4683      	mov	fp, r0
    5cee:	9b04      	ldr	r3, [sp, #16]
    5cf0:	2b00      	cmp	r3, #0
    5cf2:	dd05      	ble.n	5d00 <_dtoa_r+0x810>
    5cf4:	4649      	mov	r1, r9
    5cf6:	001a      	movs	r2, r3
    5cf8:	4650      	mov	r0, sl
    5cfa:	f001 f9ef 	bl	70dc <__lshift>
    5cfe:	4681      	mov	r9, r0
    5d00:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    5d02:	2b00      	cmp	r3, #0
    5d04:	d000      	beq.n	5d08 <_dtoa_r+0x818>
    5d06:	e094      	b.n	5e32 <_dtoa_r+0x942>
    5d08:	9b07      	ldr	r3, [sp, #28]
    5d0a:	2b00      	cmp	r3, #0
    5d0c:	dc00      	bgt.n	5d10 <_dtoa_r+0x820>
    5d0e:	e175      	b.n	5ffc <_dtoa_r+0xb0c>
    5d10:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    5d12:	2b00      	cmp	r3, #0
    5d14:	d100      	bne.n	5d18 <_dtoa_r+0x828>
    5d16:	e0a6      	b.n	5e66 <_dtoa_r+0x976>
    5d18:	9b08      	ldr	r3, [sp, #32]
    5d1a:	2b00      	cmp	r3, #0
    5d1c:	dd05      	ble.n	5d2a <_dtoa_r+0x83a>
    5d1e:	4641      	mov	r1, r8
    5d20:	001a      	movs	r2, r3
    5d22:	4650      	mov	r0, sl
    5d24:	f001 f9da 	bl	70dc <__lshift>
    5d28:	4680      	mov	r8, r0
    5d2a:	4643      	mov	r3, r8
    5d2c:	930c      	str	r3, [sp, #48]	; 0x30
    5d2e:	2c00      	cmp	r4, #0
    5d30:	d000      	beq.n	5d34 <_dtoa_r+0x844>
    5d32:	e250      	b.n	61d6 <_dtoa_r+0xce6>
    5d34:	9c07      	ldr	r4, [sp, #28]
    5d36:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5d38:	3c01      	subs	r4, #1
    5d3a:	0023      	movs	r3, r4
    5d3c:	4694      	mov	ip, r2
    5d3e:	4463      	add	r3, ip
    5d40:	9308      	str	r3, [sp, #32]
    5d42:	2301      	movs	r3, #1
    5d44:	4033      	ands	r3, r6
    5d46:	9307      	str	r3, [sp, #28]
    5d48:	464b      	mov	r3, r9
    5d4a:	9306      	str	r3, [sp, #24]
    5d4c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    5d4e:	4657      	mov	r7, sl
    5d50:	4645      	mov	r5, r8
    5d52:	465e      	mov	r6, fp
    5d54:	4692      	mov	sl, r2
    5d56:	4698      	mov	r8, r3
    5d58:	9b06      	ldr	r3, [sp, #24]
    5d5a:	0030      	movs	r0, r6
    5d5c:	0019      	movs	r1, r3
    5d5e:	4699      	mov	r9, r3
    5d60:	f7ff fb1c 	bl	539c <quorem>
    5d64:	0003      	movs	r3, r0
    5d66:	900b      	str	r0, [sp, #44]	; 0x2c
    5d68:	3330      	adds	r3, #48	; 0x30
    5d6a:	0029      	movs	r1, r5
    5d6c:	0030      	movs	r0, r6
    5d6e:	9304      	str	r3, [sp, #16]
    5d70:	f001 fa14 	bl	719c <__mcmp>
    5d74:	4649      	mov	r1, r9
    5d76:	0004      	movs	r4, r0
    5d78:	4642      	mov	r2, r8
    5d7a:	0038      	movs	r0, r7
    5d7c:	f001 fa28 	bl	71d0 <__mdiff>
    5d80:	68c3      	ldr	r3, [r0, #12]
    5d82:	4681      	mov	r9, r0
    5d84:	2b00      	cmp	r3, #0
    5d86:	d000      	beq.n	5d8a <_dtoa_r+0x89a>
    5d88:	e11e      	b.n	5fc8 <_dtoa_r+0xad8>
    5d8a:	0001      	movs	r1, r0
    5d8c:	0030      	movs	r0, r6
    5d8e:	f001 fa05 	bl	719c <__mcmp>
    5d92:	4683      	mov	fp, r0
    5d94:	4649      	mov	r1, r9
    5d96:	0038      	movs	r0, r7
    5d98:	f000 fff4 	bl	6d84 <_Bfree>
    5d9c:	465b      	mov	r3, fp
    5d9e:	9a22      	ldr	r2, [sp, #136]	; 0x88
    5da0:	4313      	orrs	r3, r2
    5da2:	d103      	bne.n	5dac <_dtoa_r+0x8bc>
    5da4:	9b07      	ldr	r3, [sp, #28]
    5da6:	2b00      	cmp	r3, #0
    5da8:	d100      	bne.n	5dac <_dtoa_r+0x8bc>
    5daa:	e306      	b.n	63ba <_dtoa_r+0xeca>
    5dac:	2c00      	cmp	r4, #0
    5dae:	da00      	bge.n	5db2 <_dtoa_r+0x8c2>
    5db0:	e1a8      	b.n	6104 <_dtoa_r+0xc14>
    5db2:	9b22      	ldr	r3, [sp, #136]	; 0x88
    5db4:	431c      	orrs	r4, r3
    5db6:	d103      	bne.n	5dc0 <_dtoa_r+0x8d0>
    5db8:	9b07      	ldr	r3, [sp, #28]
    5dba:	2b00      	cmp	r3, #0
    5dbc:	d100      	bne.n	5dc0 <_dtoa_r+0x8d0>
    5dbe:	e1a1      	b.n	6104 <_dtoa_r+0xc14>
    5dc0:	465b      	mov	r3, fp
    5dc2:	2b00      	cmp	r3, #0
    5dc4:	dd00      	ble.n	5dc8 <_dtoa_r+0x8d8>
    5dc6:	e282      	b.n	62ce <_dtoa_r+0xdde>
    5dc8:	4669      	mov	r1, sp
    5dca:	4652      	mov	r2, sl
    5dcc:	4653      	mov	r3, sl
    5dce:	7c09      	ldrb	r1, [r1, #16]
    5dd0:	1c5c      	adds	r4, r3, #1
    5dd2:	7011      	strb	r1, [r2, #0]
    5dd4:	9a08      	ldr	r2, [sp, #32]
    5dd6:	4552      	cmp	r2, sl
    5dd8:	d100      	bne.n	5ddc <_dtoa_r+0x8ec>
    5dda:	e28a      	b.n	62f2 <_dtoa_r+0xe02>
    5ddc:	0031      	movs	r1, r6
    5dde:	2300      	movs	r3, #0
    5de0:	220a      	movs	r2, #10
    5de2:	0038      	movs	r0, r7
    5de4:	f000 ffd8 	bl	6d98 <__multadd>
    5de8:	2300      	movs	r3, #0
    5dea:	0006      	movs	r6, r0
    5dec:	220a      	movs	r2, #10
    5dee:	0029      	movs	r1, r5
    5df0:	0038      	movs	r0, r7
    5df2:	4545      	cmp	r5, r8
    5df4:	d100      	bne.n	5df8 <_dtoa_r+0x908>
    5df6:	e0e1      	b.n	5fbc <_dtoa_r+0xacc>
    5df8:	f000 ffce 	bl	6d98 <__multadd>
    5dfc:	4641      	mov	r1, r8
    5dfe:	0005      	movs	r5, r0
    5e00:	2300      	movs	r3, #0
    5e02:	220a      	movs	r2, #10
    5e04:	0038      	movs	r0, r7
    5e06:	f000 ffc7 	bl	6d98 <__multadd>
    5e0a:	46a2      	mov	sl, r4
    5e0c:	4680      	mov	r8, r0
    5e0e:	e7a3      	b.n	5d58 <_dtoa_r+0x868>
    5e10:	201c      	movs	r0, #28
    5e12:	9b06      	ldr	r3, [sp, #24]
    5e14:	469c      	mov	ip, r3
    5e16:	4484      	add	ip, r0
    5e18:	4663      	mov	r3, ip
    5e1a:	9306      	str	r3, [sp, #24]
    5e1c:	9b08      	ldr	r3, [sp, #32]
    5e1e:	469c      	mov	ip, r3
    5e20:	4484      	add	ip, r0
    5e22:	4663      	mov	r3, ip
    5e24:	9308      	str	r3, [sp, #32]
    5e26:	9b04      	ldr	r3, [sp, #16]
    5e28:	469c      	mov	ip, r3
    5e2a:	4484      	add	ip, r0
    5e2c:	4663      	mov	r3, ip
    5e2e:	9304      	str	r3, [sp, #16]
    5e30:	e754      	b.n	5cdc <_dtoa_r+0x7ec>
    5e32:	4649      	mov	r1, r9
    5e34:	4658      	mov	r0, fp
    5e36:	f001 f9b1 	bl	719c <__mcmp>
    5e3a:	2800      	cmp	r0, #0
    5e3c:	db00      	blt.n	5e40 <_dtoa_r+0x950>
    5e3e:	e763      	b.n	5d08 <_dtoa_r+0x818>
    5e40:	9b03      	ldr	r3, [sp, #12]
    5e42:	4659      	mov	r1, fp
    5e44:	3b01      	subs	r3, #1
    5e46:	9303      	str	r3, [sp, #12]
    5e48:	220a      	movs	r2, #10
    5e4a:	2300      	movs	r3, #0
    5e4c:	4650      	mov	r0, sl
    5e4e:	f000 ffa3 	bl	6d98 <__multadd>
    5e52:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    5e54:	4683      	mov	fp, r0
    5e56:	2b00      	cmp	r3, #0
    5e58:	d000      	beq.n	5e5c <_dtoa_r+0x96c>
    5e5a:	e2ca      	b.n	63f2 <_dtoa_r+0xf02>
    5e5c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    5e5e:	2b00      	cmp	r3, #0
    5e60:	dc00      	bgt.n	5e64 <_dtoa_r+0x974>
    5e62:	e2d8      	b.n	6416 <_dtoa_r+0xf26>
    5e64:	9307      	str	r3, [sp, #28]
    5e66:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5e68:	465d      	mov	r5, fp
    5e6a:	2400      	movs	r4, #0
    5e6c:	9f07      	ldr	r7, [sp, #28]
    5e6e:	469b      	mov	fp, r3
    5e70:	e006      	b.n	5e80 <_dtoa_r+0x990>
    5e72:	0029      	movs	r1, r5
    5e74:	2300      	movs	r3, #0
    5e76:	220a      	movs	r2, #10
    5e78:	4650      	mov	r0, sl
    5e7a:	f000 ff8d 	bl	6d98 <__multadd>
    5e7e:	0005      	movs	r5, r0
    5e80:	4649      	mov	r1, r9
    5e82:	0028      	movs	r0, r5
    5e84:	f7ff fa8a 	bl	539c <quorem>
    5e88:	465b      	mov	r3, fp
    5e8a:	3030      	adds	r0, #48	; 0x30
    5e8c:	5518      	strb	r0, [r3, r4]
    5e8e:	3401      	adds	r4, #1
    5e90:	42bc      	cmp	r4, r7
    5e92:	dbee      	blt.n	5e72 <_dtoa_r+0x982>
    5e94:	46ab      	mov	fp, r5
    5e96:	0006      	movs	r6, r0
    5e98:	9c07      	ldr	r4, [sp, #28]
    5e9a:	2c00      	cmp	r4, #0
    5e9c:	dc00      	bgt.n	5ea0 <_dtoa_r+0x9b0>
    5e9e:	e237      	b.n	6310 <_dtoa_r+0xe20>
    5ea0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5ea2:	2700      	movs	r7, #0
    5ea4:	469c      	mov	ip, r3
    5ea6:	4464      	add	r4, ip
    5ea8:	4659      	mov	r1, fp
    5eaa:	2201      	movs	r2, #1
    5eac:	4650      	mov	r0, sl
    5eae:	f001 f915 	bl	70dc <__lshift>
    5eb2:	4649      	mov	r1, r9
    5eb4:	4683      	mov	fp, r0
    5eb6:	f001 f971 	bl	719c <__mcmp>
    5eba:	2800      	cmp	r0, #0
    5ebc:	dc00      	bgt.n	5ec0 <_dtoa_r+0x9d0>
    5ebe:	e144      	b.n	614a <_dtoa_r+0xc5a>
    5ec0:	1e65      	subs	r5, r4, #1
    5ec2:	782b      	ldrb	r3, [r5, #0]
    5ec4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5ec6:	e006      	b.n	5ed6 <_dtoa_r+0x9e6>
    5ec8:	4295      	cmp	r5, r2
    5eca:	d100      	bne.n	5ece <_dtoa_r+0x9de>
    5ecc:	e0b1      	b.n	6032 <_dtoa_r+0xb42>
    5ece:	3c02      	subs	r4, #2
    5ed0:	7823      	ldrb	r3, [r4, #0]
    5ed2:	002c      	movs	r4, r5
    5ed4:	3d01      	subs	r5, #1
    5ed6:	2b39      	cmp	r3, #57	; 0x39
    5ed8:	d0f6      	beq.n	5ec8 <_dtoa_r+0x9d8>
    5eda:	3301      	adds	r3, #1
    5edc:	702b      	strb	r3, [r5, #0]
    5ede:	4649      	mov	r1, r9
    5ee0:	4650      	mov	r0, sl
    5ee2:	f000 ff4f 	bl	6d84 <_Bfree>
    5ee6:	4643      	mov	r3, r8
    5ee8:	2b00      	cmp	r3, #0
    5eea:	d100      	bne.n	5eee <_dtoa_r+0x9fe>
    5eec:	e52f      	b.n	594e <_dtoa_r+0x45e>
    5eee:	2f00      	cmp	r7, #0
    5ef0:	d005      	beq.n	5efe <_dtoa_r+0xa0e>
    5ef2:	4547      	cmp	r7, r8
    5ef4:	d003      	beq.n	5efe <_dtoa_r+0xa0e>
    5ef6:	0039      	movs	r1, r7
    5ef8:	4650      	mov	r0, sl
    5efa:	f000 ff43 	bl	6d84 <_Bfree>
    5efe:	4641      	mov	r1, r8
    5f00:	4650      	mov	r0, sl
    5f02:	f000 ff3f 	bl	6d84 <_Bfree>
    5f06:	e522      	b.n	594e <_dtoa_r+0x45e>
    5f08:	0013      	movs	r3, r2
    5f0a:	e675      	b.n	5bf8 <_dtoa_r+0x708>
    5f0c:	2e00      	cmp	r6, #0
    5f0e:	d000      	beq.n	5f12 <_dtoa_r+0xa22>
    5f10:	e6ab      	b.n	5c6a <_dtoa_r+0x77a>
    5f12:	033b      	lsls	r3, r7, #12
    5f14:	2400      	movs	r4, #0
    5f16:	2b00      	cmp	r3, #0
    5f18:	d000      	beq.n	5f1c <_dtoa_r+0xa2c>
    5f1a:	e6bf      	b.n	5c9c <_dtoa_r+0x7ac>
    5f1c:	4bba      	ldr	r3, [pc, #744]	; (6208 <_dtoa_r+0xd18>)
    5f1e:	423b      	tst	r3, r7
    5f20:	d100      	bne.n	5f24 <_dtoa_r+0xa34>
    5f22:	e6bb      	b.n	5c9c <_dtoa_r+0x7ac>
    5f24:	9b06      	ldr	r3, [sp, #24]
    5f26:	3401      	adds	r4, #1
    5f28:	3301      	adds	r3, #1
    5f2a:	9306      	str	r3, [sp, #24]
    5f2c:	9b04      	ldr	r3, [sp, #16]
    5f2e:	3301      	adds	r3, #1
    5f30:	9304      	str	r3, [sp, #16]
    5f32:	e6b3      	b.n	5c9c <_dtoa_r+0x7ac>
    5f34:	2301      	movs	r3, #1
    5f36:	930b      	str	r3, [sp, #44]	; 0x2c
    5f38:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    5f3a:	2b00      	cmp	r3, #0
    5f3c:	dc00      	bgt.n	5f40 <_dtoa_r+0xa50>
    5f3e:	e0d1      	b.n	60e4 <_dtoa_r+0xbf4>
    5f40:	001d      	movs	r5, r3
    5f42:	4698      	mov	r8, r3
    5f44:	930e      	str	r3, [sp, #56]	; 0x38
    5f46:	9307      	str	r3, [sp, #28]
    5f48:	f7ff fbc8 	bl	56dc <_dtoa_r+0x1ec>
    5f4c:	9b07      	ldr	r3, [sp, #28]
    5f4e:	2b00      	cmp	r3, #0
    5f50:	dd00      	ble.n	5f54 <_dtoa_r+0xa64>
    5f52:	e553      	b.n	59fc <_dtoa_r+0x50c>
    5f54:	d000      	beq.n	5f58 <_dtoa_r+0xa68>
    5f56:	e0ad      	b.n	60b4 <_dtoa_r+0xbc4>
    5f58:	9804      	ldr	r0, [sp, #16]
    5f5a:	9905      	ldr	r1, [sp, #20]
    5f5c:	2200      	movs	r2, #0
    5f5e:	4bab      	ldr	r3, [pc, #684]	; (620c <_dtoa_r+0xd1c>)
    5f60:	f7fe f8fe 	bl	4160 <__aeabi_dmul>
    5f64:	003b      	movs	r3, r7
    5f66:	0032      	movs	r2, r6
    5f68:	f7fc fcfc 	bl	2964 <__aeabi_dcmpge>
    5f6c:	2300      	movs	r3, #0
    5f6e:	4699      	mov	r9, r3
    5f70:	4698      	mov	r8, r3
    5f72:	2800      	cmp	r0, #0
    5f74:	d055      	beq.n	6022 <_dtoa_r+0xb32>
    5f76:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    5f78:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    5f7a:	43db      	mvns	r3, r3
    5f7c:	9303      	str	r3, [sp, #12]
    5f7e:	4649      	mov	r1, r9
    5f80:	4650      	mov	r0, sl
    5f82:	f000 feff 	bl	6d84 <_Bfree>
    5f86:	4643      	mov	r3, r8
    5f88:	2b00      	cmp	r3, #0
    5f8a:	d100      	bne.n	5f8e <_dtoa_r+0xa9e>
    5f8c:	e4df      	b.n	594e <_dtoa_r+0x45e>
    5f8e:	e7b6      	b.n	5efe <_dtoa_r+0xa0e>
    5f90:	464a      	mov	r2, r9
    5f92:	4659      	mov	r1, fp
    5f94:	4650      	mov	r0, sl
    5f96:	f001 f841 	bl	701c <__pow5mult>
    5f9a:	4683      	mov	fp, r0
    5f9c:	e653      	b.n	5c46 <_dtoa_r+0x756>
    5f9e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    5fa0:	2a00      	cmp	r2, #0
    5fa2:	d100      	bne.n	5fa6 <_dtoa_r+0xab6>
    5fa4:	e1b6      	b.n	6314 <_dtoa_r+0xe24>
    5fa6:	4a9a      	ldr	r2, [pc, #616]	; (6210 <_dtoa_r+0xd20>)
    5fa8:	464c      	mov	r4, r9
    5faa:	4694      	mov	ip, r2
    5fac:	9a06      	ldr	r2, [sp, #24]
    5fae:	4463      	add	r3, ip
    5fb0:	9208      	str	r2, [sp, #32]
    5fb2:	e5d5      	b.n	5b60 <_dtoa_r+0x670>
    5fb4:	2e00      	cmp	r6, #0
    5fb6:	d000      	beq.n	5fba <_dtoa_r+0xaca>
    5fb8:	e670      	b.n	5c9c <_dtoa_r+0x7ac>
    5fba:	e7aa      	b.n	5f12 <_dtoa_r+0xa22>
    5fbc:	f000 feec 	bl	6d98 <__multadd>
    5fc0:	46a2      	mov	sl, r4
    5fc2:	0005      	movs	r5, r0
    5fc4:	4680      	mov	r8, r0
    5fc6:	e6c7      	b.n	5d58 <_dtoa_r+0x868>
    5fc8:	2301      	movs	r3, #1
    5fca:	469b      	mov	fp, r3
    5fcc:	e6e2      	b.n	5d94 <_dtoa_r+0x8a4>
    5fce:	2300      	movs	r3, #0
    5fd0:	930b      	str	r3, [sp, #44]	; 0x2c
    5fd2:	9b22      	ldr	r3, [sp, #136]	; 0x88
    5fd4:	2b02      	cmp	r3, #2
    5fd6:	d0af      	beq.n	5f38 <_dtoa_r+0xa48>
    5fd8:	2400      	movs	r4, #0
    5fda:	4653      	mov	r3, sl
    5fdc:	0021      	movs	r1, r4
    5fde:	645c      	str	r4, [r3, #68]	; 0x44
    5fe0:	4650      	mov	r0, sl
    5fe2:	f000 fea7 	bl	6d34 <_Balloc>
    5fe6:	4653      	mov	r3, sl
    5fe8:	6418      	str	r0, [r3, #64]	; 0x40
    5fea:	2301      	movs	r3, #1
    5fec:	425b      	negs	r3, r3
    5fee:	9307      	str	r3, [sp, #28]
    5ff0:	930e      	str	r3, [sp, #56]	; 0x38
    5ff2:	3302      	adds	r3, #2
    5ff4:	900a      	str	r0, [sp, #40]	; 0x28
    5ff6:	9423      	str	r4, [sp, #140]	; 0x8c
    5ff8:	930b      	str	r3, [sp, #44]	; 0x2c
    5ffa:	e4ec      	b.n	59d6 <_dtoa_r+0x4e6>
    5ffc:	9b22      	ldr	r3, [sp, #136]	; 0x88
    5ffe:	2b02      	cmp	r3, #2
    6000:	dc00      	bgt.n	6004 <_dtoa_r+0xb14>
    6002:	e685      	b.n	5d10 <_dtoa_r+0x820>
    6004:	9b07      	ldr	r3, [sp, #28]
    6006:	2b00      	cmp	r3, #0
    6008:	d1b5      	bne.n	5f76 <_dtoa_r+0xa86>
    600a:	4649      	mov	r1, r9
    600c:	2205      	movs	r2, #5
    600e:	4650      	mov	r0, sl
    6010:	f000 fec2 	bl	6d98 <__multadd>
    6014:	4681      	mov	r9, r0
    6016:	0001      	movs	r1, r0
    6018:	4658      	mov	r0, fp
    601a:	f001 f8bf 	bl	719c <__mcmp>
    601e:	2800      	cmp	r0, #0
    6020:	dda9      	ble.n	5f76 <_dtoa_r+0xa86>
    6022:	2331      	movs	r3, #49	; 0x31
    6024:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6026:	7013      	strb	r3, [r2, #0]
    6028:	9b03      	ldr	r3, [sp, #12]
    602a:	1c54      	adds	r4, r2, #1
    602c:	3301      	adds	r3, #1
    602e:	9303      	str	r3, [sp, #12]
    6030:	e7a5      	b.n	5f7e <_dtoa_r+0xa8e>
    6032:	9b03      	ldr	r3, [sp, #12]
    6034:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6036:	3301      	adds	r3, #1
    6038:	9303      	str	r3, [sp, #12]
    603a:	2331      	movs	r3, #49	; 0x31
    603c:	7013      	strb	r3, [r2, #0]
    603e:	e74e      	b.n	5ede <_dtoa_r+0x9ee>
    6040:	2300      	movs	r3, #0
    6042:	930b      	str	r3, [sp, #44]	; 0x2c
    6044:	f7ff fb3d 	bl	56c2 <_dtoa_r+0x1d2>
    6048:	9b06      	ldr	r3, [sp, #24]
    604a:	465c      	mov	r4, fp
    604c:	469b      	mov	fp, r3
    604e:	9b07      	ldr	r3, [sp, #28]
    6050:	469a      	mov	sl, r3
    6052:	e47c      	b.n	594e <_dtoa_r+0x45e>
    6054:	4640      	mov	r0, r8
    6056:	f7fe fe4d 	bl	4cf4 <__aeabi_i2d>
    605a:	0032      	movs	r2, r6
    605c:	003b      	movs	r3, r7
    605e:	f7fe f87f 	bl	4160 <__aeabi_dmul>
    6062:	2200      	movs	r2, #0
    6064:	4b6b      	ldr	r3, [pc, #428]	; (6214 <_dtoa_r+0xd24>)
    6066:	f7fd f937 	bl	32d8 <__aeabi_dadd>
    606a:	4a6b      	ldr	r2, [pc, #428]	; (6218 <_dtoa_r+0xd28>)
    606c:	000b      	movs	r3, r1
    606e:	4694      	mov	ip, r2
    6070:	4463      	add	r3, ip
    6072:	9008      	str	r0, [sp, #32]
    6074:	9109      	str	r1, [sp, #36]	; 0x24
    6076:	9309      	str	r3, [sp, #36]	; 0x24
    6078:	2200      	movs	r2, #0
    607a:	4b64      	ldr	r3, [pc, #400]	; (620c <_dtoa_r+0xd1c>)
    607c:	0030      	movs	r0, r6
    607e:	0039      	movs	r1, r7
    6080:	f7fe faee 	bl	4660 <__aeabi_dsub>
    6084:	9e08      	ldr	r6, [sp, #32]
    6086:	9f09      	ldr	r7, [sp, #36]	; 0x24
    6088:	0032      	movs	r2, r6
    608a:	003b      	movs	r3, r7
    608c:	0004      	movs	r4, r0
    608e:	000d      	movs	r5, r1
    6090:	f7fc fc5e 	bl	2950 <__aeabi_dcmpgt>
    6094:	2800      	cmp	r0, #0
    6096:	d000      	beq.n	609a <_dtoa_r+0xbaa>
    6098:	e0b2      	b.n	6200 <_dtoa_r+0xd10>
    609a:	2080      	movs	r0, #128	; 0x80
    609c:	0600      	lsls	r0, r0, #24
    609e:	4684      	mov	ip, r0
    60a0:	0039      	movs	r1, r7
    60a2:	4461      	add	r1, ip
    60a4:	000b      	movs	r3, r1
    60a6:	0032      	movs	r2, r6
    60a8:	0020      	movs	r0, r4
    60aa:	0029      	movs	r1, r5
    60ac:	f7fc fc3c 	bl	2928 <__aeabi_dcmplt>
    60b0:	2800      	cmp	r0, #0
    60b2:	d057      	beq.n	6164 <_dtoa_r+0xc74>
    60b4:	2300      	movs	r3, #0
    60b6:	4699      	mov	r9, r3
    60b8:	4698      	mov	r8, r3
    60ba:	e75c      	b.n	5f76 <_dtoa_r+0xa86>
    60bc:	980a      	ldr	r0, [sp, #40]	; 0x28
    60be:	f7ff fa4c 	bl	555a <_dtoa_r+0x6a>
    60c2:	1ae2      	subs	r2, r4, r3
    60c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    60c6:	46a1      	mov	r9, r4
    60c8:	469c      	mov	ip, r3
    60ca:	4494      	add	ip, r2
    60cc:	4663      	mov	r3, ip
    60ce:	2400      	movs	r4, #0
    60d0:	930d      	str	r3, [sp, #52]	; 0x34
    60d2:	e53e      	b.n	5b52 <_dtoa_r+0x662>
    60d4:	9a10      	ldr	r2, [sp, #64]	; 0x40
    60d6:	9b11      	ldr	r3, [sp, #68]	; 0x44
    60d8:	9208      	str	r2, [sp, #32]
    60da:	9309      	str	r3, [sp, #36]	; 0x24
    60dc:	2302      	movs	r3, #2
    60de:	4698      	mov	r8, r3
    60e0:	f7ff fb3a 	bl	5758 <_dtoa_r+0x268>
    60e4:	2300      	movs	r3, #0
    60e6:	4652      	mov	r2, sl
    60e8:	2100      	movs	r1, #0
    60ea:	6453      	str	r3, [r2, #68]	; 0x44
    60ec:	4650      	mov	r0, sl
    60ee:	f000 fe21 	bl	6d34 <_Balloc>
    60f2:	4653      	mov	r3, sl
    60f4:	6418      	str	r0, [r3, #64]	; 0x40
    60f6:	2301      	movs	r3, #1
    60f8:	900a      	str	r0, [sp, #40]	; 0x28
    60fa:	9307      	str	r3, [sp, #28]
    60fc:	9323      	str	r3, [sp, #140]	; 0x8c
    60fe:	930e      	str	r3, [sp, #56]	; 0x38
    6100:	f7ff fb07 	bl	5712 <_dtoa_r+0x222>
    6104:	4643      	mov	r3, r8
    6106:	930c      	str	r3, [sp, #48]	; 0x30
    6108:	465b      	mov	r3, fp
    610a:	9a06      	ldr	r2, [sp, #24]
    610c:	46a8      	mov	r8, r5
    610e:	46b3      	mov	fp, r6
    6110:	4655      	mov	r5, sl
    6112:	9e04      	ldr	r6, [sp, #16]
    6114:	4691      	mov	r9, r2
    6116:	46ba      	mov	sl, r7
    6118:	2b00      	cmp	r3, #0
    611a:	dd10      	ble.n	613e <_dtoa_r+0xc4e>
    611c:	4659      	mov	r1, fp
    611e:	2201      	movs	r2, #1
    6120:	0038      	movs	r0, r7
    6122:	f000 ffdb 	bl	70dc <__lshift>
    6126:	4649      	mov	r1, r9
    6128:	4683      	mov	fp, r0
    612a:	f001 f837 	bl	719c <__mcmp>
    612e:	2800      	cmp	r0, #0
    6130:	dc00      	bgt.n	6134 <_dtoa_r+0xc44>
    6132:	e157      	b.n	63e4 <_dtoa_r+0xef4>
    6134:	2e39      	cmp	r6, #57	; 0x39
    6136:	d100      	bne.n	613a <_dtoa_r+0xc4a>
    6138:	e122      	b.n	6380 <_dtoa_r+0xe90>
    613a:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    613c:	3631      	adds	r6, #49	; 0x31
    613e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6140:	4647      	mov	r7, r8
    6142:	1c6c      	adds	r4, r5, #1
    6144:	702e      	strb	r6, [r5, #0]
    6146:	4698      	mov	r8, r3
    6148:	e6c9      	b.n	5ede <_dtoa_r+0x9ee>
    614a:	2800      	cmp	r0, #0
    614c:	d103      	bne.n	6156 <_dtoa_r+0xc66>
    614e:	07f3      	lsls	r3, r6, #31
    6150:	d501      	bpl.n	6156 <_dtoa_r+0xc66>
    6152:	e6b5      	b.n	5ec0 <_dtoa_r+0x9d0>
    6154:	001c      	movs	r4, r3
    6156:	1e63      	subs	r3, r4, #1
    6158:	781a      	ldrb	r2, [r3, #0]
    615a:	2a30      	cmp	r2, #48	; 0x30
    615c:	d0fa      	beq.n	6154 <_dtoa_r+0xc64>
    615e:	e6be      	b.n	5ede <_dtoa_r+0x9ee>
    6160:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6162:	4699      	mov	r9, r3
    6164:	9e10      	ldr	r6, [sp, #64]	; 0x40
    6166:	9f11      	ldr	r7, [sp, #68]	; 0x44
    6168:	e435      	b.n	59d6 <_dtoa_r+0x4e6>
    616a:	2501      	movs	r5, #1
    616c:	f7ff fab4 	bl	56d8 <_dtoa_r+0x1e8>
    6170:	9b03      	ldr	r3, [sp, #12]
    6172:	2b00      	cmp	r3, #0
    6174:	d100      	bne.n	6178 <_dtoa_r+0xc88>
    6176:	e0d4      	b.n	6322 <_dtoa_r+0xe32>
    6178:	9810      	ldr	r0, [sp, #64]	; 0x40
    617a:	9911      	ldr	r1, [sp, #68]	; 0x44
    617c:	425c      	negs	r4, r3
    617e:	230f      	movs	r3, #15
    6180:	4a26      	ldr	r2, [pc, #152]	; (621c <_dtoa_r+0xd2c>)
    6182:	4023      	ands	r3, r4
    6184:	00db      	lsls	r3, r3, #3
    6186:	18d3      	adds	r3, r2, r3
    6188:	681a      	ldr	r2, [r3, #0]
    618a:	685b      	ldr	r3, [r3, #4]
    618c:	f7fd ffe8 	bl	4160 <__aeabi_dmul>
    6190:	1124      	asrs	r4, r4, #4
    6192:	0006      	movs	r6, r0
    6194:	000f      	movs	r7, r1
    6196:	2c00      	cmp	r4, #0
    6198:	d100      	bne.n	619c <_dtoa_r+0xcac>
    619a:	e149      	b.n	6430 <_dtoa_r+0xf40>
    619c:	2302      	movs	r3, #2
    619e:	4698      	mov	r8, r3
    61a0:	4d1f      	ldr	r5, [pc, #124]	; (6220 <_dtoa_r+0xd30>)
    61a2:	2301      	movs	r3, #1
    61a4:	4223      	tst	r3, r4
    61a6:	d009      	beq.n	61bc <_dtoa_r+0xccc>
    61a8:	469c      	mov	ip, r3
    61aa:	682a      	ldr	r2, [r5, #0]
    61ac:	686b      	ldr	r3, [r5, #4]
    61ae:	0030      	movs	r0, r6
    61b0:	0039      	movs	r1, r7
    61b2:	44e0      	add	r8, ip
    61b4:	f7fd ffd4 	bl	4160 <__aeabi_dmul>
    61b8:	0006      	movs	r6, r0
    61ba:	000f      	movs	r7, r1
    61bc:	1064      	asrs	r4, r4, #1
    61be:	3508      	adds	r5, #8
    61c0:	2c00      	cmp	r4, #0
    61c2:	d1ee      	bne.n	61a2 <_dtoa_r+0xcb2>
    61c4:	f7ff fae4 	bl	5790 <_dtoa_r+0x2a0>
    61c8:	9b03      	ldr	r3, [sp, #12]
    61ca:	2730      	movs	r7, #48	; 0x30
    61cc:	3301      	adds	r3, #1
    61ce:	9303      	str	r3, [sp, #12]
    61d0:	2330      	movs	r3, #48	; 0x30
    61d2:	702b      	strb	r3, [r5, #0]
    61d4:	e4ac      	b.n	5b30 <_dtoa_r+0x640>
    61d6:	6859      	ldr	r1, [r3, #4]
    61d8:	4650      	mov	r0, sl
    61da:	f000 fdab 	bl	6d34 <_Balloc>
    61de:	4643      	mov	r3, r8
    61e0:	4641      	mov	r1, r8
    61e2:	0004      	movs	r4, r0
    61e4:	691b      	ldr	r3, [r3, #16]
    61e6:	310c      	adds	r1, #12
    61e8:	1c9a      	adds	r2, r3, #2
    61ea:	0092      	lsls	r2, r2, #2
    61ec:	300c      	adds	r0, #12
    61ee:	f7fe ff7d 	bl	50ec <memcpy>
    61f2:	2201      	movs	r2, #1
    61f4:	0021      	movs	r1, r4
    61f6:	4650      	mov	r0, sl
    61f8:	f000 ff70 	bl	70dc <__lshift>
    61fc:	900c      	str	r0, [sp, #48]	; 0x30
    61fe:	e599      	b.n	5d34 <_dtoa_r+0x844>
    6200:	2300      	movs	r3, #0
    6202:	4699      	mov	r9, r3
    6204:	4698      	mov	r8, r3
    6206:	e70c      	b.n	6022 <_dtoa_r+0xb32>
    6208:	7ff00000 	.word	0x7ff00000
    620c:	40140000 	.word	0x40140000
    6210:	00000433 	.word	0x00000433
    6214:	401c0000 	.word	0x401c0000
    6218:	fcc00000 	.word	0xfcc00000
    621c:	00009ed8 	.word	0x00009ed8
    6220:	00009eb0 	.word	0x00009eb0
    6224:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6226:	498f      	ldr	r1, [pc, #572]	; (6464 <_dtoa_r+0xf74>)
    6228:	3b01      	subs	r3, #1
    622a:	00db      	lsls	r3, r3, #3
    622c:	18c9      	adds	r1, r1, r3
    622e:	6808      	ldr	r0, [r1, #0]
    6230:	6849      	ldr	r1, [r1, #4]
    6232:	9a08      	ldr	r2, [sp, #32]
    6234:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6236:	f7fd ff93 	bl	4160 <__aeabi_dmul>
    623a:	9014      	str	r0, [sp, #80]	; 0x50
    623c:	9115      	str	r1, [sp, #84]	; 0x54
    623e:	0039      	movs	r1, r7
    6240:	0030      	movs	r0, r6
    6242:	f7fe fd23 	bl	4c8c <__aeabi_d2iz>
    6246:	0005      	movs	r5, r0
    6248:	f7fe fd54 	bl	4cf4 <__aeabi_i2d>
    624c:	0002      	movs	r2, r0
    624e:	000b      	movs	r3, r1
    6250:	0030      	movs	r0, r6
    6252:	0039      	movs	r1, r7
    6254:	f7fe fa04 	bl	4660 <__aeabi_dsub>
    6258:	9b12      	ldr	r3, [sp, #72]	; 0x48
    625a:	9008      	str	r0, [sp, #32]
    625c:	9109      	str	r1, [sp, #36]	; 0x24
    625e:	990a      	ldr	r1, [sp, #40]	; 0x28
    6260:	001a      	movs	r2, r3
    6262:	468c      	mov	ip, r1
    6264:	3530      	adds	r5, #48	; 0x30
    6266:	4462      	add	r2, ip
    6268:	1c4c      	adds	r4, r1, #1
    626a:	700d      	strb	r5, [r1, #0]
    626c:	4690      	mov	r8, r2
    626e:	2b01      	cmp	r3, #1
    6270:	d01b      	beq.n	62aa <_dtoa_r+0xdba>
    6272:	9808      	ldr	r0, [sp, #32]
    6274:	9909      	ldr	r1, [sp, #36]	; 0x24
    6276:	0025      	movs	r5, r4
    6278:	2200      	movs	r2, #0
    627a:	4b7b      	ldr	r3, [pc, #492]	; (6468 <_dtoa_r+0xf78>)
    627c:	f7fd ff70 	bl	4160 <__aeabi_dmul>
    6280:	000f      	movs	r7, r1
    6282:	0006      	movs	r6, r0
    6284:	f7fe fd02 	bl	4c8c <__aeabi_d2iz>
    6288:	0004      	movs	r4, r0
    628a:	f7fe fd33 	bl	4cf4 <__aeabi_i2d>
    628e:	3430      	adds	r4, #48	; 0x30
    6290:	0002      	movs	r2, r0
    6292:	000b      	movs	r3, r1
    6294:	0030      	movs	r0, r6
    6296:	0039      	movs	r1, r7
    6298:	f7fe f9e2 	bl	4660 <__aeabi_dsub>
    629c:	702c      	strb	r4, [r5, #0]
    629e:	3501      	adds	r5, #1
    62a0:	45a8      	cmp	r8, r5
    62a2:	d1e9      	bne.n	6278 <_dtoa_r+0xd88>
    62a4:	4644      	mov	r4, r8
    62a6:	9008      	str	r0, [sp, #32]
    62a8:	9109      	str	r1, [sp, #36]	; 0x24
    62aa:	9814      	ldr	r0, [sp, #80]	; 0x50
    62ac:	9915      	ldr	r1, [sp, #84]	; 0x54
    62ae:	2200      	movs	r2, #0
    62b0:	4b6e      	ldr	r3, [pc, #440]	; (646c <_dtoa_r+0xf7c>)
    62b2:	f7fd f811 	bl	32d8 <__aeabi_dadd>
    62b6:	9a08      	ldr	r2, [sp, #32]
    62b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
    62ba:	f7fc fb35 	bl	2928 <__aeabi_dcmplt>
    62be:	2800      	cmp	r0, #0
    62c0:	d067      	beq.n	6392 <_dtoa_r+0xea2>
    62c2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    62c4:	1e65      	subs	r5, r4, #1
    62c6:	9303      	str	r3, [sp, #12]
    62c8:	782f      	ldrb	r7, [r5, #0]
    62ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    62cc:	e42e      	b.n	5b2c <_dtoa_r+0x63c>
    62ce:	4643      	mov	r3, r8
    62d0:	46b3      	mov	fp, r6
    62d2:	930c      	str	r3, [sp, #48]	; 0x30
    62d4:	9e04      	ldr	r6, [sp, #16]
    62d6:	9b06      	ldr	r3, [sp, #24]
    62d8:	46a8      	mov	r8, r5
    62da:	4699      	mov	r9, r3
    62dc:	4655      	mov	r5, sl
    62de:	46ba      	mov	sl, r7
    62e0:	2e39      	cmp	r6, #57	; 0x39
    62e2:	d04d      	beq.n	6380 <_dtoa_r+0xe90>
    62e4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    62e6:	3601      	adds	r6, #1
    62e8:	4647      	mov	r7, r8
    62ea:	1c6c      	adds	r4, r5, #1
    62ec:	702e      	strb	r6, [r5, #0]
    62ee:	4698      	mov	r8, r3
    62f0:	e5f5      	b.n	5ede <_dtoa_r+0x9ee>
    62f2:	4642      	mov	r2, r8
    62f4:	9b06      	ldr	r3, [sp, #24]
    62f6:	46b3      	mov	fp, r6
    62f8:	46ba      	mov	sl, r7
    62fa:	9e04      	ldr	r6, [sp, #16]
    62fc:	4699      	mov	r9, r3
    62fe:	002f      	movs	r7, r5
    6300:	4690      	mov	r8, r2
    6302:	e5d1      	b.n	5ea8 <_dtoa_r+0x9b8>
    6304:	9b06      	ldr	r3, [sp, #24]
    6306:	9a07      	ldr	r2, [sp, #28]
    6308:	1a9b      	subs	r3, r3, r2
    630a:	9308      	str	r3, [sp, #32]
    630c:	2300      	movs	r3, #0
    630e:	e427      	b.n	5b60 <_dtoa_r+0x670>
    6310:	2401      	movs	r4, #1
    6312:	e5c5      	b.n	5ea0 <_dtoa_r+0x9b0>
    6314:	2336      	movs	r3, #54	; 0x36
    6316:	9a16      	ldr	r2, [sp, #88]	; 0x58
    6318:	464c      	mov	r4, r9
    631a:	1a9b      	subs	r3, r3, r2
    631c:	9a06      	ldr	r2, [sp, #24]
    631e:	9208      	str	r2, [sp, #32]
    6320:	e41e      	b.n	5b60 <_dtoa_r+0x670>
    6322:	2302      	movs	r3, #2
    6324:	9e10      	ldr	r6, [sp, #64]	; 0x40
    6326:	9f11      	ldr	r7, [sp, #68]	; 0x44
    6328:	4698      	mov	r8, r3
    632a:	f7ff fa31 	bl	5790 <_dtoa_r+0x2a0>
    632e:	9b07      	ldr	r3, [sp, #28]
    6330:	2b00      	cmp	r3, #0
    6332:	d100      	bne.n	6336 <_dtoa_r+0xe46>
    6334:	e68e      	b.n	6054 <_dtoa_r+0xb64>
    6336:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    6338:	2c00      	cmp	r4, #0
    633a:	dc00      	bgt.n	633e <_dtoa_r+0xe4e>
    633c:	e712      	b.n	6164 <_dtoa_r+0xc74>
    633e:	9b03      	ldr	r3, [sp, #12]
    6340:	2200      	movs	r2, #0
    6342:	3b01      	subs	r3, #1
    6344:	9313      	str	r3, [sp, #76]	; 0x4c
    6346:	0030      	movs	r0, r6
    6348:	4b47      	ldr	r3, [pc, #284]	; (6468 <_dtoa_r+0xf78>)
    634a:	0039      	movs	r1, r7
    634c:	f7fd ff08 	bl	4160 <__aeabi_dmul>
    6350:	0006      	movs	r6, r0
    6352:	4640      	mov	r0, r8
    6354:	000f      	movs	r7, r1
    6356:	3001      	adds	r0, #1
    6358:	f7fe fccc 	bl	4cf4 <__aeabi_i2d>
    635c:	0032      	movs	r2, r6
    635e:	003b      	movs	r3, r7
    6360:	f7fd fefe 	bl	4160 <__aeabi_dmul>
    6364:	2200      	movs	r2, #0
    6366:	4b42      	ldr	r3, [pc, #264]	; (6470 <_dtoa_r+0xf80>)
    6368:	f7fc ffb6 	bl	32d8 <__aeabi_dadd>
    636c:	4a41      	ldr	r2, [pc, #260]	; (6474 <_dtoa_r+0xf84>)
    636e:	000b      	movs	r3, r1
    6370:	4694      	mov	ip, r2
    6372:	4463      	add	r3, ip
    6374:	9008      	str	r0, [sp, #32]
    6376:	9109      	str	r1, [sp, #36]	; 0x24
    6378:	9412      	str	r4, [sp, #72]	; 0x48
    637a:	9309      	str	r3, [sp, #36]	; 0x24
    637c:	f7ff fa30 	bl	57e0 <_dtoa_r+0x2f0>
    6380:	2339      	movs	r3, #57	; 0x39
    6382:	702b      	strb	r3, [r5, #0]
    6384:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6386:	4647      	mov	r7, r8
    6388:	1c6c      	adds	r4, r5, #1
    638a:	4698      	mov	r8, r3
    638c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    638e:	2339      	movs	r3, #57	; 0x39
    6390:	e5a1      	b.n	5ed6 <_dtoa_r+0x9e6>
    6392:	9a14      	ldr	r2, [sp, #80]	; 0x50
    6394:	9b15      	ldr	r3, [sp, #84]	; 0x54
    6396:	2000      	movs	r0, #0
    6398:	4934      	ldr	r1, [pc, #208]	; (646c <_dtoa_r+0xf7c>)
    639a:	f7fe f961 	bl	4660 <__aeabi_dsub>
    639e:	9a08      	ldr	r2, [sp, #32]
    63a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
    63a2:	f7fc fad5 	bl	2950 <__aeabi_dcmpgt>
    63a6:	2800      	cmp	r0, #0
    63a8:	d101      	bne.n	63ae <_dtoa_r+0xebe>
    63aa:	e6db      	b.n	6164 <_dtoa_r+0xc74>
    63ac:	001c      	movs	r4, r3
    63ae:	1e63      	subs	r3, r4, #1
    63b0:	781a      	ldrb	r2, [r3, #0]
    63b2:	2a30      	cmp	r2, #48	; 0x30
    63b4:	d0fa      	beq.n	63ac <_dtoa_r+0xebc>
    63b6:	f7ff fac8 	bl	594a <_dtoa_r+0x45a>
    63ba:	4643      	mov	r3, r8
    63bc:	46b3      	mov	fp, r6
    63be:	930c      	str	r3, [sp, #48]	; 0x30
    63c0:	9e04      	ldr	r6, [sp, #16]
    63c2:	9b06      	ldr	r3, [sp, #24]
    63c4:	46a8      	mov	r8, r5
    63c6:	4699      	mov	r9, r3
    63c8:	4655      	mov	r5, sl
    63ca:	46ba      	mov	sl, r7
    63cc:	2e39      	cmp	r6, #57	; 0x39
    63ce:	d0d7      	beq.n	6380 <_dtoa_r+0xe90>
    63d0:	2c00      	cmp	r4, #0
    63d2:	dd00      	ble.n	63d6 <_dtoa_r+0xee6>
    63d4:	e6b1      	b.n	613a <_dtoa_r+0xc4a>
    63d6:	e6b2      	b.n	613e <_dtoa_r+0xc4e>
    63d8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    63da:	464d      	mov	r5, r9
    63dc:	9203      	str	r2, [sp, #12]
    63de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    63e0:	f7ff fba4 	bl	5b2c <_dtoa_r+0x63c>
    63e4:	2800      	cmp	r0, #0
    63e6:	d000      	beq.n	63ea <_dtoa_r+0xefa>
    63e8:	e6a9      	b.n	613e <_dtoa_r+0xc4e>
    63ea:	07f3      	lsls	r3, r6, #31
    63ec:	d400      	bmi.n	63f0 <_dtoa_r+0xf00>
    63ee:	e6a6      	b.n	613e <_dtoa_r+0xc4e>
    63f0:	e6a0      	b.n	6134 <_dtoa_r+0xc44>
    63f2:	2300      	movs	r3, #0
    63f4:	4641      	mov	r1, r8
    63f6:	220a      	movs	r2, #10
    63f8:	4650      	mov	r0, sl
    63fa:	f000 fccd 	bl	6d98 <__multadd>
    63fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6400:	4680      	mov	r8, r0
    6402:	2b00      	cmp	r3, #0
    6404:	dd01      	ble.n	640a <_dtoa_r+0xf1a>
    6406:	9307      	str	r3, [sp, #28]
    6408:	e486      	b.n	5d18 <_dtoa_r+0x828>
    640a:	9b22      	ldr	r3, [sp, #136]	; 0x88
    640c:	2b02      	cmp	r3, #2
    640e:	dc1f      	bgt.n	6450 <_dtoa_r+0xf60>
    6410:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6412:	9307      	str	r3, [sp, #28]
    6414:	e480      	b.n	5d18 <_dtoa_r+0x828>
    6416:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6418:	2b02      	cmp	r3, #2
    641a:	dc19      	bgt.n	6450 <_dtoa_r+0xf60>
    641c:	4649      	mov	r1, r9
    641e:	f7fe ffbd 	bl	539c <quorem>
    6422:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6424:	3030      	adds	r0, #48	; 0x30
    6426:	7018      	strb	r0, [r3, #0]
    6428:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    642a:	0006      	movs	r6, r0
    642c:	9307      	str	r3, [sp, #28]
    642e:	e533      	b.n	5e98 <_dtoa_r+0x9a8>
    6430:	2302      	movs	r3, #2
    6432:	4698      	mov	r8, r3
    6434:	f7ff f9ac 	bl	5790 <_dtoa_r+0x2a0>
    6438:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    643a:	9c14      	ldr	r4, [sp, #80]	; 0x50
    643c:	9303      	str	r3, [sp, #12]
    643e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6440:	001d      	movs	r5, r3
    6442:	f7ff fb73 	bl	5b2c <_dtoa_r+0x63c>
    6446:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    6448:	9c14      	ldr	r4, [sp, #80]	; 0x50
    644a:	9303      	str	r3, [sp, #12]
    644c:	f7ff fa7f 	bl	594e <_dtoa_r+0x45e>
    6450:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6452:	9307      	str	r3, [sp, #28]
    6454:	e5d6      	b.n	6004 <_dtoa_r+0xb14>
    6456:	2b04      	cmp	r3, #4
    6458:	d100      	bne.n	645c <_dtoa_r+0xf6c>
    645a:	e43f      	b.n	5cdc <_dtoa_r+0x7ec>
    645c:	233c      	movs	r3, #60	; 0x3c
    645e:	1a18      	subs	r0, r3, r0
    6460:	e4d7      	b.n	5e12 <_dtoa_r+0x922>
    6462:	46c0      	nop			; (mov r8, r8)
    6464:	00009ed8 	.word	0x00009ed8
    6468:	40240000 	.word	0x40240000
    646c:	3fe00000 	.word	0x3fe00000
    6470:	401c0000 	.word	0x401c0000
    6474:	fcc00000 	.word	0xfcc00000

00006478 <__libc_fini_array>:
    6478:	b570      	push	{r4, r5, r6, lr}
    647a:	4b09      	ldr	r3, [pc, #36]	; (64a0 <__libc_fini_array+0x28>)
    647c:	4c09      	ldr	r4, [pc, #36]	; (64a4 <__libc_fini_array+0x2c>)
    647e:	1ae4      	subs	r4, r4, r3
    6480:	10a4      	asrs	r4, r4, #2
    6482:	d009      	beq.n	6498 <__libc_fini_array+0x20>
    6484:	4a08      	ldr	r2, [pc, #32]	; (64a8 <__libc_fini_array+0x30>)
    6486:	18a5      	adds	r5, r4, r2
    6488:	00ad      	lsls	r5, r5, #2
    648a:	18ed      	adds	r5, r5, r3
    648c:	682b      	ldr	r3, [r5, #0]
    648e:	3c01      	subs	r4, #1
    6490:	4798      	blx	r3
    6492:	3d04      	subs	r5, #4
    6494:	2c00      	cmp	r4, #0
    6496:	d1f9      	bne.n	648c <__libc_fini_array+0x14>
    6498:	f003 fefe 	bl	a298 <_fini>
    649c:	bd70      	pop	{r4, r5, r6, pc}
    649e:	46c0      	nop			; (mov r8, r8)
    64a0:	0000a2a4 	.word	0x0000a2a4
    64a4:	0000a2a8 	.word	0x0000a2a8
    64a8:	3fffffff 	.word	0x3fffffff

000064ac <_malloc_trim_r>:
    64ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    64ae:	000c      	movs	r4, r1
    64b0:	0006      	movs	r6, r0
    64b2:	f000 fc2f 	bl	6d14 <__malloc_lock>
    64b6:	4f20      	ldr	r7, [pc, #128]	; (6538 <_malloc_trim_r+0x8c>)
    64b8:	68bb      	ldr	r3, [r7, #8]
    64ba:	685d      	ldr	r5, [r3, #4]
    64bc:	2303      	movs	r3, #3
    64be:	439d      	bics	r5, r3
    64c0:	4b1e      	ldr	r3, [pc, #120]	; (653c <_malloc_trim_r+0x90>)
    64c2:	1b2c      	subs	r4, r5, r4
    64c4:	469c      	mov	ip, r3
    64c6:	4464      	add	r4, ip
    64c8:	0b24      	lsrs	r4, r4, #12
    64ca:	4b1d      	ldr	r3, [pc, #116]	; (6540 <_malloc_trim_r+0x94>)
    64cc:	3c01      	subs	r4, #1
    64ce:	0324      	lsls	r4, r4, #12
    64d0:	429c      	cmp	r4, r3
    64d2:	dd07      	ble.n	64e4 <_malloc_trim_r+0x38>
    64d4:	2100      	movs	r1, #0
    64d6:	0030      	movs	r0, r6
    64d8:	f000 ff74 	bl	73c4 <_sbrk_r>
    64dc:	68bb      	ldr	r3, [r7, #8]
    64de:	195b      	adds	r3, r3, r5
    64e0:	4298      	cmp	r0, r3
    64e2:	d004      	beq.n	64ee <_malloc_trim_r+0x42>
    64e4:	0030      	movs	r0, r6
    64e6:	f000 fc1d 	bl	6d24 <__malloc_unlock>
    64ea:	2000      	movs	r0, #0
    64ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    64ee:	4261      	negs	r1, r4
    64f0:	0030      	movs	r0, r6
    64f2:	f000 ff67 	bl	73c4 <_sbrk_r>
    64f6:	1c43      	adds	r3, r0, #1
    64f8:	d00d      	beq.n	6516 <_malloc_trim_r+0x6a>
    64fa:	2201      	movs	r2, #1
    64fc:	68bb      	ldr	r3, [r7, #8]
    64fe:	1b2d      	subs	r5, r5, r4
    6500:	4315      	orrs	r5, r2
    6502:	605d      	str	r5, [r3, #4]
    6504:	4b0f      	ldr	r3, [pc, #60]	; (6544 <_malloc_trim_r+0x98>)
    6506:	0030      	movs	r0, r6
    6508:	681a      	ldr	r2, [r3, #0]
    650a:	1b14      	subs	r4, r2, r4
    650c:	601c      	str	r4, [r3, #0]
    650e:	f000 fc09 	bl	6d24 <__malloc_unlock>
    6512:	2001      	movs	r0, #1
    6514:	e7ea      	b.n	64ec <_malloc_trim_r+0x40>
    6516:	2100      	movs	r1, #0
    6518:	0030      	movs	r0, r6
    651a:	f000 ff53 	bl	73c4 <_sbrk_r>
    651e:	68ba      	ldr	r2, [r7, #8]
    6520:	1a83      	subs	r3, r0, r2
    6522:	2b0f      	cmp	r3, #15
    6524:	ddde      	ble.n	64e4 <_malloc_trim_r+0x38>
    6526:	4908      	ldr	r1, [pc, #32]	; (6548 <_malloc_trim_r+0x9c>)
    6528:	6809      	ldr	r1, [r1, #0]
    652a:	1a40      	subs	r0, r0, r1
    652c:	4905      	ldr	r1, [pc, #20]	; (6544 <_malloc_trim_r+0x98>)
    652e:	6008      	str	r0, [r1, #0]
    6530:	2101      	movs	r1, #1
    6532:	430b      	orrs	r3, r1
    6534:	6053      	str	r3, [r2, #4]
    6536:	e7d5      	b.n	64e4 <_malloc_trim_r+0x38>
    6538:	2000043c 	.word	0x2000043c
    653c:	00000fef 	.word	0x00000fef
    6540:	00000fff 	.word	0x00000fff
    6544:	20000a30 	.word	0x20000a30
    6548:	20000844 	.word	0x20000844

0000654c <_free_r>:
    654c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    654e:	0004      	movs	r4, r0
    6550:	1e0d      	subs	r5, r1, #0
    6552:	d03c      	beq.n	65ce <_free_r+0x82>
    6554:	f000 fbde 	bl	6d14 <__malloc_lock>
    6558:	0029      	movs	r1, r5
    655a:	3908      	subs	r1, #8
    655c:	6848      	ldr	r0, [r1, #4]
    655e:	2301      	movs	r3, #1
    6560:	0005      	movs	r5, r0
    6562:	2603      	movs	r6, #3
    6564:	439d      	bics	r5, r3
    6566:	194a      	adds	r2, r1, r5
    6568:	469c      	mov	ip, r3
    656a:	4f61      	ldr	r7, [pc, #388]	; (66f0 <_free_r+0x1a4>)
    656c:	6853      	ldr	r3, [r2, #4]
    656e:	43b3      	bics	r3, r6
    6570:	68be      	ldr	r6, [r7, #8]
    6572:	42b2      	cmp	r2, r6
    6574:	d056      	beq.n	6624 <_free_r+0xd8>
    6576:	4666      	mov	r6, ip
    6578:	6053      	str	r3, [r2, #4]
    657a:	4206      	tst	r6, r0
    657c:	d10a      	bne.n	6594 <_free_r+0x48>
    657e:	003e      	movs	r6, r7
    6580:	6808      	ldr	r0, [r1, #0]
    6582:	3608      	adds	r6, #8
    6584:	1a09      	subs	r1, r1, r0
    6586:	182d      	adds	r5, r5, r0
    6588:	6888      	ldr	r0, [r1, #8]
    658a:	42b0      	cmp	r0, r6
    658c:	d065      	beq.n	665a <_free_r+0x10e>
    658e:	68ce      	ldr	r6, [r1, #12]
    6590:	60c6      	str	r6, [r0, #12]
    6592:	60b0      	str	r0, [r6, #8]
    6594:	2001      	movs	r0, #1
    6596:	18d6      	adds	r6, r2, r3
    6598:	6876      	ldr	r6, [r6, #4]
    659a:	4206      	tst	r6, r0
    659c:	d033      	beq.n	6606 <_free_r+0xba>
    659e:	4b55      	ldr	r3, [pc, #340]	; (66f4 <_free_r+0x1a8>)
    65a0:	4328      	orrs	r0, r5
    65a2:	6048      	str	r0, [r1, #4]
    65a4:	514d      	str	r5, [r1, r5]
    65a6:	429d      	cmp	r5, r3
    65a8:	d812      	bhi.n	65d0 <_free_r+0x84>
    65aa:	08ed      	lsrs	r5, r5, #3
    65ac:	3bff      	subs	r3, #255	; 0xff
    65ae:	10aa      	asrs	r2, r5, #2
    65b0:	3bff      	subs	r3, #255	; 0xff
    65b2:	4093      	lsls	r3, r2
    65b4:	687a      	ldr	r2, [r7, #4]
    65b6:	00ed      	lsls	r5, r5, #3
    65b8:	4313      	orrs	r3, r2
    65ba:	607b      	str	r3, [r7, #4]
    65bc:	19ef      	adds	r7, r5, r7
    65be:	68bb      	ldr	r3, [r7, #8]
    65c0:	60cf      	str	r7, [r1, #12]
    65c2:	608b      	str	r3, [r1, #8]
    65c4:	60b9      	str	r1, [r7, #8]
    65c6:	60d9      	str	r1, [r3, #12]
    65c8:	0020      	movs	r0, r4
    65ca:	f000 fbab 	bl	6d24 <__malloc_unlock>
    65ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    65d0:	0a68      	lsrs	r0, r5, #9
    65d2:	2804      	cmp	r0, #4
    65d4:	d850      	bhi.n	6678 <_free_r+0x12c>
    65d6:	09a8      	lsrs	r0, r5, #6
    65d8:	0002      	movs	r2, r0
    65da:	3039      	adds	r0, #57	; 0x39
    65dc:	3238      	adds	r2, #56	; 0x38
    65de:	00c0      	lsls	r0, r0, #3
    65e0:	1838      	adds	r0, r7, r0
    65e2:	3808      	subs	r0, #8
    65e4:	6883      	ldr	r3, [r0, #8]
    65e6:	2603      	movs	r6, #3
    65e8:	4298      	cmp	r0, r3
    65ea:	d04c      	beq.n	6686 <_free_r+0x13a>
    65ec:	685a      	ldr	r2, [r3, #4]
    65ee:	43b2      	bics	r2, r6
    65f0:	4295      	cmp	r5, r2
    65f2:	d230      	bcs.n	6656 <_free_r+0x10a>
    65f4:	689b      	ldr	r3, [r3, #8]
    65f6:	4298      	cmp	r0, r3
    65f8:	d1f8      	bne.n	65ec <_free_r+0xa0>
    65fa:	68c3      	ldr	r3, [r0, #12]
    65fc:	60cb      	str	r3, [r1, #12]
    65fe:	6088      	str	r0, [r1, #8]
    6600:	6099      	str	r1, [r3, #8]
    6602:	60c1      	str	r1, [r0, #12]
    6604:	e7e0      	b.n	65c8 <_free_r+0x7c>
    6606:	18ed      	adds	r5, r5, r3
    6608:	4e3b      	ldr	r6, [pc, #236]	; (66f8 <_free_r+0x1ac>)
    660a:	6893      	ldr	r3, [r2, #8]
    660c:	42b3      	cmp	r3, r6
    660e:	d042      	beq.n	6696 <_free_r+0x14a>
    6610:	68d2      	ldr	r2, [r2, #12]
    6612:	4328      	orrs	r0, r5
    6614:	60da      	str	r2, [r3, #12]
    6616:	6093      	str	r3, [r2, #8]
    6618:	4b36      	ldr	r3, [pc, #216]	; (66f4 <_free_r+0x1a8>)
    661a:	6048      	str	r0, [r1, #4]
    661c:	514d      	str	r5, [r1, r5]
    661e:	429d      	cmp	r5, r3
    6620:	d8d6      	bhi.n	65d0 <_free_r+0x84>
    6622:	e7c2      	b.n	65aa <_free_r+0x5e>
    6624:	4662      	mov	r2, ip
    6626:	18eb      	adds	r3, r5, r3
    6628:	4202      	tst	r2, r0
    662a:	d106      	bne.n	663a <_free_r+0xee>
    662c:	680a      	ldr	r2, [r1, #0]
    662e:	1a89      	subs	r1, r1, r2
    6630:	6888      	ldr	r0, [r1, #8]
    6632:	189b      	adds	r3, r3, r2
    6634:	68ca      	ldr	r2, [r1, #12]
    6636:	60c2      	str	r2, [r0, #12]
    6638:	6090      	str	r0, [r2, #8]
    663a:	2201      	movs	r2, #1
    663c:	431a      	orrs	r2, r3
    663e:	604a      	str	r2, [r1, #4]
    6640:	4a2e      	ldr	r2, [pc, #184]	; (66fc <_free_r+0x1b0>)
    6642:	60b9      	str	r1, [r7, #8]
    6644:	6812      	ldr	r2, [r2, #0]
    6646:	4293      	cmp	r3, r2
    6648:	d3be      	bcc.n	65c8 <_free_r+0x7c>
    664a:	4b2d      	ldr	r3, [pc, #180]	; (6700 <_free_r+0x1b4>)
    664c:	0020      	movs	r0, r4
    664e:	6819      	ldr	r1, [r3, #0]
    6650:	f7ff ff2c 	bl	64ac <_malloc_trim_r>
    6654:	e7b8      	b.n	65c8 <_free_r+0x7c>
    6656:	0018      	movs	r0, r3
    6658:	e7cf      	b.n	65fa <_free_r+0xae>
    665a:	4666      	mov	r6, ip
    665c:	18d0      	adds	r0, r2, r3
    665e:	6840      	ldr	r0, [r0, #4]
    6660:	4230      	tst	r0, r6
    6662:	d13f      	bne.n	66e4 <_free_r+0x198>
    6664:	6890      	ldr	r0, [r2, #8]
    6666:	195d      	adds	r5, r3, r5
    6668:	68d3      	ldr	r3, [r2, #12]
    666a:	60c3      	str	r3, [r0, #12]
    666c:	6098      	str	r0, [r3, #8]
    666e:	4663      	mov	r3, ip
    6670:	432b      	orrs	r3, r5
    6672:	604b      	str	r3, [r1, #4]
    6674:	514d      	str	r5, [r1, r5]
    6676:	e7a7      	b.n	65c8 <_free_r+0x7c>
    6678:	2814      	cmp	r0, #20
    667a:	d814      	bhi.n	66a6 <_free_r+0x15a>
    667c:	0002      	movs	r2, r0
    667e:	305c      	adds	r0, #92	; 0x5c
    6680:	325b      	adds	r2, #91	; 0x5b
    6682:	00c0      	lsls	r0, r0, #3
    6684:	e7ac      	b.n	65e0 <_free_r+0x94>
    6686:	2301      	movs	r3, #1
    6688:	1092      	asrs	r2, r2, #2
    668a:	4093      	lsls	r3, r2
    668c:	687a      	ldr	r2, [r7, #4]
    668e:	4313      	orrs	r3, r2
    6690:	607b      	str	r3, [r7, #4]
    6692:	0003      	movs	r3, r0
    6694:	e7b2      	b.n	65fc <_free_r+0xb0>
    6696:	4328      	orrs	r0, r5
    6698:	60d9      	str	r1, [r3, #12]
    669a:	6099      	str	r1, [r3, #8]
    669c:	60cb      	str	r3, [r1, #12]
    669e:	608b      	str	r3, [r1, #8]
    66a0:	6048      	str	r0, [r1, #4]
    66a2:	514d      	str	r5, [r1, r5]
    66a4:	e790      	b.n	65c8 <_free_r+0x7c>
    66a6:	2854      	cmp	r0, #84	; 0x54
    66a8:	d805      	bhi.n	66b6 <_free_r+0x16a>
    66aa:	0b28      	lsrs	r0, r5, #12
    66ac:	0002      	movs	r2, r0
    66ae:	306f      	adds	r0, #111	; 0x6f
    66b0:	326e      	adds	r2, #110	; 0x6e
    66b2:	00c0      	lsls	r0, r0, #3
    66b4:	e794      	b.n	65e0 <_free_r+0x94>
    66b6:	22aa      	movs	r2, #170	; 0xaa
    66b8:	0052      	lsls	r2, r2, #1
    66ba:	4290      	cmp	r0, r2
    66bc:	d805      	bhi.n	66ca <_free_r+0x17e>
    66be:	0be8      	lsrs	r0, r5, #15
    66c0:	0002      	movs	r2, r0
    66c2:	3078      	adds	r0, #120	; 0x78
    66c4:	3277      	adds	r2, #119	; 0x77
    66c6:	00c0      	lsls	r0, r0, #3
    66c8:	e78a      	b.n	65e0 <_free_r+0x94>
    66ca:	4a0e      	ldr	r2, [pc, #56]	; (6704 <_free_r+0x1b8>)
    66cc:	4290      	cmp	r0, r2
    66ce:	d805      	bhi.n	66dc <_free_r+0x190>
    66d0:	0ca8      	lsrs	r0, r5, #18
    66d2:	0002      	movs	r2, r0
    66d4:	307d      	adds	r0, #125	; 0x7d
    66d6:	327c      	adds	r2, #124	; 0x7c
    66d8:	00c0      	lsls	r0, r0, #3
    66da:	e781      	b.n	65e0 <_free_r+0x94>
    66dc:	20fe      	movs	r0, #254	; 0xfe
    66de:	227e      	movs	r2, #126	; 0x7e
    66e0:	0080      	lsls	r0, r0, #2
    66e2:	e77d      	b.n	65e0 <_free_r+0x94>
    66e4:	4663      	mov	r3, ip
    66e6:	432b      	orrs	r3, r5
    66e8:	604b      	str	r3, [r1, #4]
    66ea:	6015      	str	r5, [r2, #0]
    66ec:	e76c      	b.n	65c8 <_free_r+0x7c>
    66ee:	46c0      	nop			; (mov r8, r8)
    66f0:	2000043c 	.word	0x2000043c
    66f4:	000001ff 	.word	0x000001ff
    66f8:	20000444 	.word	0x20000444
    66fc:	20000848 	.word	0x20000848
    6700:	20000a60 	.word	0x20000a60
    6704:	00000554 	.word	0x00000554

00006708 <_localeconv_r>:
    6708:	4b04      	ldr	r3, [pc, #16]	; (671c <_localeconv_r+0x14>)
    670a:	681b      	ldr	r3, [r3, #0]
    670c:	6b58      	ldr	r0, [r3, #52]	; 0x34
    670e:	2800      	cmp	r0, #0
    6710:	d001      	beq.n	6716 <_localeconv_r+0xe>
    6712:	30f0      	adds	r0, #240	; 0xf0
    6714:	4770      	bx	lr
    6716:	4802      	ldr	r0, [pc, #8]	; (6720 <_localeconv_r+0x18>)
    6718:	e7fb      	b.n	6712 <_localeconv_r+0xa>
    671a:	46c0      	nop			; (mov r8, r8)
    671c:	20000008 	.word	0x20000008
    6720:	2000084c 	.word	0x2000084c

00006724 <__retarget_lock_acquire_recursive>:
    6724:	4770      	bx	lr
    6726:	46c0      	nop			; (mov r8, r8)

00006728 <__retarget_lock_release_recursive>:
    6728:	4770      	bx	lr
    672a:	46c0      	nop			; (mov r8, r8)

0000672c <_malloc_r>:
    672c:	b5f0      	push	{r4, r5, r6, r7, lr}
    672e:	4657      	mov	r7, sl
    6730:	4645      	mov	r5, r8
    6732:	46de      	mov	lr, fp
    6734:	464e      	mov	r6, r9
    6736:	b5e0      	push	{r5, r6, r7, lr}
    6738:	000d      	movs	r5, r1
    673a:	350b      	adds	r5, #11
    673c:	b083      	sub	sp, #12
    673e:	0007      	movs	r7, r0
    6740:	2d16      	cmp	r5, #22
    6742:	d800      	bhi.n	6746 <_malloc_r+0x1a>
    6744:	e09f      	b.n	6886 <_malloc_r+0x15a>
    6746:	2307      	movs	r3, #7
    6748:	439d      	bics	r5, r3
    674a:	d500      	bpl.n	674e <_malloc_r+0x22>
    674c:	e0c4      	b.n	68d8 <_malloc_r+0x1ac>
    674e:	42a9      	cmp	r1, r5
    6750:	d900      	bls.n	6754 <_malloc_r+0x28>
    6752:	e0c1      	b.n	68d8 <_malloc_r+0x1ac>
    6754:	f000 fade 	bl	6d14 <__malloc_lock>
    6758:	23f8      	movs	r3, #248	; 0xf8
    675a:	33ff      	adds	r3, #255	; 0xff
    675c:	429d      	cmp	r5, r3
    675e:	d800      	bhi.n	6762 <_malloc_r+0x36>
    6760:	e28f      	b.n	6c82 <_malloc_r+0x556>
    6762:	0a68      	lsrs	r0, r5, #9
    6764:	d100      	bne.n	6768 <_malloc_r+0x3c>
    6766:	e0bb      	b.n	68e0 <_malloc_r+0x1b4>
    6768:	2804      	cmp	r0, #4
    676a:	d900      	bls.n	676e <_malloc_r+0x42>
    676c:	e162      	b.n	6a34 <_malloc_r+0x308>
    676e:	2338      	movs	r3, #56	; 0x38
    6770:	4698      	mov	r8, r3
    6772:	09a8      	lsrs	r0, r5, #6
    6774:	4480      	add	r8, r0
    6776:	3039      	adds	r0, #57	; 0x39
    6778:	00c1      	lsls	r1, r0, #3
    677a:	4ed2      	ldr	r6, [pc, #840]	; (6ac4 <_malloc_r+0x398>)
    677c:	1871      	adds	r1, r6, r1
    677e:	3908      	subs	r1, #8
    6780:	68cc      	ldr	r4, [r1, #12]
    6782:	42a1      	cmp	r1, r4
    6784:	d019      	beq.n	67ba <_malloc_r+0x8e>
    6786:	2303      	movs	r3, #3
    6788:	6862      	ldr	r2, [r4, #4]
    678a:	439a      	bics	r2, r3
    678c:	0013      	movs	r3, r2
    678e:	1b52      	subs	r2, r2, r5
    6790:	2a0f      	cmp	r2, #15
    6792:	dd00      	ble.n	6796 <_malloc_r+0x6a>
    6794:	e0aa      	b.n	68ec <_malloc_r+0x1c0>
    6796:	2a00      	cmp	r2, #0
    6798:	db00      	blt.n	679c <_malloc_r+0x70>
    679a:	e088      	b.n	68ae <_malloc_r+0x182>
    679c:	2303      	movs	r3, #3
    679e:	469c      	mov	ip, r3
    67a0:	e008      	b.n	67b4 <_malloc_r+0x88>
    67a2:	4662      	mov	r2, ip
    67a4:	6863      	ldr	r3, [r4, #4]
    67a6:	4393      	bics	r3, r2
    67a8:	1b5a      	subs	r2, r3, r5
    67aa:	2a0f      	cmp	r2, #15
    67ac:	dd00      	ble.n	67b0 <_malloc_r+0x84>
    67ae:	e09d      	b.n	68ec <_malloc_r+0x1c0>
    67b0:	2a00      	cmp	r2, #0
    67b2:	da7c      	bge.n	68ae <_malloc_r+0x182>
    67b4:	68e4      	ldr	r4, [r4, #12]
    67b6:	42a1      	cmp	r1, r4
    67b8:	d1f3      	bne.n	67a2 <_malloc_r+0x76>
    67ba:	0032      	movs	r2, r6
    67bc:	6934      	ldr	r4, [r6, #16]
    67be:	3208      	adds	r2, #8
    67c0:	4294      	cmp	r4, r2
    67c2:	d100      	bne.n	67c6 <_malloc_r+0x9a>
    67c4:	e190      	b.n	6ae8 <_malloc_r+0x3bc>
    67c6:	2303      	movs	r3, #3
    67c8:	6861      	ldr	r1, [r4, #4]
    67ca:	4399      	bics	r1, r3
    67cc:	4689      	mov	r9, r1
    67ce:	1b49      	subs	r1, r1, r5
    67d0:	290f      	cmp	r1, #15
    67d2:	dd00      	ble.n	67d6 <_malloc_r+0xaa>
    67d4:	e162      	b.n	6a9c <_malloc_r+0x370>
    67d6:	6172      	str	r2, [r6, #20]
    67d8:	6132      	str	r2, [r6, #16]
    67da:	2900      	cmp	r1, #0
    67dc:	db00      	blt.n	67e0 <_malloc_r+0xb4>
    67de:	e087      	b.n	68f0 <_malloc_r+0x1c4>
    67e0:	4ab9      	ldr	r2, [pc, #740]	; (6ac8 <_malloc_r+0x39c>)
    67e2:	464b      	mov	r3, r9
    67e4:	4591      	cmp	r9, r2
    67e6:	d900      	bls.n	67ea <_malloc_r+0xbe>
    67e8:	e130      	b.n	6a4c <_malloc_r+0x320>
    67ea:	08db      	lsrs	r3, r3, #3
    67ec:	3aff      	subs	r2, #255	; 0xff
    67ee:	1099      	asrs	r1, r3, #2
    67f0:	3aff      	subs	r2, #255	; 0xff
    67f2:	408a      	lsls	r2, r1
    67f4:	00db      	lsls	r3, r3, #3
    67f6:	6871      	ldr	r1, [r6, #4]
    67f8:	199b      	adds	r3, r3, r6
    67fa:	430a      	orrs	r2, r1
    67fc:	6899      	ldr	r1, [r3, #8]
    67fe:	6072      	str	r2, [r6, #4]
    6800:	60e3      	str	r3, [r4, #12]
    6802:	60a1      	str	r1, [r4, #8]
    6804:	609c      	str	r4, [r3, #8]
    6806:	0013      	movs	r3, r2
    6808:	60cc      	str	r4, [r1, #12]
    680a:	2101      	movs	r1, #1
    680c:	1082      	asrs	r2, r0, #2
    680e:	4091      	lsls	r1, r2
    6810:	4299      	cmp	r1, r3
    6812:	d86f      	bhi.n	68f4 <_malloc_r+0x1c8>
    6814:	420b      	tst	r3, r1
    6816:	d105      	bne.n	6824 <_malloc_r+0xf8>
    6818:	2203      	movs	r2, #3
    681a:	4390      	bics	r0, r2
    681c:	0049      	lsls	r1, r1, #1
    681e:	3004      	adds	r0, #4
    6820:	420b      	tst	r3, r1
    6822:	d0fb      	beq.n	681c <_malloc_r+0xf0>
    6824:	2303      	movs	r3, #3
    6826:	4698      	mov	r8, r3
    6828:	00c3      	lsls	r3, r0, #3
    682a:	4699      	mov	r9, r3
    682c:	44b1      	add	r9, r6
    682e:	46cc      	mov	ip, r9
    6830:	4682      	mov	sl, r0
    6832:	4663      	mov	r3, ip
    6834:	68dc      	ldr	r4, [r3, #12]
    6836:	45a4      	cmp	ip, r4
    6838:	d107      	bne.n	684a <_malloc_r+0x11e>
    683a:	e157      	b.n	6aec <_malloc_r+0x3c0>
    683c:	2a00      	cmp	r2, #0
    683e:	db00      	blt.n	6842 <_malloc_r+0x116>
    6840:	e166      	b.n	6b10 <_malloc_r+0x3e4>
    6842:	68e4      	ldr	r4, [r4, #12]
    6844:	45a4      	cmp	ip, r4
    6846:	d100      	bne.n	684a <_malloc_r+0x11e>
    6848:	e150      	b.n	6aec <_malloc_r+0x3c0>
    684a:	4642      	mov	r2, r8
    684c:	6863      	ldr	r3, [r4, #4]
    684e:	4393      	bics	r3, r2
    6850:	1b5a      	subs	r2, r3, r5
    6852:	2a0f      	cmp	r2, #15
    6854:	ddf2      	ble.n	683c <_malloc_r+0x110>
    6856:	2001      	movs	r0, #1
    6858:	4680      	mov	r8, r0
    685a:	1961      	adds	r1, r4, r5
    685c:	4305      	orrs	r5, r0
    685e:	6065      	str	r5, [r4, #4]
    6860:	68a0      	ldr	r0, [r4, #8]
    6862:	68e5      	ldr	r5, [r4, #12]
    6864:	3608      	adds	r6, #8
    6866:	60c5      	str	r5, [r0, #12]
    6868:	60a8      	str	r0, [r5, #8]
    686a:	4640      	mov	r0, r8
    686c:	60f1      	str	r1, [r6, #12]
    686e:	60b1      	str	r1, [r6, #8]
    6870:	4310      	orrs	r0, r2
    6872:	6048      	str	r0, [r1, #4]
    6874:	60ce      	str	r6, [r1, #12]
    6876:	608e      	str	r6, [r1, #8]
    6878:	0038      	movs	r0, r7
    687a:	50e2      	str	r2, [r4, r3]
    687c:	f000 fa52 	bl	6d24 <__malloc_unlock>
    6880:	0020      	movs	r0, r4
    6882:	3008      	adds	r0, #8
    6884:	e021      	b.n	68ca <_malloc_r+0x19e>
    6886:	2910      	cmp	r1, #16
    6888:	d826      	bhi.n	68d8 <_malloc_r+0x1ac>
    688a:	0038      	movs	r0, r7
    688c:	f000 fa42 	bl	6d14 <__malloc_lock>
    6890:	2510      	movs	r5, #16
    6892:	2318      	movs	r3, #24
    6894:	2002      	movs	r0, #2
    6896:	4e8b      	ldr	r6, [pc, #556]	; (6ac4 <_malloc_r+0x398>)
    6898:	18f3      	adds	r3, r6, r3
    689a:	001a      	movs	r2, r3
    689c:	685c      	ldr	r4, [r3, #4]
    689e:	3a08      	subs	r2, #8
    68a0:	4294      	cmp	r4, r2
    68a2:	d100      	bne.n	68a6 <_malloc_r+0x17a>
    68a4:	e12e      	b.n	6b04 <_malloc_r+0x3d8>
    68a6:	2303      	movs	r3, #3
    68a8:	6862      	ldr	r2, [r4, #4]
    68aa:	439a      	bics	r2, r3
    68ac:	0013      	movs	r3, r2
    68ae:	68e2      	ldr	r2, [r4, #12]
    68b0:	68a1      	ldr	r1, [r4, #8]
    68b2:	60ca      	str	r2, [r1, #12]
    68b4:	6091      	str	r1, [r2, #8]
    68b6:	2201      	movs	r2, #1
    68b8:	18e3      	adds	r3, r4, r3
    68ba:	6859      	ldr	r1, [r3, #4]
    68bc:	0038      	movs	r0, r7
    68be:	430a      	orrs	r2, r1
    68c0:	605a      	str	r2, [r3, #4]
    68c2:	f000 fa2f 	bl	6d24 <__malloc_unlock>
    68c6:	0020      	movs	r0, r4
    68c8:	3008      	adds	r0, #8
    68ca:	b003      	add	sp, #12
    68cc:	bc3c      	pop	{r2, r3, r4, r5}
    68ce:	4690      	mov	r8, r2
    68d0:	4699      	mov	r9, r3
    68d2:	46a2      	mov	sl, r4
    68d4:	46ab      	mov	fp, r5
    68d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    68d8:	230c      	movs	r3, #12
    68da:	2000      	movs	r0, #0
    68dc:	603b      	str	r3, [r7, #0]
    68de:	e7f4      	b.n	68ca <_malloc_r+0x19e>
    68e0:	2180      	movs	r1, #128	; 0x80
    68e2:	233f      	movs	r3, #63	; 0x3f
    68e4:	2040      	movs	r0, #64	; 0x40
    68e6:	0089      	lsls	r1, r1, #2
    68e8:	4698      	mov	r8, r3
    68ea:	e746      	b.n	677a <_malloc_r+0x4e>
    68ec:	4640      	mov	r0, r8
    68ee:	e764      	b.n	67ba <_malloc_r+0x8e>
    68f0:	464b      	mov	r3, r9
    68f2:	e7e0      	b.n	68b6 <_malloc_r+0x18a>
    68f4:	2303      	movs	r3, #3
    68f6:	68b4      	ldr	r4, [r6, #8]
    68f8:	6862      	ldr	r2, [r4, #4]
    68fa:	439a      	bics	r2, r3
    68fc:	4690      	mov	r8, r2
    68fe:	42aa      	cmp	r2, r5
    6900:	d303      	bcc.n	690a <_malloc_r+0x1de>
    6902:	1b53      	subs	r3, r2, r5
    6904:	2b0f      	cmp	r3, #15
    6906:	dd00      	ble.n	690a <_malloc_r+0x1de>
    6908:	e086      	b.n	6a18 <_malloc_r+0x2ec>
    690a:	0023      	movs	r3, r4
    690c:	4443      	add	r3, r8
    690e:	4a6f      	ldr	r2, [pc, #444]	; (6acc <_malloc_r+0x3a0>)
    6910:	9301      	str	r3, [sp, #4]
    6912:	4b6f      	ldr	r3, [pc, #444]	; (6ad0 <_malloc_r+0x3a4>)
    6914:	4693      	mov	fp, r2
    6916:	681b      	ldr	r3, [r3, #0]
    6918:	6812      	ldr	r2, [r2, #0]
    691a:	18eb      	adds	r3, r5, r3
    691c:	3201      	adds	r2, #1
    691e:	d100      	bne.n	6922 <_malloc_r+0x1f6>
    6920:	e168      	b.n	6bf4 <_malloc_r+0x4c8>
    6922:	4a6c      	ldr	r2, [pc, #432]	; (6ad4 <_malloc_r+0x3a8>)
    6924:	4694      	mov	ip, r2
    6926:	4463      	add	r3, ip
    6928:	0b1b      	lsrs	r3, r3, #12
    692a:	031b      	lsls	r3, r3, #12
    692c:	9300      	str	r3, [sp, #0]
    692e:	9900      	ldr	r1, [sp, #0]
    6930:	0038      	movs	r0, r7
    6932:	f000 fd47 	bl	73c4 <_sbrk_r>
    6936:	0003      	movs	r3, r0
    6938:	4681      	mov	r9, r0
    693a:	3301      	adds	r3, #1
    693c:	d061      	beq.n	6a02 <_malloc_r+0x2d6>
    693e:	9b01      	ldr	r3, [sp, #4]
    6940:	4283      	cmp	r3, r0
    6942:	d900      	bls.n	6946 <_malloc_r+0x21a>
    6944:	e0ff      	b.n	6b46 <_malloc_r+0x41a>
    6946:	4b64      	ldr	r3, [pc, #400]	; (6ad8 <_malloc_r+0x3ac>)
    6948:	9a00      	ldr	r2, [sp, #0]
    694a:	469a      	mov	sl, r3
    694c:	681b      	ldr	r3, [r3, #0]
    694e:	469c      	mov	ip, r3
    6950:	4653      	mov	r3, sl
    6952:	4462      	add	r2, ip
    6954:	601a      	str	r2, [r3, #0]
    6956:	9b01      	ldr	r3, [sp, #4]
    6958:	0011      	movs	r1, r2
    695a:	4283      	cmp	r3, r0
    695c:	d100      	bne.n	6960 <_malloc_r+0x234>
    695e:	e155      	b.n	6c0c <_malloc_r+0x4e0>
    6960:	465b      	mov	r3, fp
    6962:	681b      	ldr	r3, [r3, #0]
    6964:	3301      	adds	r3, #1
    6966:	d100      	bne.n	696a <_malloc_r+0x23e>
    6968:	e16c      	b.n	6c44 <_malloc_r+0x518>
    696a:	464b      	mov	r3, r9
    696c:	9a01      	ldr	r2, [sp, #4]
    696e:	1a9b      	subs	r3, r3, r2
    6970:	1859      	adds	r1, r3, r1
    6972:	4653      	mov	r3, sl
    6974:	6019      	str	r1, [r3, #0]
    6976:	2307      	movs	r3, #7
    6978:	464a      	mov	r2, r9
    697a:	4013      	ands	r3, r2
    697c:	d100      	bne.n	6980 <_malloc_r+0x254>
    697e:	e124      	b.n	6bca <_malloc_r+0x49e>
    6980:	2108      	movs	r1, #8
    6982:	4689      	mov	r9, r1
    6984:	4955      	ldr	r1, [pc, #340]	; (6adc <_malloc_r+0x3b0>)
    6986:	1ad2      	subs	r2, r2, r3
    6988:	4491      	add	r9, r2
    698a:	1acb      	subs	r3, r1, r3
    698c:	9a00      	ldr	r2, [sp, #0]
    698e:	0038      	movs	r0, r7
    6990:	444a      	add	r2, r9
    6992:	0511      	lsls	r1, r2, #20
    6994:	0d09      	lsrs	r1, r1, #20
    6996:	1a5b      	subs	r3, r3, r1
    6998:	0019      	movs	r1, r3
    699a:	469b      	mov	fp, r3
    699c:	f000 fd12 	bl	73c4 <_sbrk_r>
    69a0:	1c43      	adds	r3, r0, #1
    69a2:	d100      	bne.n	69a6 <_malloc_r+0x27a>
    69a4:	e142      	b.n	6c2c <_malloc_r+0x500>
    69a6:	464b      	mov	r3, r9
    69a8:	1ac0      	subs	r0, r0, r3
    69aa:	2301      	movs	r3, #1
    69ac:	4458      	add	r0, fp
    69ae:	4318      	orrs	r0, r3
    69b0:	4653      	mov	r3, sl
    69b2:	681b      	ldr	r3, [r3, #0]
    69b4:	445b      	add	r3, fp
    69b6:	0019      	movs	r1, r3
    69b8:	4653      	mov	r3, sl
    69ba:	6019      	str	r1, [r3, #0]
    69bc:	464b      	mov	r3, r9
    69be:	60b3      	str	r3, [r6, #8]
    69c0:	6058      	str	r0, [r3, #4]
    69c2:	42b4      	cmp	r4, r6
    69c4:	d013      	beq.n	69ee <_malloc_r+0x2c2>
    69c6:	4643      	mov	r3, r8
    69c8:	2b0f      	cmp	r3, #15
    69ca:	d800      	bhi.n	69ce <_malloc_r+0x2a2>
    69cc:	e0e8      	b.n	6ba0 <_malloc_r+0x474>
    69ce:	4643      	mov	r3, r8
    69d0:	2207      	movs	r2, #7
    69d2:	6860      	ldr	r0, [r4, #4]
    69d4:	3b0c      	subs	r3, #12
    69d6:	4393      	bics	r3, r2
    69d8:	3a06      	subs	r2, #6
    69da:	4002      	ands	r2, r0
    69dc:	2005      	movs	r0, #5
    69de:	431a      	orrs	r2, r3
    69e0:	6062      	str	r2, [r4, #4]
    69e2:	18e2      	adds	r2, r4, r3
    69e4:	6050      	str	r0, [r2, #4]
    69e6:	6090      	str	r0, [r2, #8]
    69e8:	2b0f      	cmp	r3, #15
    69ea:	d900      	bls.n	69ee <_malloc_r+0x2c2>
    69ec:	e122      	b.n	6c34 <_malloc_r+0x508>
    69ee:	4b3c      	ldr	r3, [pc, #240]	; (6ae0 <_malloc_r+0x3b4>)
    69f0:	681a      	ldr	r2, [r3, #0]
    69f2:	4291      	cmp	r1, r2
    69f4:	d900      	bls.n	69f8 <_malloc_r+0x2cc>
    69f6:	6019      	str	r1, [r3, #0]
    69f8:	4b3a      	ldr	r3, [pc, #232]	; (6ae4 <_malloc_r+0x3b8>)
    69fa:	681a      	ldr	r2, [r3, #0]
    69fc:	4291      	cmp	r1, r2
    69fe:	d900      	bls.n	6a02 <_malloc_r+0x2d6>
    6a00:	6019      	str	r1, [r3, #0]
    6a02:	2303      	movs	r3, #3
    6a04:	68b4      	ldr	r4, [r6, #8]
    6a06:	6862      	ldr	r2, [r4, #4]
    6a08:	439a      	bics	r2, r3
    6a0a:	1b53      	subs	r3, r2, r5
    6a0c:	4295      	cmp	r5, r2
    6a0e:	d900      	bls.n	6a12 <_malloc_r+0x2e6>
    6a10:	e0c9      	b.n	6ba6 <_malloc_r+0x47a>
    6a12:	2b0f      	cmp	r3, #15
    6a14:	dc00      	bgt.n	6a18 <_malloc_r+0x2ec>
    6a16:	e0c6      	b.n	6ba6 <_malloc_r+0x47a>
    6a18:	2201      	movs	r2, #1
    6a1a:	0029      	movs	r1, r5
    6a1c:	4313      	orrs	r3, r2
    6a1e:	4311      	orrs	r1, r2
    6a20:	1965      	adds	r5, r4, r5
    6a22:	6061      	str	r1, [r4, #4]
    6a24:	0038      	movs	r0, r7
    6a26:	60b5      	str	r5, [r6, #8]
    6a28:	606b      	str	r3, [r5, #4]
    6a2a:	f000 f97b 	bl	6d24 <__malloc_unlock>
    6a2e:	0020      	movs	r0, r4
    6a30:	3008      	adds	r0, #8
    6a32:	e74a      	b.n	68ca <_malloc_r+0x19e>
    6a34:	2814      	cmp	r0, #20
    6a36:	d97a      	bls.n	6b2e <_malloc_r+0x402>
    6a38:	2854      	cmp	r0, #84	; 0x54
    6a3a:	d900      	bls.n	6a3e <_malloc_r+0x312>
    6a3c:	e0ba      	b.n	6bb4 <_malloc_r+0x488>
    6a3e:	236e      	movs	r3, #110	; 0x6e
    6a40:	4698      	mov	r8, r3
    6a42:	0b28      	lsrs	r0, r5, #12
    6a44:	4480      	add	r8, r0
    6a46:	306f      	adds	r0, #111	; 0x6f
    6a48:	00c1      	lsls	r1, r0, #3
    6a4a:	e696      	b.n	677a <_malloc_r+0x4e>
    6a4c:	0a5a      	lsrs	r2, r3, #9
    6a4e:	2a04      	cmp	r2, #4
    6a50:	d973      	bls.n	6b3a <_malloc_r+0x40e>
    6a52:	2a14      	cmp	r2, #20
    6a54:	d900      	bls.n	6a58 <_malloc_r+0x32c>
    6a56:	e0d0      	b.n	6bfa <_malloc_r+0x4ce>
    6a58:	0011      	movs	r1, r2
    6a5a:	325c      	adds	r2, #92	; 0x5c
    6a5c:	315b      	adds	r1, #91	; 0x5b
    6a5e:	00d2      	lsls	r2, r2, #3
    6a60:	2308      	movs	r3, #8
    6a62:	425b      	negs	r3, r3
    6a64:	469c      	mov	ip, r3
    6a66:	18b2      	adds	r2, r6, r2
    6a68:	4494      	add	ip, r2
    6a6a:	4663      	mov	r3, ip
    6a6c:	689a      	ldr	r2, [r3, #8]
    6a6e:	2303      	movs	r3, #3
    6a70:	4698      	mov	r8, r3
    6a72:	4594      	cmp	ip, r2
    6a74:	d100      	bne.n	6a78 <_malloc_r+0x34c>
    6a76:	e0ab      	b.n	6bd0 <_malloc_r+0x4a4>
    6a78:	4643      	mov	r3, r8
    6a7a:	6851      	ldr	r1, [r2, #4]
    6a7c:	4399      	bics	r1, r3
    6a7e:	4589      	cmp	r9, r1
    6a80:	d300      	bcc.n	6a84 <_malloc_r+0x358>
    6a82:	e095      	b.n	6bb0 <_malloc_r+0x484>
    6a84:	6892      	ldr	r2, [r2, #8]
    6a86:	4594      	cmp	ip, r2
    6a88:	d1f6      	bne.n	6a78 <_malloc_r+0x34c>
    6a8a:	4663      	mov	r3, ip
    6a8c:	68da      	ldr	r2, [r3, #12]
    6a8e:	6873      	ldr	r3, [r6, #4]
    6a90:	4661      	mov	r1, ip
    6a92:	60e2      	str	r2, [r4, #12]
    6a94:	60a1      	str	r1, [r4, #8]
    6a96:	6094      	str	r4, [r2, #8]
    6a98:	60cc      	str	r4, [r1, #12]
    6a9a:	e6b6      	b.n	680a <_malloc_r+0xde>
    6a9c:	2301      	movs	r3, #1
    6a9e:	1960      	adds	r0, r4, r5
    6aa0:	431d      	orrs	r5, r3
    6aa2:	6065      	str	r5, [r4, #4]
    6aa4:	6170      	str	r0, [r6, #20]
    6aa6:	6130      	str	r0, [r6, #16]
    6aa8:	60c2      	str	r2, [r0, #12]
    6aaa:	6082      	str	r2, [r0, #8]
    6aac:	001a      	movs	r2, r3
    6aae:	464b      	mov	r3, r9
    6ab0:	430a      	orrs	r2, r1
    6ab2:	6042      	str	r2, [r0, #4]
    6ab4:	0038      	movs	r0, r7
    6ab6:	50e1      	str	r1, [r4, r3]
    6ab8:	f000 f934 	bl	6d24 <__malloc_unlock>
    6abc:	0020      	movs	r0, r4
    6abe:	3008      	adds	r0, #8
    6ac0:	e703      	b.n	68ca <_malloc_r+0x19e>
    6ac2:	46c0      	nop			; (mov r8, r8)
    6ac4:	2000043c 	.word	0x2000043c
    6ac8:	000001ff 	.word	0x000001ff
    6acc:	20000844 	.word	0x20000844
    6ad0:	20000a60 	.word	0x20000a60
    6ad4:	0000100f 	.word	0x0000100f
    6ad8:	20000a30 	.word	0x20000a30
    6adc:	00001008 	.word	0x00001008
    6ae0:	20000a58 	.word	0x20000a58
    6ae4:	20000a5c 	.word	0x20000a5c
    6ae8:	6873      	ldr	r3, [r6, #4]
    6aea:	e68e      	b.n	680a <_malloc_r+0xde>
    6aec:	2308      	movs	r3, #8
    6aee:	469b      	mov	fp, r3
    6af0:	3b07      	subs	r3, #7
    6af2:	44dc      	add	ip, fp
    6af4:	469b      	mov	fp, r3
    6af6:	44da      	add	sl, fp
    6af8:	4643      	mov	r3, r8
    6afa:	4652      	mov	r2, sl
    6afc:	4213      	tst	r3, r2
    6afe:	d000      	beq.n	6b02 <_malloc_r+0x3d6>
    6b00:	e697      	b.n	6832 <_malloc_r+0x106>
    6b02:	e037      	b.n	6b74 <_malloc_r+0x448>
    6b04:	68dc      	ldr	r4, [r3, #12]
    6b06:	3002      	adds	r0, #2
    6b08:	42a3      	cmp	r3, r4
    6b0a:	d100      	bne.n	6b0e <_malloc_r+0x3e2>
    6b0c:	e655      	b.n	67ba <_malloc_r+0x8e>
    6b0e:	e6ca      	b.n	68a6 <_malloc_r+0x17a>
    6b10:	2201      	movs	r2, #1
    6b12:	18e3      	adds	r3, r4, r3
    6b14:	6859      	ldr	r1, [r3, #4]
    6b16:	0038      	movs	r0, r7
    6b18:	430a      	orrs	r2, r1
    6b1a:	605a      	str	r2, [r3, #4]
    6b1c:	68e3      	ldr	r3, [r4, #12]
    6b1e:	68a2      	ldr	r2, [r4, #8]
    6b20:	60d3      	str	r3, [r2, #12]
    6b22:	609a      	str	r2, [r3, #8]
    6b24:	f000 f8fe 	bl	6d24 <__malloc_unlock>
    6b28:	0020      	movs	r0, r4
    6b2a:	3008      	adds	r0, #8
    6b2c:	e6cd      	b.n	68ca <_malloc_r+0x19e>
    6b2e:	235b      	movs	r3, #91	; 0x5b
    6b30:	4698      	mov	r8, r3
    6b32:	4480      	add	r8, r0
    6b34:	305c      	adds	r0, #92	; 0x5c
    6b36:	00c1      	lsls	r1, r0, #3
    6b38:	e61f      	b.n	677a <_malloc_r+0x4e>
    6b3a:	099a      	lsrs	r2, r3, #6
    6b3c:	0011      	movs	r1, r2
    6b3e:	3239      	adds	r2, #57	; 0x39
    6b40:	3138      	adds	r1, #56	; 0x38
    6b42:	00d2      	lsls	r2, r2, #3
    6b44:	e78c      	b.n	6a60 <_malloc_r+0x334>
    6b46:	42b4      	cmp	r4, r6
    6b48:	d000      	beq.n	6b4c <_malloc_r+0x420>
    6b4a:	e75a      	b.n	6a02 <_malloc_r+0x2d6>
    6b4c:	4b4f      	ldr	r3, [pc, #316]	; (6c8c <_malloc_r+0x560>)
    6b4e:	9a00      	ldr	r2, [sp, #0]
    6b50:	469a      	mov	sl, r3
    6b52:	681b      	ldr	r3, [r3, #0]
    6b54:	469c      	mov	ip, r3
    6b56:	4653      	mov	r3, sl
    6b58:	4462      	add	r2, ip
    6b5a:	0011      	movs	r1, r2
    6b5c:	601a      	str	r2, [r3, #0]
    6b5e:	e6ff      	b.n	6960 <_malloc_r+0x234>
    6b60:	2308      	movs	r3, #8
    6b62:	425b      	negs	r3, r3
    6b64:	469c      	mov	ip, r3
    6b66:	44e1      	add	r9, ip
    6b68:	464b      	mov	r3, r9
    6b6a:	689b      	ldr	r3, [r3, #8]
    6b6c:	3801      	subs	r0, #1
    6b6e:	4599      	cmp	r9, r3
    6b70:	d000      	beq.n	6b74 <_malloc_r+0x448>
    6b72:	e084      	b.n	6c7e <_malloc_r+0x552>
    6b74:	4643      	mov	r3, r8
    6b76:	4203      	tst	r3, r0
    6b78:	d1f2      	bne.n	6b60 <_malloc_r+0x434>
    6b7a:	6873      	ldr	r3, [r6, #4]
    6b7c:	438b      	bics	r3, r1
    6b7e:	6073      	str	r3, [r6, #4]
    6b80:	0049      	lsls	r1, r1, #1
    6b82:	4299      	cmp	r1, r3
    6b84:	d900      	bls.n	6b88 <_malloc_r+0x45c>
    6b86:	e6b5      	b.n	68f4 <_malloc_r+0x1c8>
    6b88:	2900      	cmp	r1, #0
    6b8a:	d100      	bne.n	6b8e <_malloc_r+0x462>
    6b8c:	e6b2      	b.n	68f4 <_malloc_r+0x1c8>
    6b8e:	4650      	mov	r0, sl
    6b90:	420b      	tst	r3, r1
    6b92:	d000      	beq.n	6b96 <_malloc_r+0x46a>
    6b94:	e648      	b.n	6828 <_malloc_r+0xfc>
    6b96:	0049      	lsls	r1, r1, #1
    6b98:	3004      	adds	r0, #4
    6b9a:	420b      	tst	r3, r1
    6b9c:	d0fb      	beq.n	6b96 <_malloc_r+0x46a>
    6b9e:	e643      	b.n	6828 <_malloc_r+0xfc>
    6ba0:	2301      	movs	r3, #1
    6ba2:	464a      	mov	r2, r9
    6ba4:	6053      	str	r3, [r2, #4]
    6ba6:	0038      	movs	r0, r7
    6ba8:	f000 f8bc 	bl	6d24 <__malloc_unlock>
    6bac:	2000      	movs	r0, #0
    6bae:	e68c      	b.n	68ca <_malloc_r+0x19e>
    6bb0:	4694      	mov	ip, r2
    6bb2:	e76a      	b.n	6a8a <_malloc_r+0x35e>
    6bb4:	23aa      	movs	r3, #170	; 0xaa
    6bb6:	005b      	lsls	r3, r3, #1
    6bb8:	4298      	cmp	r0, r3
    6bba:	d811      	bhi.n	6be0 <_malloc_r+0x4b4>
    6bbc:	3bdd      	subs	r3, #221	; 0xdd
    6bbe:	4698      	mov	r8, r3
    6bc0:	0be8      	lsrs	r0, r5, #15
    6bc2:	4480      	add	r8, r0
    6bc4:	3078      	adds	r0, #120	; 0x78
    6bc6:	00c1      	lsls	r1, r0, #3
    6bc8:	e5d7      	b.n	677a <_malloc_r+0x4e>
    6bca:	2380      	movs	r3, #128	; 0x80
    6bcc:	015b      	lsls	r3, r3, #5
    6bce:	e6dd      	b.n	698c <_malloc_r+0x260>
    6bd0:	1089      	asrs	r1, r1, #2
    6bd2:	3b02      	subs	r3, #2
    6bd4:	408b      	lsls	r3, r1
    6bd6:	6872      	ldr	r2, [r6, #4]
    6bd8:	4313      	orrs	r3, r2
    6bda:	6073      	str	r3, [r6, #4]
    6bdc:	4662      	mov	r2, ip
    6bde:	e757      	b.n	6a90 <_malloc_r+0x364>
    6be0:	4b2b      	ldr	r3, [pc, #172]	; (6c90 <_malloc_r+0x564>)
    6be2:	4298      	cmp	r0, r3
    6be4:	d81c      	bhi.n	6c20 <_malloc_r+0x4f4>
    6be6:	237c      	movs	r3, #124	; 0x7c
    6be8:	4698      	mov	r8, r3
    6bea:	0ca8      	lsrs	r0, r5, #18
    6bec:	4480      	add	r8, r0
    6bee:	307d      	adds	r0, #125	; 0x7d
    6bf0:	00c1      	lsls	r1, r0, #3
    6bf2:	e5c2      	b.n	677a <_malloc_r+0x4e>
    6bf4:	3310      	adds	r3, #16
    6bf6:	9300      	str	r3, [sp, #0]
    6bf8:	e699      	b.n	692e <_malloc_r+0x202>
    6bfa:	2a54      	cmp	r2, #84	; 0x54
    6bfc:	d826      	bhi.n	6c4c <_malloc_r+0x520>
    6bfe:	464b      	mov	r3, r9
    6c00:	0b1a      	lsrs	r2, r3, #12
    6c02:	0011      	movs	r1, r2
    6c04:	326f      	adds	r2, #111	; 0x6f
    6c06:	316e      	adds	r1, #110	; 0x6e
    6c08:	00d2      	lsls	r2, r2, #3
    6c0a:	e729      	b.n	6a60 <_malloc_r+0x334>
    6c0c:	051b      	lsls	r3, r3, #20
    6c0e:	d000      	beq.n	6c12 <_malloc_r+0x4e6>
    6c10:	e6a6      	b.n	6960 <_malloc_r+0x234>
    6c12:	2001      	movs	r0, #1
    6c14:	9b00      	ldr	r3, [sp, #0]
    6c16:	68b2      	ldr	r2, [r6, #8]
    6c18:	4443      	add	r3, r8
    6c1a:	4303      	orrs	r3, r0
    6c1c:	6053      	str	r3, [r2, #4]
    6c1e:	e6e6      	b.n	69ee <_malloc_r+0x2c2>
    6c20:	21fe      	movs	r1, #254	; 0xfe
    6c22:	237e      	movs	r3, #126	; 0x7e
    6c24:	207f      	movs	r0, #127	; 0x7f
    6c26:	0089      	lsls	r1, r1, #2
    6c28:	4698      	mov	r8, r3
    6c2a:	e5a6      	b.n	677a <_malloc_r+0x4e>
    6c2c:	2300      	movs	r3, #0
    6c2e:	2001      	movs	r0, #1
    6c30:	469b      	mov	fp, r3
    6c32:	e6bd      	b.n	69b0 <_malloc_r+0x284>
    6c34:	0021      	movs	r1, r4
    6c36:	0038      	movs	r0, r7
    6c38:	3108      	adds	r1, #8
    6c3a:	f7ff fc87 	bl	654c <_free_r>
    6c3e:	4653      	mov	r3, sl
    6c40:	6819      	ldr	r1, [r3, #0]
    6c42:	e6d4      	b.n	69ee <_malloc_r+0x2c2>
    6c44:	465b      	mov	r3, fp
    6c46:	464a      	mov	r2, r9
    6c48:	601a      	str	r2, [r3, #0]
    6c4a:	e694      	b.n	6976 <_malloc_r+0x24a>
    6c4c:	21aa      	movs	r1, #170	; 0xaa
    6c4e:	0049      	lsls	r1, r1, #1
    6c50:	428a      	cmp	r2, r1
    6c52:	d806      	bhi.n	6c62 <_malloc_r+0x536>
    6c54:	464b      	mov	r3, r9
    6c56:	0bda      	lsrs	r2, r3, #15
    6c58:	0011      	movs	r1, r2
    6c5a:	3278      	adds	r2, #120	; 0x78
    6c5c:	3177      	adds	r1, #119	; 0x77
    6c5e:	00d2      	lsls	r2, r2, #3
    6c60:	e6fe      	b.n	6a60 <_malloc_r+0x334>
    6c62:	490b      	ldr	r1, [pc, #44]	; (6c90 <_malloc_r+0x564>)
    6c64:	428a      	cmp	r2, r1
    6c66:	d806      	bhi.n	6c76 <_malloc_r+0x54a>
    6c68:	464b      	mov	r3, r9
    6c6a:	0c9a      	lsrs	r2, r3, #18
    6c6c:	0011      	movs	r1, r2
    6c6e:	327d      	adds	r2, #125	; 0x7d
    6c70:	317c      	adds	r1, #124	; 0x7c
    6c72:	00d2      	lsls	r2, r2, #3
    6c74:	e6f4      	b.n	6a60 <_malloc_r+0x334>
    6c76:	22fe      	movs	r2, #254	; 0xfe
    6c78:	217e      	movs	r1, #126	; 0x7e
    6c7a:	0092      	lsls	r2, r2, #2
    6c7c:	e6f0      	b.n	6a60 <_malloc_r+0x334>
    6c7e:	6873      	ldr	r3, [r6, #4]
    6c80:	e77e      	b.n	6b80 <_malloc_r+0x454>
    6c82:	002b      	movs	r3, r5
    6c84:	08e8      	lsrs	r0, r5, #3
    6c86:	3308      	adds	r3, #8
    6c88:	e605      	b.n	6896 <_malloc_r+0x16a>
    6c8a:	46c0      	nop			; (mov r8, r8)
    6c8c:	20000a30 	.word	0x20000a30
    6c90:	00000554 	.word	0x00000554

00006c94 <memchr>:
    6c94:	b570      	push	{r4, r5, r6, lr}
    6c96:	b2cd      	uxtb	r5, r1
    6c98:	0783      	lsls	r3, r0, #30
    6c9a:	d034      	beq.n	6d06 <memchr+0x72>
    6c9c:	1e54      	subs	r4, r2, #1
    6c9e:	2a00      	cmp	r2, #0
    6ca0:	d01b      	beq.n	6cda <memchr+0x46>
    6ca2:	7803      	ldrb	r3, [r0, #0]
    6ca4:	42ab      	cmp	r3, r5
    6ca6:	d019      	beq.n	6cdc <memchr+0x48>
    6ca8:	2203      	movs	r2, #3
    6caa:	e004      	b.n	6cb6 <memchr+0x22>
    6cac:	3c01      	subs	r4, #1
    6cae:	d314      	bcc.n	6cda <memchr+0x46>
    6cb0:	7803      	ldrb	r3, [r0, #0]
    6cb2:	42ab      	cmp	r3, r5
    6cb4:	d012      	beq.n	6cdc <memchr+0x48>
    6cb6:	3001      	adds	r0, #1
    6cb8:	4210      	tst	r0, r2
    6cba:	d1f7      	bne.n	6cac <memchr+0x18>
    6cbc:	2c03      	cmp	r4, #3
    6cbe:	d80e      	bhi.n	6cde <memchr+0x4a>
    6cc0:	2c00      	cmp	r4, #0
    6cc2:	d00a      	beq.n	6cda <memchr+0x46>
    6cc4:	7803      	ldrb	r3, [r0, #0]
    6cc6:	42ab      	cmp	r3, r5
    6cc8:	d008      	beq.n	6cdc <memchr+0x48>
    6cca:	1904      	adds	r4, r0, r4
    6ccc:	e002      	b.n	6cd4 <memchr+0x40>
    6cce:	7803      	ldrb	r3, [r0, #0]
    6cd0:	42ab      	cmp	r3, r5
    6cd2:	d003      	beq.n	6cdc <memchr+0x48>
    6cd4:	3001      	adds	r0, #1
    6cd6:	4284      	cmp	r4, r0
    6cd8:	d1f9      	bne.n	6cce <memchr+0x3a>
    6cda:	2000      	movs	r0, #0
    6cdc:	bd70      	pop	{r4, r5, r6, pc}
    6cde:	22ff      	movs	r2, #255	; 0xff
    6ce0:	060b      	lsls	r3, r1, #24
    6ce2:	0c1b      	lsrs	r3, r3, #16
    6ce4:	4011      	ands	r1, r2
    6ce6:	4319      	orrs	r1, r3
    6ce8:	040b      	lsls	r3, r1, #16
    6cea:	4e08      	ldr	r6, [pc, #32]	; (6d0c <memchr+0x78>)
    6cec:	4319      	orrs	r1, r3
    6cee:	6803      	ldr	r3, [r0, #0]
    6cf0:	4a07      	ldr	r2, [pc, #28]	; (6d10 <memchr+0x7c>)
    6cf2:	404b      	eors	r3, r1
    6cf4:	189a      	adds	r2, r3, r2
    6cf6:	439a      	bics	r2, r3
    6cf8:	4232      	tst	r2, r6
    6cfa:	d1e3      	bne.n	6cc4 <memchr+0x30>
    6cfc:	3c04      	subs	r4, #4
    6cfe:	3004      	adds	r0, #4
    6d00:	2c03      	cmp	r4, #3
    6d02:	d8f4      	bhi.n	6cee <memchr+0x5a>
    6d04:	e7dc      	b.n	6cc0 <memchr+0x2c>
    6d06:	0014      	movs	r4, r2
    6d08:	e7d8      	b.n	6cbc <memchr+0x28>
    6d0a:	46c0      	nop			; (mov r8, r8)
    6d0c:	80808080 	.word	0x80808080
    6d10:	fefefeff 	.word	0xfefefeff

00006d14 <__malloc_lock>:
    6d14:	b510      	push	{r4, lr}
    6d16:	4802      	ldr	r0, [pc, #8]	; (6d20 <__malloc_lock+0xc>)
    6d18:	f7ff fd04 	bl	6724 <__retarget_lock_acquire_recursive>
    6d1c:	bd10      	pop	{r4, pc}
    6d1e:	46c0      	nop			; (mov r8, r8)
    6d20:	20000b48 	.word	0x20000b48

00006d24 <__malloc_unlock>:
    6d24:	b510      	push	{r4, lr}
    6d26:	4802      	ldr	r0, [pc, #8]	; (6d30 <__malloc_unlock+0xc>)
    6d28:	f7ff fcfe 	bl	6728 <__retarget_lock_release_recursive>
    6d2c:	bd10      	pop	{r4, pc}
    6d2e:	46c0      	nop			; (mov r8, r8)
    6d30:	20000b48 	.word	0x20000b48

00006d34 <_Balloc>:
    6d34:	b570      	push	{r4, r5, r6, lr}
    6d36:	0004      	movs	r4, r0
    6d38:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
    6d3a:	000d      	movs	r5, r1
    6d3c:	2800      	cmp	r0, #0
    6d3e:	d00a      	beq.n	6d56 <_Balloc+0x22>
    6d40:	00ab      	lsls	r3, r5, #2
    6d42:	18c3      	adds	r3, r0, r3
    6d44:	6818      	ldr	r0, [r3, #0]
    6d46:	2800      	cmp	r0, #0
    6d48:	d00f      	beq.n	6d6a <_Balloc+0x36>
    6d4a:	6802      	ldr	r2, [r0, #0]
    6d4c:	601a      	str	r2, [r3, #0]
    6d4e:	2300      	movs	r3, #0
    6d50:	6103      	str	r3, [r0, #16]
    6d52:	60c3      	str	r3, [r0, #12]
    6d54:	bd70      	pop	{r4, r5, r6, pc}
    6d56:	2221      	movs	r2, #33	; 0x21
    6d58:	2104      	movs	r1, #4
    6d5a:	0020      	movs	r0, r4
    6d5c:	f001 fec2 	bl	8ae4 <_calloc_r>
    6d60:	64e0      	str	r0, [r4, #76]	; 0x4c
    6d62:	2800      	cmp	r0, #0
    6d64:	d1ec      	bne.n	6d40 <_Balloc+0xc>
    6d66:	2000      	movs	r0, #0
    6d68:	e7f4      	b.n	6d54 <_Balloc+0x20>
    6d6a:	2601      	movs	r6, #1
    6d6c:	40ae      	lsls	r6, r5
    6d6e:	1d72      	adds	r2, r6, #5
    6d70:	0092      	lsls	r2, r2, #2
    6d72:	2101      	movs	r1, #1
    6d74:	0020      	movs	r0, r4
    6d76:	f001 feb5 	bl	8ae4 <_calloc_r>
    6d7a:	2800      	cmp	r0, #0
    6d7c:	d0f3      	beq.n	6d66 <_Balloc+0x32>
    6d7e:	6045      	str	r5, [r0, #4]
    6d80:	6086      	str	r6, [r0, #8]
    6d82:	e7e4      	b.n	6d4e <_Balloc+0x1a>

00006d84 <_Bfree>:
    6d84:	2900      	cmp	r1, #0
    6d86:	d006      	beq.n	6d96 <_Bfree+0x12>
    6d88:	684b      	ldr	r3, [r1, #4]
    6d8a:	009a      	lsls	r2, r3, #2
    6d8c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
    6d8e:	189b      	adds	r3, r3, r2
    6d90:	681a      	ldr	r2, [r3, #0]
    6d92:	600a      	str	r2, [r1, #0]
    6d94:	6019      	str	r1, [r3, #0]
    6d96:	4770      	bx	lr

00006d98 <__multadd>:
    6d98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6d9a:	46ce      	mov	lr, r9
    6d9c:	4647      	mov	r7, r8
    6d9e:	4681      	mov	r9, r0
    6da0:	0008      	movs	r0, r1
    6da2:	b580      	push	{r7, lr}
    6da4:	000d      	movs	r5, r1
    6da6:	690c      	ldr	r4, [r1, #16]
    6da8:	001f      	movs	r7, r3
    6daa:	2100      	movs	r1, #0
    6dac:	3014      	adds	r0, #20
    6dae:	6803      	ldr	r3, [r0, #0]
    6db0:	3101      	adds	r1, #1
    6db2:	041e      	lsls	r6, r3, #16
    6db4:	0c36      	lsrs	r6, r6, #16
    6db6:	4356      	muls	r6, r2
    6db8:	0c1b      	lsrs	r3, r3, #16
    6dba:	4353      	muls	r3, r2
    6dbc:	19f6      	adds	r6, r6, r7
    6dbe:	0c37      	lsrs	r7, r6, #16
    6dc0:	19db      	adds	r3, r3, r7
    6dc2:	0436      	lsls	r6, r6, #16
    6dc4:	0c1f      	lsrs	r7, r3, #16
    6dc6:	0c36      	lsrs	r6, r6, #16
    6dc8:	041b      	lsls	r3, r3, #16
    6dca:	199b      	adds	r3, r3, r6
    6dcc:	c008      	stmia	r0!, {r3}
    6dce:	428c      	cmp	r4, r1
    6dd0:	dced      	bgt.n	6dae <__multadd+0x16>
    6dd2:	2f00      	cmp	r7, #0
    6dd4:	d008      	beq.n	6de8 <__multadd+0x50>
    6dd6:	68ab      	ldr	r3, [r5, #8]
    6dd8:	429c      	cmp	r4, r3
    6dda:	da0a      	bge.n	6df2 <__multadd+0x5a>
    6ddc:	1d23      	adds	r3, r4, #4
    6dde:	009b      	lsls	r3, r3, #2
    6de0:	18eb      	adds	r3, r5, r3
    6de2:	3401      	adds	r4, #1
    6de4:	605f      	str	r7, [r3, #4]
    6de6:	612c      	str	r4, [r5, #16]
    6de8:	0028      	movs	r0, r5
    6dea:	bc0c      	pop	{r2, r3}
    6dec:	4690      	mov	r8, r2
    6dee:	4699      	mov	r9, r3
    6df0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    6df2:	686b      	ldr	r3, [r5, #4]
    6df4:	4648      	mov	r0, r9
    6df6:	1c59      	adds	r1, r3, #1
    6df8:	f7ff ff9c 	bl	6d34 <_Balloc>
    6dfc:	0029      	movs	r1, r5
    6dfe:	692b      	ldr	r3, [r5, #16]
    6e00:	4680      	mov	r8, r0
    6e02:	1c9a      	adds	r2, r3, #2
    6e04:	0092      	lsls	r2, r2, #2
    6e06:	310c      	adds	r1, #12
    6e08:	300c      	adds	r0, #12
    6e0a:	f7fe f96f 	bl	50ec <memcpy>
    6e0e:	686b      	ldr	r3, [r5, #4]
    6e10:	009a      	lsls	r2, r3, #2
    6e12:	464b      	mov	r3, r9
    6e14:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    6e16:	189b      	adds	r3, r3, r2
    6e18:	681a      	ldr	r2, [r3, #0]
    6e1a:	602a      	str	r2, [r5, #0]
    6e1c:	601d      	str	r5, [r3, #0]
    6e1e:	4645      	mov	r5, r8
    6e20:	e7dc      	b.n	6ddc <__multadd+0x44>
    6e22:	46c0      	nop			; (mov r8, r8)

00006e24 <__hi0bits>:
    6e24:	0003      	movs	r3, r0
    6e26:	0c02      	lsrs	r2, r0, #16
    6e28:	2000      	movs	r0, #0
    6e2a:	2a00      	cmp	r2, #0
    6e2c:	d101      	bne.n	6e32 <__hi0bits+0xe>
    6e2e:	041b      	lsls	r3, r3, #16
    6e30:	3010      	adds	r0, #16
    6e32:	0e1a      	lsrs	r2, r3, #24
    6e34:	d101      	bne.n	6e3a <__hi0bits+0x16>
    6e36:	3008      	adds	r0, #8
    6e38:	021b      	lsls	r3, r3, #8
    6e3a:	0f1a      	lsrs	r2, r3, #28
    6e3c:	d101      	bne.n	6e42 <__hi0bits+0x1e>
    6e3e:	3004      	adds	r0, #4
    6e40:	011b      	lsls	r3, r3, #4
    6e42:	0f9a      	lsrs	r2, r3, #30
    6e44:	d101      	bne.n	6e4a <__hi0bits+0x26>
    6e46:	3002      	adds	r0, #2
    6e48:	009b      	lsls	r3, r3, #2
    6e4a:	2b00      	cmp	r3, #0
    6e4c:	db03      	blt.n	6e56 <__hi0bits+0x32>
    6e4e:	3001      	adds	r0, #1
    6e50:	005b      	lsls	r3, r3, #1
    6e52:	d400      	bmi.n	6e56 <__hi0bits+0x32>
    6e54:	2020      	movs	r0, #32
    6e56:	4770      	bx	lr

00006e58 <__lo0bits>:
    6e58:	6803      	ldr	r3, [r0, #0]
    6e5a:	075a      	lsls	r2, r3, #29
    6e5c:	d009      	beq.n	6e72 <__lo0bits+0x1a>
    6e5e:	2200      	movs	r2, #0
    6e60:	07d9      	lsls	r1, r3, #31
    6e62:	d404      	bmi.n	6e6e <__lo0bits+0x16>
    6e64:	079a      	lsls	r2, r3, #30
    6e66:	d420      	bmi.n	6eaa <__lo0bits+0x52>
    6e68:	2202      	movs	r2, #2
    6e6a:	089b      	lsrs	r3, r3, #2
    6e6c:	6003      	str	r3, [r0, #0]
    6e6e:	0010      	movs	r0, r2
    6e70:	4770      	bx	lr
    6e72:	0419      	lsls	r1, r3, #16
    6e74:	2200      	movs	r2, #0
    6e76:	2900      	cmp	r1, #0
    6e78:	d101      	bne.n	6e7e <__lo0bits+0x26>
    6e7a:	0c1b      	lsrs	r3, r3, #16
    6e7c:	3210      	adds	r2, #16
    6e7e:	21ff      	movs	r1, #255	; 0xff
    6e80:	4219      	tst	r1, r3
    6e82:	d101      	bne.n	6e88 <__lo0bits+0x30>
    6e84:	3208      	adds	r2, #8
    6e86:	0a1b      	lsrs	r3, r3, #8
    6e88:	0719      	lsls	r1, r3, #28
    6e8a:	d101      	bne.n	6e90 <__lo0bits+0x38>
    6e8c:	3204      	adds	r2, #4
    6e8e:	091b      	lsrs	r3, r3, #4
    6e90:	0799      	lsls	r1, r3, #30
    6e92:	d101      	bne.n	6e98 <__lo0bits+0x40>
    6e94:	3202      	adds	r2, #2
    6e96:	089b      	lsrs	r3, r3, #2
    6e98:	07d9      	lsls	r1, r3, #31
    6e9a:	d404      	bmi.n	6ea6 <__lo0bits+0x4e>
    6e9c:	085b      	lsrs	r3, r3, #1
    6e9e:	d101      	bne.n	6ea4 <__lo0bits+0x4c>
    6ea0:	2220      	movs	r2, #32
    6ea2:	e7e4      	b.n	6e6e <__lo0bits+0x16>
    6ea4:	3201      	adds	r2, #1
    6ea6:	6003      	str	r3, [r0, #0]
    6ea8:	e7e1      	b.n	6e6e <__lo0bits+0x16>
    6eaa:	085b      	lsrs	r3, r3, #1
    6eac:	6003      	str	r3, [r0, #0]
    6eae:	2201      	movs	r2, #1
    6eb0:	e7dd      	b.n	6e6e <__lo0bits+0x16>
    6eb2:	46c0      	nop			; (mov r8, r8)

00006eb4 <__i2b>:
    6eb4:	b510      	push	{r4, lr}
    6eb6:	000c      	movs	r4, r1
    6eb8:	2101      	movs	r1, #1
    6eba:	f7ff ff3b 	bl	6d34 <_Balloc>
    6ebe:	2301      	movs	r3, #1
    6ec0:	6144      	str	r4, [r0, #20]
    6ec2:	6103      	str	r3, [r0, #16]
    6ec4:	bd10      	pop	{r4, pc}
    6ec6:	46c0      	nop			; (mov r8, r8)

00006ec8 <__multiply>:
    6ec8:	b5f0      	push	{r4, r5, r6, r7, lr}
    6eca:	4657      	mov	r7, sl
    6ecc:	464e      	mov	r6, r9
    6ece:	4645      	mov	r5, r8
    6ed0:	46de      	mov	lr, fp
    6ed2:	b5e0      	push	{r5, r6, r7, lr}
    6ed4:	6914      	ldr	r4, [r2, #16]
    6ed6:	690e      	ldr	r6, [r1, #16]
    6ed8:	b085      	sub	sp, #20
    6eda:	000f      	movs	r7, r1
    6edc:	0015      	movs	r5, r2
    6ede:	42a6      	cmp	r6, r4
    6ee0:	da04      	bge.n	6eec <__multiply+0x24>
    6ee2:	0033      	movs	r3, r6
    6ee4:	0017      	movs	r7, r2
    6ee6:	0026      	movs	r6, r4
    6ee8:	000d      	movs	r5, r1
    6eea:	001c      	movs	r4, r3
    6eec:	1933      	adds	r3, r6, r4
    6eee:	4698      	mov	r8, r3
    6ef0:	68bb      	ldr	r3, [r7, #8]
    6ef2:	6879      	ldr	r1, [r7, #4]
    6ef4:	4598      	cmp	r8, r3
    6ef6:	dd00      	ble.n	6efa <__multiply+0x32>
    6ef8:	3101      	adds	r1, #1
    6efa:	f7ff ff1b 	bl	6d34 <_Balloc>
    6efe:	2214      	movs	r2, #20
    6f00:	0003      	movs	r3, r0
    6f02:	4694      	mov	ip, r2
    6f04:	4463      	add	r3, ip
    6f06:	469b      	mov	fp, r3
    6f08:	4643      	mov	r3, r8
    6f0a:	009b      	lsls	r3, r3, #2
    6f0c:	445b      	add	r3, fp
    6f0e:	0019      	movs	r1, r3
    6f10:	9302      	str	r3, [sp, #8]
    6f12:	9003      	str	r0, [sp, #12]
    6f14:	465b      	mov	r3, fp
    6f16:	2200      	movs	r2, #0
    6f18:	458b      	cmp	fp, r1
    6f1a:	d203      	bcs.n	6f24 <__multiply+0x5c>
    6f1c:	9902      	ldr	r1, [sp, #8]
    6f1e:	c304      	stmia	r3!, {r2}
    6f20:	4299      	cmp	r1, r3
    6f22:	d8fc      	bhi.n	6f1e <__multiply+0x56>
    6f24:	2314      	movs	r3, #20
    6f26:	00a4      	lsls	r4, r4, #2
    6f28:	469a      	mov	sl, r3
    6f2a:	3714      	adds	r7, #20
    6f2c:	0023      	movs	r3, r4
    6f2e:	46bc      	mov	ip, r7
    6f30:	44aa      	add	sl, r5
    6f32:	00b6      	lsls	r6, r6, #2
    6f34:	4453      	add	r3, sl
    6f36:	9700      	str	r7, [sp, #0]
    6f38:	44b4      	add	ip, r6
    6f3a:	9301      	str	r3, [sp, #4]
    6f3c:	459a      	cmp	sl, r3
    6f3e:	d24f      	bcs.n	6fe0 <__multiply+0x118>
    6f40:	4653      	mov	r3, sl
    6f42:	681b      	ldr	r3, [r3, #0]
    6f44:	041e      	lsls	r6, r3, #16
    6f46:	0c36      	lsrs	r6, r6, #16
    6f48:	d020      	beq.n	6f8c <__multiply+0xc4>
    6f4a:	465c      	mov	r4, fp
    6f4c:	2700      	movs	r7, #0
    6f4e:	9d00      	ldr	r5, [sp, #0]
    6f50:	0021      	movs	r1, r4
    6f52:	cc08      	ldmia	r4!, {r3}
    6f54:	cd04      	ldmia	r5!, {r2}
    6f56:	4699      	mov	r9, r3
    6f58:	4648      	mov	r0, r9
    6f5a:	0413      	lsls	r3, r2, #16
    6f5c:	0c1b      	lsrs	r3, r3, #16
    6f5e:	4373      	muls	r3, r6
    6f60:	0400      	lsls	r0, r0, #16
    6f62:	0c00      	lsrs	r0, r0, #16
    6f64:	181b      	adds	r3, r3, r0
    6f66:	19d8      	adds	r0, r3, r7
    6f68:	0c13      	lsrs	r3, r2, #16
    6f6a:	464a      	mov	r2, r9
    6f6c:	4373      	muls	r3, r6
    6f6e:	0c12      	lsrs	r2, r2, #16
    6f70:	189b      	adds	r3, r3, r2
    6f72:	0c02      	lsrs	r2, r0, #16
    6f74:	189b      	adds	r3, r3, r2
    6f76:	0402      	lsls	r2, r0, #16
    6f78:	0c1f      	lsrs	r7, r3, #16
    6f7a:	0c12      	lsrs	r2, r2, #16
    6f7c:	041b      	lsls	r3, r3, #16
    6f7e:	4313      	orrs	r3, r2
    6f80:	600b      	str	r3, [r1, #0]
    6f82:	45ac      	cmp	ip, r5
    6f84:	d8e4      	bhi.n	6f50 <__multiply+0x88>
    6f86:	4653      	mov	r3, sl
    6f88:	6027      	str	r7, [r4, #0]
    6f8a:	681b      	ldr	r3, [r3, #0]
    6f8c:	0c1e      	lsrs	r6, r3, #16
    6f8e:	d020      	beq.n	6fd2 <__multiply+0x10a>
    6f90:	465b      	mov	r3, fp
    6f92:	2100      	movs	r1, #0
    6f94:	681b      	ldr	r3, [r3, #0]
    6f96:	465c      	mov	r4, fp
    6f98:	0018      	movs	r0, r3
    6f9a:	000f      	movs	r7, r1
    6f9c:	4662      	mov	r2, ip
    6f9e:	9d00      	ldr	r5, [sp, #0]
    6fa0:	8829      	ldrh	r1, [r5, #0]
    6fa2:	0c00      	lsrs	r0, r0, #16
    6fa4:	4371      	muls	r1, r6
    6fa6:	1809      	adds	r1, r1, r0
    6fa8:	19c9      	adds	r1, r1, r7
    6faa:	041b      	lsls	r3, r3, #16
    6fac:	0408      	lsls	r0, r1, #16
    6fae:	0c1b      	lsrs	r3, r3, #16
    6fb0:	4303      	orrs	r3, r0
    6fb2:	6023      	str	r3, [r4, #0]
    6fb4:	cd08      	ldmia	r5!, {r3}
    6fb6:	6860      	ldr	r0, [r4, #4]
    6fb8:	0c1b      	lsrs	r3, r3, #16
    6fba:	4373      	muls	r3, r6
    6fbc:	0407      	lsls	r7, r0, #16
    6fbe:	0c3f      	lsrs	r7, r7, #16
    6fc0:	19db      	adds	r3, r3, r7
    6fc2:	0c09      	lsrs	r1, r1, #16
    6fc4:	185b      	adds	r3, r3, r1
    6fc6:	0c1f      	lsrs	r7, r3, #16
    6fc8:	3404      	adds	r4, #4
    6fca:	42aa      	cmp	r2, r5
    6fcc:	d8e8      	bhi.n	6fa0 <__multiply+0xd8>
    6fce:	4694      	mov	ip, r2
    6fd0:	6023      	str	r3, [r4, #0]
    6fd2:	2304      	movs	r3, #4
    6fd4:	4699      	mov	r9, r3
    6fd6:	9b01      	ldr	r3, [sp, #4]
    6fd8:	44ca      	add	sl, r9
    6fda:	44cb      	add	fp, r9
    6fdc:	4553      	cmp	r3, sl
    6fde:	d8af      	bhi.n	6f40 <__multiply+0x78>
    6fe0:	4643      	mov	r3, r8
    6fe2:	2b00      	cmp	r3, #0
    6fe4:	dd0e      	ble.n	7004 <__multiply+0x13c>
    6fe6:	9b02      	ldr	r3, [sp, #8]
    6fe8:	3b04      	subs	r3, #4
    6fea:	681a      	ldr	r2, [r3, #0]
    6fec:	2a00      	cmp	r2, #0
    6fee:	d109      	bne.n	7004 <__multiply+0x13c>
    6ff0:	4642      	mov	r2, r8
    6ff2:	e003      	b.n	6ffc <__multiply+0x134>
    6ff4:	3b04      	subs	r3, #4
    6ff6:	6819      	ldr	r1, [r3, #0]
    6ff8:	2900      	cmp	r1, #0
    6ffa:	d102      	bne.n	7002 <__multiply+0x13a>
    6ffc:	3a01      	subs	r2, #1
    6ffe:	2a00      	cmp	r2, #0
    7000:	d1f8      	bne.n	6ff4 <__multiply+0x12c>
    7002:	4690      	mov	r8, r2
    7004:	9b03      	ldr	r3, [sp, #12]
    7006:	4642      	mov	r2, r8
    7008:	0018      	movs	r0, r3
    700a:	611a      	str	r2, [r3, #16]
    700c:	b005      	add	sp, #20
    700e:	bc3c      	pop	{r2, r3, r4, r5}
    7010:	4690      	mov	r8, r2
    7012:	4699      	mov	r9, r3
    7014:	46a2      	mov	sl, r4
    7016:	46ab      	mov	fp, r5
    7018:	bdf0      	pop	{r4, r5, r6, r7, pc}
    701a:	46c0      	nop			; (mov r8, r8)

0000701c <__pow5mult>:
    701c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    701e:	4647      	mov	r7, r8
    7020:	46ce      	mov	lr, r9
    7022:	2303      	movs	r3, #3
    7024:	b580      	push	{r7, lr}
    7026:	4680      	mov	r8, r0
    7028:	000f      	movs	r7, r1
    702a:	0014      	movs	r4, r2
    702c:	4013      	ands	r3, r2
    702e:	d13a      	bne.n	70a6 <__pow5mult+0x8a>
    7030:	10a4      	asrs	r4, r4, #2
    7032:	003e      	movs	r6, r7
    7034:	2c00      	cmp	r4, #0
    7036:	d025      	beq.n	7084 <__pow5mult+0x68>
    7038:	4643      	mov	r3, r8
    703a:	6c9d      	ldr	r5, [r3, #72]	; 0x48
    703c:	2d00      	cmp	r5, #0
    703e:	d03b      	beq.n	70b8 <__pow5mult+0x9c>
    7040:	003e      	movs	r6, r7
    7042:	2300      	movs	r3, #0
    7044:	2701      	movs	r7, #1
    7046:	4699      	mov	r9, r3
    7048:	4227      	tst	r7, r4
    704a:	d107      	bne.n	705c <__pow5mult+0x40>
    704c:	1064      	asrs	r4, r4, #1
    704e:	d019      	beq.n	7084 <__pow5mult+0x68>
    7050:	6828      	ldr	r0, [r5, #0]
    7052:	2800      	cmp	r0, #0
    7054:	d01b      	beq.n	708e <__pow5mult+0x72>
    7056:	0005      	movs	r5, r0
    7058:	4227      	tst	r7, r4
    705a:	d0f7      	beq.n	704c <__pow5mult+0x30>
    705c:	002a      	movs	r2, r5
    705e:	0031      	movs	r1, r6
    7060:	4640      	mov	r0, r8
    7062:	f7ff ff31 	bl	6ec8 <__multiply>
    7066:	2e00      	cmp	r6, #0
    7068:	d01b      	beq.n	70a2 <__pow5mult+0x86>
    706a:	4642      	mov	r2, r8
    706c:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
    706e:	6873      	ldr	r3, [r6, #4]
    7070:	4694      	mov	ip, r2
    7072:	009b      	lsls	r3, r3, #2
    7074:	4463      	add	r3, ip
    7076:	681a      	ldr	r2, [r3, #0]
    7078:	1064      	asrs	r4, r4, #1
    707a:	6032      	str	r2, [r6, #0]
    707c:	601e      	str	r6, [r3, #0]
    707e:	0006      	movs	r6, r0
    7080:	2c00      	cmp	r4, #0
    7082:	d1e5      	bne.n	7050 <__pow5mult+0x34>
    7084:	0030      	movs	r0, r6
    7086:	bc0c      	pop	{r2, r3}
    7088:	4690      	mov	r8, r2
    708a:	4699      	mov	r9, r3
    708c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    708e:	002a      	movs	r2, r5
    7090:	0029      	movs	r1, r5
    7092:	4640      	mov	r0, r8
    7094:	f7ff ff18 	bl	6ec8 <__multiply>
    7098:	464b      	mov	r3, r9
    709a:	6028      	str	r0, [r5, #0]
    709c:	6003      	str	r3, [r0, #0]
    709e:	0005      	movs	r5, r0
    70a0:	e7da      	b.n	7058 <__pow5mult+0x3c>
    70a2:	0006      	movs	r6, r0
    70a4:	e7d2      	b.n	704c <__pow5mult+0x30>
    70a6:	4a0b      	ldr	r2, [pc, #44]	; (70d4 <__pow5mult+0xb8>)
    70a8:	3b01      	subs	r3, #1
    70aa:	009b      	lsls	r3, r3, #2
    70ac:	589a      	ldr	r2, [r3, r2]
    70ae:	2300      	movs	r3, #0
    70b0:	f7ff fe72 	bl	6d98 <__multadd>
    70b4:	0007      	movs	r7, r0
    70b6:	e7bb      	b.n	7030 <__pow5mult+0x14>
    70b8:	2101      	movs	r1, #1
    70ba:	4640      	mov	r0, r8
    70bc:	f7ff fe3a 	bl	6d34 <_Balloc>
    70c0:	4b05      	ldr	r3, [pc, #20]	; (70d8 <__pow5mult+0xbc>)
    70c2:	0005      	movs	r5, r0
    70c4:	6143      	str	r3, [r0, #20]
    70c6:	2301      	movs	r3, #1
    70c8:	6103      	str	r3, [r0, #16]
    70ca:	4643      	mov	r3, r8
    70cc:	6498      	str	r0, [r3, #72]	; 0x48
    70ce:	2300      	movs	r3, #0
    70d0:	6003      	str	r3, [r0, #0]
    70d2:	e7b5      	b.n	7040 <__pow5mult+0x24>
    70d4:	00009fa0 	.word	0x00009fa0
    70d8:	00000271 	.word	0x00000271

000070dc <__lshift>:
    70dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    70de:	464e      	mov	r6, r9
    70e0:	4645      	mov	r5, r8
    70e2:	46de      	mov	lr, fp
    70e4:	4657      	mov	r7, sl
    70e6:	b5e0      	push	{r5, r6, r7, lr}
    70e8:	000e      	movs	r6, r1
    70ea:	6933      	ldr	r3, [r6, #16]
    70ec:	1154      	asrs	r4, r2, #5
    70ee:	4698      	mov	r8, r3
    70f0:	44a0      	add	r8, r4
    70f2:	4643      	mov	r3, r8
    70f4:	1c5d      	adds	r5, r3, #1
    70f6:	68b3      	ldr	r3, [r6, #8]
    70f8:	4683      	mov	fp, r0
    70fa:	4691      	mov	r9, r2
    70fc:	6849      	ldr	r1, [r1, #4]
    70fe:	429d      	cmp	r5, r3
    7100:	dd03      	ble.n	710a <__lshift+0x2e>
    7102:	3101      	adds	r1, #1
    7104:	005b      	lsls	r3, r3, #1
    7106:	429d      	cmp	r5, r3
    7108:	dcfb      	bgt.n	7102 <__lshift+0x26>
    710a:	4658      	mov	r0, fp
    710c:	f7ff fe12 	bl	6d34 <_Balloc>
    7110:	0003      	movs	r3, r0
    7112:	4684      	mov	ip, r0
    7114:	3314      	adds	r3, #20
    7116:	2c00      	cmp	r4, #0
    7118:	dd06      	ble.n	7128 <__lshift+0x4c>
    711a:	2100      	movs	r1, #0
    711c:	00a4      	lsls	r4, r4, #2
    711e:	001a      	movs	r2, r3
    7120:	191b      	adds	r3, r3, r4
    7122:	c202      	stmia	r2!, {r1}
    7124:	4293      	cmp	r3, r2
    7126:	d1fc      	bne.n	7122 <__lshift+0x46>
    7128:	6932      	ldr	r2, [r6, #16]
    712a:	4648      	mov	r0, r9
    712c:	0097      	lsls	r7, r2, #2
    712e:	0031      	movs	r1, r6
    7130:	221f      	movs	r2, #31
    7132:	3114      	adds	r1, #20
    7134:	4010      	ands	r0, r2
    7136:	19cf      	adds	r7, r1, r7
    7138:	4681      	mov	r9, r0
    713a:	2800      	cmp	r0, #0
    713c:	d025      	beq.n	718a <__lshift+0xae>
    713e:	2220      	movs	r2, #32
    7140:	1a12      	subs	r2, r2, r0
    7142:	4692      	mov	sl, r2
    7144:	2200      	movs	r2, #0
    7146:	4648      	mov	r0, r9
    7148:	680c      	ldr	r4, [r1, #0]
    714a:	4084      	lsls	r4, r0
    714c:	4650      	mov	r0, sl
    714e:	4314      	orrs	r4, r2
    7150:	601c      	str	r4, [r3, #0]
    7152:	c904      	ldmia	r1!, {r2}
    7154:	3304      	adds	r3, #4
    7156:	40c2      	lsrs	r2, r0
    7158:	428f      	cmp	r7, r1
    715a:	d8f4      	bhi.n	7146 <__lshift+0x6a>
    715c:	601a      	str	r2, [r3, #0]
    715e:	2a00      	cmp	r2, #0
    7160:	d001      	beq.n	7166 <__lshift+0x8a>
    7162:	4645      	mov	r5, r8
    7164:	3502      	adds	r5, #2
    7166:	4663      	mov	r3, ip
    7168:	3d01      	subs	r5, #1
    716a:	611d      	str	r5, [r3, #16]
    716c:	6873      	ldr	r3, [r6, #4]
    716e:	4660      	mov	r0, ip
    7170:	009a      	lsls	r2, r3, #2
    7172:	465b      	mov	r3, fp
    7174:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    7176:	189b      	adds	r3, r3, r2
    7178:	681a      	ldr	r2, [r3, #0]
    717a:	6032      	str	r2, [r6, #0]
    717c:	601e      	str	r6, [r3, #0]
    717e:	bc3c      	pop	{r2, r3, r4, r5}
    7180:	4690      	mov	r8, r2
    7182:	4699      	mov	r9, r3
    7184:	46a2      	mov	sl, r4
    7186:	46ab      	mov	fp, r5
    7188:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    718a:	c904      	ldmia	r1!, {r2}
    718c:	c304      	stmia	r3!, {r2}
    718e:	428f      	cmp	r7, r1
    7190:	d9e9      	bls.n	7166 <__lshift+0x8a>
    7192:	c904      	ldmia	r1!, {r2}
    7194:	c304      	stmia	r3!, {r2}
    7196:	428f      	cmp	r7, r1
    7198:	d8f7      	bhi.n	718a <__lshift+0xae>
    719a:	e7e4      	b.n	7166 <__lshift+0x8a>

0000719c <__mcmp>:
    719c:	690a      	ldr	r2, [r1, #16]
    719e:	6903      	ldr	r3, [r0, #16]
    71a0:	b530      	push	{r4, r5, lr}
    71a2:	0005      	movs	r5, r0
    71a4:	1a98      	subs	r0, r3, r2
    71a6:	d111      	bne.n	71cc <__mcmp+0x30>
    71a8:	0092      	lsls	r2, r2, #2
    71aa:	3514      	adds	r5, #20
    71ac:	3114      	adds	r1, #20
    71ae:	18ab      	adds	r3, r5, r2
    71b0:	1889      	adds	r1, r1, r2
    71b2:	e001      	b.n	71b8 <__mcmp+0x1c>
    71b4:	429d      	cmp	r5, r3
    71b6:	d209      	bcs.n	71cc <__mcmp+0x30>
    71b8:	3b04      	subs	r3, #4
    71ba:	3904      	subs	r1, #4
    71bc:	681c      	ldr	r4, [r3, #0]
    71be:	680a      	ldr	r2, [r1, #0]
    71c0:	4294      	cmp	r4, r2
    71c2:	d0f7      	beq.n	71b4 <__mcmp+0x18>
    71c4:	4294      	cmp	r4, r2
    71c6:	4180      	sbcs	r0, r0
    71c8:	2201      	movs	r2, #1
    71ca:	4310      	orrs	r0, r2
    71cc:	bd30      	pop	{r4, r5, pc}
    71ce:	46c0      	nop			; (mov r8, r8)

000071d0 <__mdiff>:
    71d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    71d2:	4645      	mov	r5, r8
    71d4:	46de      	mov	lr, fp
    71d6:	4657      	mov	r7, sl
    71d8:	464e      	mov	r6, r9
    71da:	0014      	movs	r4, r2
    71dc:	690b      	ldr	r3, [r1, #16]
    71de:	6912      	ldr	r2, [r2, #16]
    71e0:	b5e0      	push	{r5, r6, r7, lr}
    71e2:	4688      	mov	r8, r1
    71e4:	1a9d      	subs	r5, r3, r2
    71e6:	d11a      	bne.n	721e <__mdiff+0x4e>
    71e8:	000f      	movs	r7, r1
    71ea:	2114      	movs	r1, #20
    71ec:	468c      	mov	ip, r1
    71ee:	0092      	lsls	r2, r2, #2
    71f0:	3714      	adds	r7, #20
    71f2:	44a4      	add	ip, r4
    71f4:	18bb      	adds	r3, r7, r2
    71f6:	4462      	add	r2, ip
    71f8:	e002      	b.n	7200 <__mdiff+0x30>
    71fa:	429f      	cmp	r7, r3
    71fc:	d300      	bcc.n	7200 <__mdiff+0x30>
    71fe:	e070      	b.n	72e2 <__mdiff+0x112>
    7200:	3b04      	subs	r3, #4
    7202:	3a04      	subs	r2, #4
    7204:	681e      	ldr	r6, [r3, #0]
    7206:	6811      	ldr	r1, [r2, #0]
    7208:	428e      	cmp	r6, r1
    720a:	d0f6      	beq.n	71fa <__mdiff+0x2a>
    720c:	d300      	bcc.n	7210 <__mdiff+0x40>
    720e:	e071      	b.n	72f4 <__mdiff+0x124>
    7210:	4643      	mov	r3, r8
    7212:	003e      	movs	r6, r7
    7214:	46a0      	mov	r8, r4
    7216:	4667      	mov	r7, ip
    7218:	001c      	movs	r4, r3
    721a:	2501      	movs	r5, #1
    721c:	e006      	b.n	722c <__mdiff+0x5c>
    721e:	2d00      	cmp	r5, #0
    7220:	db6a      	blt.n	72f8 <__mdiff+0x128>
    7222:	4647      	mov	r7, r8
    7224:	0026      	movs	r6, r4
    7226:	2500      	movs	r5, #0
    7228:	3714      	adds	r7, #20
    722a:	3614      	adds	r6, #20
    722c:	4643      	mov	r3, r8
    722e:	6859      	ldr	r1, [r3, #4]
    7230:	f7ff fd80 	bl	6d34 <_Balloc>
    7234:	4643      	mov	r3, r8
    7236:	4681      	mov	r9, r0
    7238:	60c5      	str	r5, [r0, #12]
    723a:	6918      	ldr	r0, [r3, #16]
    723c:	464d      	mov	r5, r9
    723e:	0083      	lsls	r3, r0, #2
    7240:	469c      	mov	ip, r3
    7242:	6923      	ldr	r3, [r4, #16]
    7244:	44bc      	add	ip, r7
    7246:	009b      	lsls	r3, r3, #2
    7248:	4698      	mov	r8, r3
    724a:	2300      	movs	r3, #0
    724c:	44b0      	add	r8, r6
    724e:	3514      	adds	r5, #20
    7250:	469a      	mov	sl, r3
    7252:	e000      	b.n	7256 <__mdiff+0x86>
    7254:	0027      	movs	r7, r4
    7256:	ce04      	ldmia	r6!, {r2}
    7258:	003c      	movs	r4, r7
    725a:	4693      	mov	fp, r2
    725c:	4659      	mov	r1, fp
    725e:	cc08      	ldmia	r4!, {r3}
    7260:	0409      	lsls	r1, r1, #16
    7262:	041a      	lsls	r2, r3, #16
    7264:	0c12      	lsrs	r2, r2, #16
    7266:	4452      	add	r2, sl
    7268:	0c09      	lsrs	r1, r1, #16
    726a:	1a52      	subs	r2, r2, r1
    726c:	0c19      	lsrs	r1, r3, #16
    726e:	465b      	mov	r3, fp
    7270:	0c1b      	lsrs	r3, r3, #16
    7272:	1acb      	subs	r3, r1, r3
    7274:	1411      	asrs	r1, r2, #16
    7276:	185b      	adds	r3, r3, r1
    7278:	0412      	lsls	r2, r2, #16
    727a:	1419      	asrs	r1, r3, #16
    727c:	0c12      	lsrs	r2, r2, #16
    727e:	041b      	lsls	r3, r3, #16
    7280:	468a      	mov	sl, r1
    7282:	4313      	orrs	r3, r2
    7284:	1d29      	adds	r1, r5, #4
    7286:	602b      	str	r3, [r5, #0]
    7288:	000d      	movs	r5, r1
    728a:	45b0      	cmp	r8, r6
    728c:	d8e2      	bhi.n	7254 <__mdiff+0x84>
    728e:	45a4      	cmp	ip, r4
    7290:	d916      	bls.n	72c0 <__mdiff+0xf0>
    7292:	cc08      	ldmia	r4!, {r3}
    7294:	041a      	lsls	r2, r3, #16
    7296:	0c12      	lsrs	r2, r2, #16
    7298:	4452      	add	r2, sl
    729a:	1416      	asrs	r6, r2, #16
    729c:	0c1b      	lsrs	r3, r3, #16
    729e:	199b      	adds	r3, r3, r6
    72a0:	0412      	lsls	r2, r2, #16
    72a2:	141e      	asrs	r6, r3, #16
    72a4:	0c12      	lsrs	r2, r2, #16
    72a6:	041b      	lsls	r3, r3, #16
    72a8:	4313      	orrs	r3, r2
    72aa:	46b2      	mov	sl, r6
    72ac:	c508      	stmia	r5!, {r3}
    72ae:	45a4      	cmp	ip, r4
    72b0:	d8ef      	bhi.n	7292 <__mdiff+0xc2>
    72b2:	4662      	mov	r2, ip
    72b4:	2403      	movs	r4, #3
    72b6:	1bd2      	subs	r2, r2, r7
    72b8:	3a05      	subs	r2, #5
    72ba:	43a2      	bics	r2, r4
    72bc:	3204      	adds	r2, #4
    72be:	1889      	adds	r1, r1, r2
    72c0:	3904      	subs	r1, #4
    72c2:	2b00      	cmp	r3, #0
    72c4:	d104      	bne.n	72d0 <__mdiff+0x100>
    72c6:	3904      	subs	r1, #4
    72c8:	680b      	ldr	r3, [r1, #0]
    72ca:	3801      	subs	r0, #1
    72cc:	2b00      	cmp	r3, #0
    72ce:	d0fa      	beq.n	72c6 <__mdiff+0xf6>
    72d0:	464b      	mov	r3, r9
    72d2:	6118      	str	r0, [r3, #16]
    72d4:	4648      	mov	r0, r9
    72d6:	bc3c      	pop	{r2, r3, r4, r5}
    72d8:	4690      	mov	r8, r2
    72da:	4699      	mov	r9, r3
    72dc:	46a2      	mov	sl, r4
    72de:	46ab      	mov	fp, r5
    72e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    72e2:	2100      	movs	r1, #0
    72e4:	f7ff fd26 	bl	6d34 <_Balloc>
    72e8:	2301      	movs	r3, #1
    72ea:	6103      	str	r3, [r0, #16]
    72ec:	2300      	movs	r3, #0
    72ee:	4681      	mov	r9, r0
    72f0:	6143      	str	r3, [r0, #20]
    72f2:	e7ef      	b.n	72d4 <__mdiff+0x104>
    72f4:	4666      	mov	r6, ip
    72f6:	e799      	b.n	722c <__mdiff+0x5c>
    72f8:	0027      	movs	r7, r4
    72fa:	000e      	movs	r6, r1
    72fc:	46a0      	mov	r8, r4
    72fe:	3714      	adds	r7, #20
    7300:	3614      	adds	r6, #20
    7302:	000c      	movs	r4, r1
    7304:	2501      	movs	r5, #1
    7306:	e791      	b.n	722c <__mdiff+0x5c>

00007308 <__d2b>:
    7308:	b5f0      	push	{r4, r5, r6, r7, lr}
    730a:	2101      	movs	r1, #1
    730c:	001c      	movs	r4, r3
    730e:	b083      	sub	sp, #12
    7310:	9e08      	ldr	r6, [sp, #32]
    7312:	0015      	movs	r5, r2
    7314:	f7ff fd0e 	bl	6d34 <_Balloc>
    7318:	0323      	lsls	r3, r4, #12
    731a:	0064      	lsls	r4, r4, #1
    731c:	0007      	movs	r7, r0
    731e:	0b1b      	lsrs	r3, r3, #12
    7320:	0d64      	lsrs	r4, r4, #21
    7322:	d002      	beq.n	732a <__d2b+0x22>
    7324:	2280      	movs	r2, #128	; 0x80
    7326:	0352      	lsls	r2, r2, #13
    7328:	4313      	orrs	r3, r2
    732a:	9301      	str	r3, [sp, #4]
    732c:	2d00      	cmp	r5, #0
    732e:	d019      	beq.n	7364 <__d2b+0x5c>
    7330:	4668      	mov	r0, sp
    7332:	9500      	str	r5, [sp, #0]
    7334:	f7ff fd90 	bl	6e58 <__lo0bits>
    7338:	2800      	cmp	r0, #0
    733a:	d130      	bne.n	739e <__d2b+0x96>
    733c:	9b00      	ldr	r3, [sp, #0]
    733e:	617b      	str	r3, [r7, #20]
    7340:	9b01      	ldr	r3, [sp, #4]
    7342:	61bb      	str	r3, [r7, #24]
    7344:	1e5a      	subs	r2, r3, #1
    7346:	4193      	sbcs	r3, r2
    7348:	1c5d      	adds	r5, r3, #1
    734a:	613d      	str	r5, [r7, #16]
    734c:	2c00      	cmp	r4, #0
    734e:	d014      	beq.n	737a <__d2b+0x72>
    7350:	4b19      	ldr	r3, [pc, #100]	; (73b8 <__d2b+0xb0>)
    7352:	469c      	mov	ip, r3
    7354:	2335      	movs	r3, #53	; 0x35
    7356:	4464      	add	r4, ip
    7358:	1824      	adds	r4, r4, r0
    735a:	1a18      	subs	r0, r3, r0
    735c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    735e:	6034      	str	r4, [r6, #0]
    7360:	6018      	str	r0, [r3, #0]
    7362:	e019      	b.n	7398 <__d2b+0x90>
    7364:	a801      	add	r0, sp, #4
    7366:	f7ff fd77 	bl	6e58 <__lo0bits>
    736a:	9b01      	ldr	r3, [sp, #4]
    736c:	3020      	adds	r0, #32
    736e:	617b      	str	r3, [r7, #20]
    7370:	2301      	movs	r3, #1
    7372:	2501      	movs	r5, #1
    7374:	613b      	str	r3, [r7, #16]
    7376:	2c00      	cmp	r4, #0
    7378:	d1ea      	bne.n	7350 <__d2b+0x48>
    737a:	4b10      	ldr	r3, [pc, #64]	; (73bc <__d2b+0xb4>)
    737c:	469c      	mov	ip, r3
    737e:	4b10      	ldr	r3, [pc, #64]	; (73c0 <__d2b+0xb8>)
    7380:	4460      	add	r0, ip
    7382:	18eb      	adds	r3, r5, r3
    7384:	009b      	lsls	r3, r3, #2
    7386:	18fb      	adds	r3, r7, r3
    7388:	6030      	str	r0, [r6, #0]
    738a:	6958      	ldr	r0, [r3, #20]
    738c:	f7ff fd4a 	bl	6e24 <__hi0bits>
    7390:	016b      	lsls	r3, r5, #5
    7392:	1a18      	subs	r0, r3, r0
    7394:	9b09      	ldr	r3, [sp, #36]	; 0x24
    7396:	6018      	str	r0, [r3, #0]
    7398:	0038      	movs	r0, r7
    739a:	b003      	add	sp, #12
    739c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    739e:	9b01      	ldr	r3, [sp, #4]
    73a0:	2220      	movs	r2, #32
    73a2:	0019      	movs	r1, r3
    73a4:	1a12      	subs	r2, r2, r0
    73a6:	4091      	lsls	r1, r2
    73a8:	000a      	movs	r2, r1
    73aa:	40c3      	lsrs	r3, r0
    73ac:	9900      	ldr	r1, [sp, #0]
    73ae:	9301      	str	r3, [sp, #4]
    73b0:	430a      	orrs	r2, r1
    73b2:	617a      	str	r2, [r7, #20]
    73b4:	e7c5      	b.n	7342 <__d2b+0x3a>
    73b6:	46c0      	nop			; (mov r8, r8)
    73b8:	fffffbcd 	.word	0xfffffbcd
    73bc:	fffffbce 	.word	0xfffffbce
    73c0:	3fffffff 	.word	0x3fffffff

000073c4 <_sbrk_r>:
    73c4:	2300      	movs	r3, #0
    73c6:	b570      	push	{r4, r5, r6, lr}
    73c8:	4c06      	ldr	r4, [pc, #24]	; (73e4 <_sbrk_r+0x20>)
    73ca:	0005      	movs	r5, r0
    73cc:	0008      	movs	r0, r1
    73ce:	6023      	str	r3, [r4, #0]
    73d0:	f7fa fb6a 	bl	1aa8 <_sbrk>
    73d4:	1c43      	adds	r3, r0, #1
    73d6:	d000      	beq.n	73da <_sbrk_r+0x16>
    73d8:	bd70      	pop	{r4, r5, r6, pc}
    73da:	6823      	ldr	r3, [r4, #0]
    73dc:	2b00      	cmp	r3, #0
    73de:	d0fb      	beq.n	73d8 <_sbrk_r+0x14>
    73e0:	602b      	str	r3, [r5, #0]
    73e2:	e7f9      	b.n	73d8 <_sbrk_r+0x14>
    73e4:	20000b5c 	.word	0x20000b5c

000073e8 <_svfprintf_r>:
    73e8:	b5f0      	push	{r4, r5, r6, r7, lr}
    73ea:	46de      	mov	lr, fp
    73ec:	4645      	mov	r5, r8
    73ee:	4657      	mov	r7, sl
    73f0:	464e      	mov	r6, r9
    73f2:	b5e0      	push	{r5, r6, r7, lr}
    73f4:	b0c3      	sub	sp, #268	; 0x10c
    73f6:	000d      	movs	r5, r1
    73f8:	9106      	str	r1, [sp, #24]
    73fa:	0014      	movs	r4, r2
    73fc:	930f      	str	r3, [sp, #60]	; 0x3c
    73fe:	9009      	str	r0, [sp, #36]	; 0x24
    7400:	f7ff f982 	bl	6708 <_localeconv_r>
    7404:	6803      	ldr	r3, [r0, #0]
    7406:	0018      	movs	r0, r3
    7408:	9319      	str	r3, [sp, #100]	; 0x64
    740a:	f7fd fefb 	bl	5204 <strlen>
    740e:	9018      	str	r0, [sp, #96]	; 0x60
    7410:	89ab      	ldrh	r3, [r5, #12]
    7412:	061b      	lsls	r3, r3, #24
    7414:	d505      	bpl.n	7422 <_svfprintf_r+0x3a>
    7416:	692b      	ldr	r3, [r5, #16]
    7418:	9307      	str	r3, [sp, #28]
    741a:	2b00      	cmp	r3, #0
    741c:	d101      	bne.n	7422 <_svfprintf_r+0x3a>
    741e:	f001 f863 	bl	84e8 <_svfprintf_r+0x1100>
    7422:	ab32      	add	r3, sp, #200	; 0xc8
    7424:	9325      	str	r3, [sp, #148]	; 0x94
    7426:	2300      	movs	r3, #0
    7428:	46a3      	mov	fp, r4
    742a:	af25      	add	r7, sp, #148	; 0x94
    742c:	60bb      	str	r3, [r7, #8]
    742e:	607b      	str	r3, [r7, #4]
    7430:	9314      	str	r3, [sp, #80]	; 0x50
    7432:	9316      	str	r3, [sp, #88]	; 0x58
    7434:	9315      	str	r3, [sp, #84]	; 0x54
    7436:	ae32      	add	r6, sp, #200	; 0xc8
    7438:	9317      	str	r3, [sp, #92]	; 0x5c
    743a:	931a      	str	r3, [sp, #104]	; 0x68
    743c:	930a      	str	r3, [sp, #40]	; 0x28
    743e:	465b      	mov	r3, fp
    7440:	781b      	ldrb	r3, [r3, #0]
    7442:	465c      	mov	r4, fp
    7444:	2b00      	cmp	r3, #0
    7446:	d01c      	beq.n	7482 <_svfprintf_r+0x9a>
    7448:	2b25      	cmp	r3, #37	; 0x25
    744a:	d102      	bne.n	7452 <_svfprintf_r+0x6a>
    744c:	e019      	b.n	7482 <_svfprintf_r+0x9a>
    744e:	2b25      	cmp	r3, #37	; 0x25
    7450:	d003      	beq.n	745a <_svfprintf_r+0x72>
    7452:	3401      	adds	r4, #1
    7454:	7823      	ldrb	r3, [r4, #0]
    7456:	2b00      	cmp	r3, #0
    7458:	d1f9      	bne.n	744e <_svfprintf_r+0x66>
    745a:	465b      	mov	r3, fp
    745c:	1ae5      	subs	r5, r4, r3
    745e:	d010      	beq.n	7482 <_svfprintf_r+0x9a>
    7460:	465b      	mov	r3, fp
    7462:	6033      	str	r3, [r6, #0]
    7464:	68bb      	ldr	r3, [r7, #8]
    7466:	6075      	str	r5, [r6, #4]
    7468:	195b      	adds	r3, r3, r5
    746a:	60bb      	str	r3, [r7, #8]
    746c:	687b      	ldr	r3, [r7, #4]
    746e:	3301      	adds	r3, #1
    7470:	607b      	str	r3, [r7, #4]
    7472:	2b07      	cmp	r3, #7
    7474:	dc2e      	bgt.n	74d4 <_svfprintf_r+0xec>
    7476:	3608      	adds	r6, #8
    7478:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    747a:	469c      	mov	ip, r3
    747c:	44ac      	add	ip, r5
    747e:	4663      	mov	r3, ip
    7480:	930a      	str	r3, [sp, #40]	; 0x28
    7482:	7823      	ldrb	r3, [r4, #0]
    7484:	2b00      	cmp	r3, #0
    7486:	d02e      	beq.n	74e6 <_svfprintf_r+0xfe>
    7488:	1c63      	adds	r3, r4, #1
    748a:	469b      	mov	fp, r3
    748c:	2300      	movs	r3, #0
    748e:	aa16      	add	r2, sp, #88	; 0x58
    7490:	77d3      	strb	r3, [r2, #31]
    7492:	2201      	movs	r2, #1
    7494:	4252      	negs	r2, r2
    7496:	4692      	mov	sl, r2
    7498:	2200      	movs	r2, #0
    749a:	2100      	movs	r1, #0
    749c:	920b      	str	r2, [sp, #44]	; 0x2c
    749e:	3220      	adds	r2, #32
    74a0:	4691      	mov	r9, r2
    74a2:	3220      	adds	r2, #32
    74a4:	7863      	ldrb	r3, [r4, #1]
    74a6:	4688      	mov	r8, r1
    74a8:	2000      	movs	r0, #0
    74aa:	2400      	movs	r4, #0
    74ac:	4694      	mov	ip, r2
    74ae:	4659      	mov	r1, fp
    74b0:	3101      	adds	r1, #1
    74b2:	001a      	movs	r2, r3
    74b4:	3a20      	subs	r2, #32
    74b6:	2a58      	cmp	r2, #88	; 0x58
    74b8:	d900      	bls.n	74bc <_svfprintf_r+0xd4>
    74ba:	e2fd      	b.n	7ab8 <_svfprintf_r+0x6d0>
    74bc:	4dd7      	ldr	r5, [pc, #860]	; (781c <_svfprintf_r+0x434>)
    74be:	0092      	lsls	r2, r2, #2
    74c0:	58aa      	ldr	r2, [r5, r2]
    74c2:	4697      	mov	pc, r2
    74c4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    74c6:	920f      	str	r2, [sp, #60]	; 0x3c
    74c8:	425b      	negs	r3, r3
    74ca:	930b      	str	r3, [sp, #44]	; 0x2c
    74cc:	2304      	movs	r3, #4
    74ce:	431c      	orrs	r4, r3
    74d0:	780b      	ldrb	r3, [r1, #0]
    74d2:	e7ed      	b.n	74b0 <_svfprintf_r+0xc8>
    74d4:	003a      	movs	r2, r7
    74d6:	9906      	ldr	r1, [sp, #24]
    74d8:	9809      	ldr	r0, [sp, #36]	; 0x24
    74da:	f001 fd53 	bl	8f84 <__ssprint_r>
    74de:	2800      	cmp	r0, #0
    74e0:	d109      	bne.n	74f6 <_svfprintf_r+0x10e>
    74e2:	ae32      	add	r6, sp, #200	; 0xc8
    74e4:	e7c8      	b.n	7478 <_svfprintf_r+0x90>
    74e6:	68bb      	ldr	r3, [r7, #8]
    74e8:	2b00      	cmp	r3, #0
    74ea:	d004      	beq.n	74f6 <_svfprintf_r+0x10e>
    74ec:	003a      	movs	r2, r7
    74ee:	9906      	ldr	r1, [sp, #24]
    74f0:	9809      	ldr	r0, [sp, #36]	; 0x24
    74f2:	f001 fd47 	bl	8f84 <__ssprint_r>
    74f6:	9b06      	ldr	r3, [sp, #24]
    74f8:	899b      	ldrh	r3, [r3, #12]
    74fa:	065b      	lsls	r3, r3, #25
    74fc:	d501      	bpl.n	7502 <_svfprintf_r+0x11a>
    74fe:	f001 f8ce 	bl	869e <_svfprintf_r+0x12b6>
    7502:	980a      	ldr	r0, [sp, #40]	; 0x28
    7504:	b043      	add	sp, #268	; 0x10c
    7506:	bc3c      	pop	{r2, r3, r4, r5}
    7508:	4690      	mov	r8, r2
    750a:	4699      	mov	r9, r3
    750c:	46a2      	mov	sl, r4
    750e:	46ab      	mov	fp, r5
    7510:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7512:	2201      	movs	r2, #1
    7514:	780b      	ldrb	r3, [r1, #0]
    7516:	4690      	mov	r8, r2
    7518:	202b      	movs	r0, #43	; 0x2b
    751a:	e7c9      	b.n	74b0 <_svfprintf_r+0xc8>
    751c:	1c4b      	adds	r3, r1, #1
    751e:	469b      	mov	fp, r3
    7520:	780b      	ldrb	r3, [r1, #0]
    7522:	2b2a      	cmp	r3, #42	; 0x2a
    7524:	d101      	bne.n	752a <_svfprintf_r+0x142>
    7526:	f001 fa1b 	bl	8960 <_svfprintf_r+0x1578>
    752a:	001a      	movs	r2, r3
    752c:	2100      	movs	r1, #0
    752e:	3a30      	subs	r2, #48	; 0x30
    7530:	468a      	mov	sl, r1
    7532:	4659      	mov	r1, fp
    7534:	2a09      	cmp	r2, #9
    7536:	d8bc      	bhi.n	74b2 <_svfprintf_r+0xca>
    7538:	0003      	movs	r3, r0
    753a:	0011      	movs	r1, r2
    753c:	4650      	mov	r0, sl
    753e:	465a      	mov	r2, fp
    7540:	469a      	mov	sl, r3
    7542:	46a3      	mov	fp, r4
    7544:	0083      	lsls	r3, r0, #2
    7546:	181b      	adds	r3, r3, r0
    7548:	7814      	ldrb	r4, [r2, #0]
    754a:	005b      	lsls	r3, r3, #1
    754c:	1858      	adds	r0, r3, r1
    754e:	0021      	movs	r1, r4
    7550:	1c53      	adds	r3, r2, #1
    7552:	3930      	subs	r1, #48	; 0x30
    7554:	001a      	movs	r2, r3
    7556:	2909      	cmp	r1, #9
    7558:	d9f4      	bls.n	7544 <_svfprintf_r+0x15c>
    755a:	4652      	mov	r2, sl
    755c:	0019      	movs	r1, r3
    755e:	4682      	mov	sl, r0
    7560:	0023      	movs	r3, r4
    7562:	0010      	movs	r0, r2
    7564:	465c      	mov	r4, fp
    7566:	e7a4      	b.n	74b2 <_svfprintf_r+0xca>
    7568:	2380      	movs	r3, #128	; 0x80
    756a:	431c      	orrs	r4, r3
    756c:	780b      	ldrb	r3, [r1, #0]
    756e:	e79f      	b.n	74b0 <_svfprintf_r+0xc8>
    7570:	468b      	mov	fp, r1
    7572:	4641      	mov	r1, r8
    7574:	9312      	str	r3, [sp, #72]	; 0x48
    7576:	2900      	cmp	r1, #0
    7578:	d001      	beq.n	757e <_svfprintf_r+0x196>
    757a:	f001 fa1f 	bl	89bc <_svfprintf_r+0x15d4>
    757e:	2310      	movs	r3, #16
    7580:	431c      	orrs	r4, r3
    7582:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    7584:	06a3      	lsls	r3, r4, #26
    7586:	d501      	bpl.n	758c <_svfprintf_r+0x1a4>
    7588:	f000 fe88 	bl	829c <_svfprintf_r+0xeb4>
    758c:	06e3      	lsls	r3, r4, #27
    758e:	d501      	bpl.n	7594 <_svfprintf_r+0x1ac>
    7590:	f000 fd80 	bl	8094 <_svfprintf_r+0xcac>
    7594:	0663      	lsls	r3, r4, #25
    7596:	d401      	bmi.n	759c <_svfprintf_r+0x1b4>
    7598:	f000 fd7c 	bl	8094 <_svfprintf_r+0xcac>
    759c:	2100      	movs	r1, #0
    759e:	5e53      	ldrsh	r3, [r2, r1]
    75a0:	930c      	str	r3, [sp, #48]	; 0x30
    75a2:	3204      	adds	r2, #4
    75a4:	17db      	asrs	r3, r3, #31
    75a6:	930d      	str	r3, [sp, #52]	; 0x34
    75a8:	920f      	str	r2, [sp, #60]	; 0x3c
    75aa:	d501      	bpl.n	75b0 <_svfprintf_r+0x1c8>
    75ac:	f000 fe86 	bl	82bc <_svfprintf_r+0xed4>
    75b0:	990c      	ldr	r1, [sp, #48]	; 0x30
    75b2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    75b4:	0008      	movs	r0, r1
    75b6:	ab16      	add	r3, sp, #88	; 0x58
    75b8:	7fdb      	ldrb	r3, [r3, #31]
    75ba:	4310      	orrs	r0, r2
    75bc:	4698      	mov	r8, r3
    75be:	0002      	movs	r2, r0
    75c0:	2301      	movs	r3, #1
    75c2:	4651      	mov	r1, sl
    75c4:	3101      	adds	r1, #1
    75c6:	d100      	bne.n	75ca <_svfprintf_r+0x1e2>
    75c8:	e0ff      	b.n	77ca <_svfprintf_r+0x3e2>
    75ca:	2180      	movs	r1, #128	; 0x80
    75cc:	0020      	movs	r0, r4
    75ce:	4388      	bics	r0, r1
    75d0:	9008      	str	r0, [sp, #32]
    75d2:	2a00      	cmp	r2, #0
    75d4:	d000      	beq.n	75d8 <_svfprintf_r+0x1f0>
    75d6:	e0fc      	b.n	77d2 <_svfprintf_r+0x3ea>
    75d8:	4652      	mov	r2, sl
    75da:	2a00      	cmp	r2, #0
    75dc:	d001      	beq.n	75e2 <_svfprintf_r+0x1fa>
    75de:	f000 fc2c 	bl	7e3a <_svfprintf_r+0xa52>
    75e2:	2b00      	cmp	r3, #0
    75e4:	d001      	beq.n	75ea <_svfprintf_r+0x202>
    75e6:	f000 fd04 	bl	7ff2 <_svfprintf_r+0xc0a>
    75ea:	2001      	movs	r0, #1
    75ec:	ab32      	add	r3, sp, #200	; 0xc8
    75ee:	4020      	ands	r0, r4
    75f0:	900e      	str	r0, [sp, #56]	; 0x38
    75f2:	9311      	str	r3, [sp, #68]	; 0x44
    75f4:	d008      	beq.n	7608 <_svfprintf_r+0x220>
    75f6:	2327      	movs	r3, #39	; 0x27
    75f8:	2130      	movs	r1, #48	; 0x30
    75fa:	aa28      	add	r2, sp, #160	; 0xa0
    75fc:	54d1      	strb	r1, [r2, r3]
    75fe:	aa16      	add	r2, sp, #88	; 0x58
    7600:	4694      	mov	ip, r2
    7602:	3348      	adds	r3, #72	; 0x48
    7604:	4463      	add	r3, ip
    7606:	9311      	str	r3, [sp, #68]	; 0x44
    7608:	4653      	mov	r3, sl
    760a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    760c:	9307      	str	r3, [sp, #28]
    760e:	4592      	cmp	sl, r2
    7610:	da00      	bge.n	7614 <_svfprintf_r+0x22c>
    7612:	9207      	str	r2, [sp, #28]
    7614:	2300      	movs	r3, #0
    7616:	9313      	str	r3, [sp, #76]	; 0x4c
    7618:	4643      	mov	r3, r8
    761a:	2b00      	cmp	r3, #0
    761c:	d002      	beq.n	7624 <_svfprintf_r+0x23c>
    761e:	9b07      	ldr	r3, [sp, #28]
    7620:	3301      	adds	r3, #1
    7622:	9307      	str	r3, [sp, #28]
    7624:	2302      	movs	r3, #2
    7626:	9a08      	ldr	r2, [sp, #32]
    7628:	401a      	ands	r2, r3
    762a:	4691      	mov	r9, r2
    762c:	d002      	beq.n	7634 <_svfprintf_r+0x24c>
    762e:	9b07      	ldr	r3, [sp, #28]
    7630:	3302      	adds	r3, #2
    7632:	9307      	str	r3, [sp, #28]
    7634:	2384      	movs	r3, #132	; 0x84
    7636:	9a08      	ldr	r2, [sp, #32]
    7638:	401a      	ands	r2, r3
    763a:	9210      	str	r2, [sp, #64]	; 0x40
    763c:	d000      	beq.n	7640 <_svfprintf_r+0x258>
    763e:	e24d      	b.n	7adc <_svfprintf_r+0x6f4>
    7640:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    7642:	9a07      	ldr	r2, [sp, #28]
    7644:	1a9c      	subs	r4, r3, r2
    7646:	2c00      	cmp	r4, #0
    7648:	dc00      	bgt.n	764c <_svfprintf_r+0x264>
    764a:	e247      	b.n	7adc <_svfprintf_r+0x6f4>
    764c:	4974      	ldr	r1, [pc, #464]	; (7820 <_svfprintf_r+0x438>)
    764e:	68ba      	ldr	r2, [r7, #8]
    7650:	687b      	ldr	r3, [r7, #4]
    7652:	4688      	mov	r8, r1
    7654:	2c10      	cmp	r4, #16
    7656:	dd1f      	ble.n	7698 <_svfprintf_r+0x2b0>
    7658:	0031      	movs	r1, r6
    765a:	2510      	movs	r5, #16
    765c:	4646      	mov	r6, r8
    765e:	e003      	b.n	7668 <_svfprintf_r+0x280>
    7660:	3c10      	subs	r4, #16
    7662:	3108      	adds	r1, #8
    7664:	2c10      	cmp	r4, #16
    7666:	dd15      	ble.n	7694 <_svfprintf_r+0x2ac>
    7668:	3210      	adds	r2, #16
    766a:	3301      	adds	r3, #1
    766c:	600e      	str	r6, [r1, #0]
    766e:	604d      	str	r5, [r1, #4]
    7670:	60ba      	str	r2, [r7, #8]
    7672:	607b      	str	r3, [r7, #4]
    7674:	2b07      	cmp	r3, #7
    7676:	ddf3      	ble.n	7660 <_svfprintf_r+0x278>
    7678:	003a      	movs	r2, r7
    767a:	9906      	ldr	r1, [sp, #24]
    767c:	9809      	ldr	r0, [sp, #36]	; 0x24
    767e:	f001 fc81 	bl	8f84 <__ssprint_r>
    7682:	2800      	cmp	r0, #0
    7684:	d000      	beq.n	7688 <_svfprintf_r+0x2a0>
    7686:	e736      	b.n	74f6 <_svfprintf_r+0x10e>
    7688:	3c10      	subs	r4, #16
    768a:	68ba      	ldr	r2, [r7, #8]
    768c:	687b      	ldr	r3, [r7, #4]
    768e:	a932      	add	r1, sp, #200	; 0xc8
    7690:	2c10      	cmp	r4, #16
    7692:	dce9      	bgt.n	7668 <_svfprintf_r+0x280>
    7694:	46b0      	mov	r8, r6
    7696:	000e      	movs	r6, r1
    7698:	4641      	mov	r1, r8
    769a:	6074      	str	r4, [r6, #4]
    769c:	3301      	adds	r3, #1
    769e:	18a4      	adds	r4, r4, r2
    76a0:	6031      	str	r1, [r6, #0]
    76a2:	60bc      	str	r4, [r7, #8]
    76a4:	607b      	str	r3, [r7, #4]
    76a6:	2b07      	cmp	r3, #7
    76a8:	dd01      	ble.n	76ae <_svfprintf_r+0x2c6>
    76aa:	f000 fca8 	bl	7ffe <_svfprintf_r+0xc16>
    76ae:	ab16      	add	r3, sp, #88	; 0x58
    76b0:	7fdb      	ldrb	r3, [r3, #31]
    76b2:	3608      	adds	r6, #8
    76b4:	4698      	mov	r8, r3
    76b6:	e212      	b.n	7ade <_svfprintf_r+0x6f6>
    76b8:	468b      	mov	fp, r1
    76ba:	4641      	mov	r1, r8
    76bc:	9312      	str	r3, [sp, #72]	; 0x48
    76be:	2900      	cmp	r1, #0
    76c0:	d001      	beq.n	76c6 <_svfprintf_r+0x2de>
    76c2:	f001 f977 	bl	89b4 <_svfprintf_r+0x15cc>
    76c6:	2207      	movs	r2, #7
    76c8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    76ca:	3307      	adds	r3, #7
    76cc:	4393      	bics	r3, r2
    76ce:	3201      	adds	r2, #1
    76d0:	4694      	mov	ip, r2
    76d2:	449c      	add	ip, r3
    76d4:	4662      	mov	r2, ip
    76d6:	920f      	str	r2, [sp, #60]	; 0x3c
    76d8:	681a      	ldr	r2, [r3, #0]
    76da:	9216      	str	r2, [sp, #88]	; 0x58
    76dc:	685b      	ldr	r3, [r3, #4]
    76de:	2201      	movs	r2, #1
    76e0:	9315      	str	r3, [sp, #84]	; 0x54
    76e2:	9b15      	ldr	r3, [sp, #84]	; 0x54
    76e4:	9d16      	ldr	r5, [sp, #88]	; 0x58
    76e6:	005b      	lsls	r3, r3, #1
    76e8:	085b      	lsrs	r3, r3, #1
    76ea:	4698      	mov	r8, r3
    76ec:	4252      	negs	r2, r2
    76ee:	4b4d      	ldr	r3, [pc, #308]	; (7824 <_svfprintf_r+0x43c>)
    76f0:	0028      	movs	r0, r5
    76f2:	4641      	mov	r1, r8
    76f4:	f001 fce4 	bl	90c0 <__aeabi_dcmpun>
    76f8:	2800      	cmp	r0, #0
    76fa:	d001      	beq.n	7700 <_svfprintf_r+0x318>
    76fc:	f000 fdfd 	bl	82fa <_svfprintf_r+0xf12>
    7700:	2201      	movs	r2, #1
    7702:	4b48      	ldr	r3, [pc, #288]	; (7824 <_svfprintf_r+0x43c>)
    7704:	4252      	negs	r2, r2
    7706:	0028      	movs	r0, r5
    7708:	4641      	mov	r1, r8
    770a:	f7fb f917 	bl	293c <__aeabi_dcmple>
    770e:	2800      	cmp	r0, #0
    7710:	d001      	beq.n	7716 <_svfprintf_r+0x32e>
    7712:	f000 fdf2 	bl	82fa <_svfprintf_r+0xf12>
    7716:	2200      	movs	r2, #0
    7718:	2300      	movs	r3, #0
    771a:	9816      	ldr	r0, [sp, #88]	; 0x58
    771c:	9915      	ldr	r1, [sp, #84]	; 0x54
    771e:	f7fb f903 	bl	2928 <__aeabi_dcmplt>
    7722:	2800      	cmp	r0, #0
    7724:	d001      	beq.n	772a <_svfprintf_r+0x342>
    7726:	f001 f822 	bl	876e <_svfprintf_r+0x1386>
    772a:	ab16      	add	r3, sp, #88	; 0x58
    772c:	7fdb      	ldrb	r3, [r3, #31]
    772e:	4698      	mov	r8, r3
    7730:	9b12      	ldr	r3, [sp, #72]	; 0x48
    7732:	2b47      	cmp	r3, #71	; 0x47
    7734:	dd01      	ble.n	773a <_svfprintf_r+0x352>
    7736:	f000 fec7 	bl	84c8 <_svfprintf_r+0x10e0>
    773a:	4b3b      	ldr	r3, [pc, #236]	; (7828 <_svfprintf_r+0x440>)
    773c:	9311      	str	r3, [sp, #68]	; 0x44
    773e:	2380      	movs	r3, #128	; 0x80
    7740:	439c      	bics	r4, r3
    7742:	3b7d      	subs	r3, #125	; 0x7d
    7744:	9307      	str	r3, [sp, #28]
    7746:	930e      	str	r3, [sp, #56]	; 0x38
    7748:	2300      	movs	r3, #0
    774a:	9408      	str	r4, [sp, #32]
    774c:	469a      	mov	sl, r3
    774e:	9313      	str	r3, [sp, #76]	; 0x4c
    7750:	e762      	b.n	7618 <_svfprintf_r+0x230>
    7752:	2200      	movs	r2, #0
    7754:	3b30      	subs	r3, #48	; 0x30
    7756:	0015      	movs	r5, r2
    7758:	001a      	movs	r2, r3
    775a:	0003      	movs	r3, r0
    775c:	9407      	str	r4, [sp, #28]
    775e:	0008      	movs	r0, r1
    7760:	002c      	movs	r4, r5
    7762:	469b      	mov	fp, r3
    7764:	00a3      	lsls	r3, r4, #2
    7766:	191c      	adds	r4, r3, r4
    7768:	7803      	ldrb	r3, [r0, #0]
    776a:	0064      	lsls	r4, r4, #1
    776c:	1914      	adds	r4, r2, r4
    776e:	001a      	movs	r2, r3
    7770:	3101      	adds	r1, #1
    7772:	3a30      	subs	r2, #48	; 0x30
    7774:	0008      	movs	r0, r1
    7776:	2a09      	cmp	r2, #9
    7778:	d9f4      	bls.n	7764 <_svfprintf_r+0x37c>
    777a:	940b      	str	r4, [sp, #44]	; 0x2c
    777c:	4658      	mov	r0, fp
    777e:	9c07      	ldr	r4, [sp, #28]
    7780:	e697      	b.n	74b2 <_svfprintf_r+0xca>
    7782:	2308      	movs	r3, #8
    7784:	431c      	orrs	r4, r3
    7786:	780b      	ldrb	r3, [r1, #0]
    7788:	e692      	b.n	74b0 <_svfprintf_r+0xc8>
    778a:	9312      	str	r3, [sp, #72]	; 0x48
    778c:	2310      	movs	r3, #16
    778e:	431c      	orrs	r4, r3
    7790:	468b      	mov	fp, r1
    7792:	06a3      	lsls	r3, r4, #26
    7794:	d500      	bpl.n	7798 <_svfprintf_r+0x3b0>
    7796:	e17b      	b.n	7a90 <_svfprintf_r+0x6a8>
    7798:	06e3      	lsls	r3, r4, #27
    779a:	d501      	bpl.n	77a0 <_svfprintf_r+0x3b8>
    779c:	f000 fc7e 	bl	809c <_svfprintf_r+0xcb4>
    77a0:	0663      	lsls	r3, r4, #25
    77a2:	d401      	bmi.n	77a8 <_svfprintf_r+0x3c0>
    77a4:	f000 fc7a 	bl	809c <_svfprintf_r+0xcb4>
    77a8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    77aa:	881a      	ldrh	r2, [r3, #0]
    77ac:	920c      	str	r2, [sp, #48]	; 0x30
    77ae:	2200      	movs	r2, #0
    77b0:	3304      	adds	r3, #4
    77b2:	930f      	str	r3, [sp, #60]	; 0x3c
    77b4:	2300      	movs	r3, #0
    77b6:	920d      	str	r2, [sp, #52]	; 0x34
    77b8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    77ba:	2100      	movs	r1, #0
    77bc:	a816      	add	r0, sp, #88	; 0x58
    77be:	77c1      	strb	r1, [r0, #31]
    77c0:	4688      	mov	r8, r1
    77c2:	4651      	mov	r1, sl
    77c4:	3101      	adds	r1, #1
    77c6:	d000      	beq.n	77ca <_svfprintf_r+0x3e2>
    77c8:	e6ff      	b.n	75ca <_svfprintf_r+0x1e2>
    77ca:	2a00      	cmp	r2, #0
    77cc:	d100      	bne.n	77d0 <_svfprintf_r+0x3e8>
    77ce:	e335      	b.n	7e3c <_svfprintf_r+0xa54>
    77d0:	9408      	str	r4, [sp, #32]
    77d2:	2b01      	cmp	r3, #1
    77d4:	d100      	bne.n	77d8 <_svfprintf_r+0x3f0>
    77d6:	e3e5      	b.n	7fa4 <_svfprintf_r+0xbbc>
    77d8:	2b02      	cmp	r3, #2
    77da:	d000      	beq.n	77de <_svfprintf_r+0x3f6>
    77dc:	e362      	b.n	7ea4 <_svfprintf_r+0xabc>
    77de:	9c17      	ldr	r4, [sp, #92]	; 0x5c
    77e0:	200f      	movs	r0, #15
    77e2:	46a1      	mov	r9, r4
    77e4:	46b4      	mov	ip, r6
    77e6:	ab32      	add	r3, sp, #200	; 0xc8
    77e8:	0019      	movs	r1, r3
    77ea:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    77ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    77ee:	0004      	movs	r4, r0
    77f0:	464d      	mov	r5, r9
    77f2:	4014      	ands	r4, r2
    77f4:	5d2c      	ldrb	r4, [r5, r4]
    77f6:	071e      	lsls	r6, r3, #28
    77f8:	0915      	lsrs	r5, r2, #4
    77fa:	3901      	subs	r1, #1
    77fc:	432e      	orrs	r6, r5
    77fe:	700c      	strb	r4, [r1, #0]
    7800:	091c      	lsrs	r4, r3, #4
    7802:	0023      	movs	r3, r4
    7804:	0034      	movs	r4, r6
    7806:	0032      	movs	r2, r6
    7808:	431c      	orrs	r4, r3
    780a:	d1f0      	bne.n	77ee <_svfprintf_r+0x406>
    780c:	920c      	str	r2, [sp, #48]	; 0x30
    780e:	930d      	str	r3, [sp, #52]	; 0x34
    7810:	ab32      	add	r3, sp, #200	; 0xc8
    7812:	1a5b      	subs	r3, r3, r1
    7814:	9111      	str	r1, [sp, #68]	; 0x44
    7816:	4666      	mov	r6, ip
    7818:	930e      	str	r3, [sp, #56]	; 0x38
    781a:	e6f5      	b.n	7608 <_svfprintf_r+0x220>
    781c:	00009fac 	.word	0x00009fac
    7820:	0000a150 	.word	0x0000a150
    7824:	7fefffff 	.word	0x7fefffff
    7828:	0000a110 	.word	0x0000a110
    782c:	9312      	str	r3, [sp, #72]	; 0x48
    782e:	2310      	movs	r3, #16
    7830:	431c      	orrs	r4, r3
    7832:	468b      	mov	fp, r1
    7834:	06a3      	lsls	r3, r4, #26
    7836:	d500      	bpl.n	783a <_svfprintf_r+0x452>
    7838:	e111      	b.n	7a5e <_svfprintf_r+0x676>
    783a:	06e3      	lsls	r3, r4, #27
    783c:	d501      	bpl.n	7842 <_svfprintf_r+0x45a>
    783e:	f000 fc31 	bl	80a4 <_svfprintf_r+0xcbc>
    7842:	0663      	lsls	r3, r4, #25
    7844:	d401      	bmi.n	784a <_svfprintf_r+0x462>
    7846:	f000 fc2d 	bl	80a4 <_svfprintf_r+0xcbc>
    784a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    784c:	881a      	ldrh	r2, [r3, #0]
    784e:	920c      	str	r2, [sp, #48]	; 0x30
    7850:	2200      	movs	r2, #0
    7852:	3304      	adds	r3, #4
    7854:	920d      	str	r2, [sp, #52]	; 0x34
    7856:	930f      	str	r3, [sp, #60]	; 0x3c
    7858:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    785a:	2301      	movs	r3, #1
    785c:	e7ad      	b.n	77ba <_svfprintf_r+0x3d2>
    785e:	468b      	mov	fp, r1
    7860:	4641      	mov	r1, r8
    7862:	9312      	str	r3, [sp, #72]	; 0x48
    7864:	2900      	cmp	r1, #0
    7866:	d001      	beq.n	786c <_svfprintf_r+0x484>
    7868:	f001 f890 	bl	898c <_svfprintf_r+0x15a4>
    786c:	4bb8      	ldr	r3, [pc, #736]	; (7b50 <_svfprintf_r+0x768>)
    786e:	9317      	str	r3, [sp, #92]	; 0x5c
    7870:	06a3      	lsls	r3, r4, #26
    7872:	d500      	bpl.n	7876 <_svfprintf_r+0x48e>
    7874:	e0ab      	b.n	79ce <_svfprintf_r+0x5e6>
    7876:	06e3      	lsls	r3, r4, #27
    7878:	d501      	bpl.n	787e <_svfprintf_r+0x496>
    787a:	f000 fc07 	bl	808c <_svfprintf_r+0xca4>
    787e:	0663      	lsls	r3, r4, #25
    7880:	d401      	bmi.n	7886 <_svfprintf_r+0x49e>
    7882:	f000 fc03 	bl	808c <_svfprintf_r+0xca4>
    7886:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7888:	881a      	ldrh	r2, [r3, #0]
    788a:	920c      	str	r2, [sp, #48]	; 0x30
    788c:	2200      	movs	r2, #0
    788e:	3304      	adds	r3, #4
    7890:	920d      	str	r2, [sp, #52]	; 0x34
    7892:	930f      	str	r3, [sp, #60]	; 0x3c
    7894:	07e3      	lsls	r3, r4, #31
    7896:	d400      	bmi.n	789a <_svfprintf_r+0x4b2>
    7898:	e0a9      	b.n	79ee <_svfprintf_r+0x606>
    789a:	990c      	ldr	r1, [sp, #48]	; 0x30
    789c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    789e:	000b      	movs	r3, r1
    78a0:	4313      	orrs	r3, r2
    78a2:	001a      	movs	r2, r3
    78a4:	2302      	movs	r3, #2
    78a6:	2a00      	cmp	r2, #0
    78a8:	d100      	bne.n	78ac <_svfprintf_r+0x4c4>
    78aa:	e786      	b.n	77ba <_svfprintf_r+0x3d2>
    78ac:	2030      	movs	r0, #48	; 0x30
    78ae:	a91e      	add	r1, sp, #120	; 0x78
    78b0:	7008      	strb	r0, [r1, #0]
    78b2:	2548      	movs	r5, #72	; 0x48
    78b4:	4668      	mov	r0, sp
    78b6:	1940      	adds	r0, r0, r5
    78b8:	7800      	ldrb	r0, [r0, #0]
    78ba:	431c      	orrs	r4, r3
    78bc:	7048      	strb	r0, [r1, #1]
    78be:	e77c      	b.n	77ba <_svfprintf_r+0x3d2>
    78c0:	468b      	mov	fp, r1
    78c2:	4641      	mov	r1, r8
    78c4:	2900      	cmp	r1, #0
    78c6:	d001      	beq.n	78cc <_svfprintf_r+0x4e4>
    78c8:	f001 f883 	bl	89d2 <_svfprintf_r+0x15ea>
    78cc:	06a3      	lsls	r3, r4, #26
    78ce:	d501      	bpl.n	78d4 <_svfprintf_r+0x4ec>
    78d0:	f000 fde9 	bl	84a6 <_svfprintf_r+0x10be>
    78d4:	06e3      	lsls	r3, r4, #27
    78d6:	d501      	bpl.n	78dc <_svfprintf_r+0x4f4>
    78d8:	f000 fd9b 	bl	8412 <_svfprintf_r+0x102a>
    78dc:	0663      	lsls	r3, r4, #25
    78de:	d401      	bmi.n	78e4 <_svfprintf_r+0x4fc>
    78e0:	f000 fd97 	bl	8412 <_svfprintf_r+0x102a>
    78e4:	4669      	mov	r1, sp
    78e6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    78e8:	8d09      	ldrh	r1, [r1, #40]	; 0x28
    78ea:	681a      	ldr	r2, [r3, #0]
    78ec:	3304      	adds	r3, #4
    78ee:	9207      	str	r2, [sp, #28]
    78f0:	8011      	strh	r1, [r2, #0]
    78f2:	930f      	str	r3, [sp, #60]	; 0x3c
    78f4:	e5a3      	b.n	743e <_svfprintf_r+0x56>
    78f6:	464b      	mov	r3, r9
    78f8:	431c      	orrs	r4, r3
    78fa:	780b      	ldrb	r3, [r1, #0]
    78fc:	e5d8      	b.n	74b0 <_svfprintf_r+0xc8>
    78fe:	9312      	str	r3, [sp, #72]	; 0x48
    7900:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7902:	468b      	mov	fp, r1
    7904:	1d1d      	adds	r5, r3, #4
    7906:	681b      	ldr	r3, [r3, #0]
    7908:	a916      	add	r1, sp, #88	; 0x58
    790a:	001a      	movs	r2, r3
    790c:	9311      	str	r3, [sp, #68]	; 0x44
    790e:	2300      	movs	r3, #0
    7910:	77cb      	strb	r3, [r1, #31]
    7912:	2a00      	cmp	r2, #0
    7914:	d101      	bne.n	791a <_svfprintf_r+0x532>
    7916:	f000 fefb 	bl	8710 <_svfprintf_r+0x1328>
    791a:	4653      	mov	r3, sl
    791c:	3301      	adds	r3, #1
    791e:	d101      	bne.n	7924 <_svfprintf_r+0x53c>
    7920:	f000 fe38 	bl	8594 <_svfprintf_r+0x11ac>
    7924:	4652      	mov	r2, sl
    7926:	2100      	movs	r1, #0
    7928:	9811      	ldr	r0, [sp, #68]	; 0x44
    792a:	f7ff f9b3 	bl	6c94 <memchr>
    792e:	2800      	cmp	r0, #0
    7930:	d101      	bne.n	7936 <_svfprintf_r+0x54e>
    7932:	f000 ff54 	bl	87de <_svfprintf_r+0x13f6>
    7936:	9b11      	ldr	r3, [sp, #68]	; 0x44
    7938:	1ac3      	subs	r3, r0, r3
    793a:	001a      	movs	r2, r3
    793c:	930e      	str	r3, [sp, #56]	; 0x38
    793e:	43db      	mvns	r3, r3
    7940:	17db      	asrs	r3, r3, #31
    7942:	401a      	ands	r2, r3
    7944:	ab16      	add	r3, sp, #88	; 0x58
    7946:	7fdb      	ldrb	r3, [r3, #31]
    7948:	9207      	str	r2, [sp, #28]
    794a:	4698      	mov	r8, r3
    794c:	2300      	movs	r3, #0
    794e:	950f      	str	r5, [sp, #60]	; 0x3c
    7950:	9408      	str	r4, [sp, #32]
    7952:	469a      	mov	sl, r3
    7954:	9313      	str	r3, [sp, #76]	; 0x4c
    7956:	e65f      	b.n	7618 <_svfprintf_r+0x230>
    7958:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    795a:	9312      	str	r3, [sp, #72]	; 0x48
    795c:	6813      	ldr	r3, [r2, #0]
    795e:	ad28      	add	r5, sp, #160	; 0xa0
    7960:	9307      	str	r3, [sp, #28]
    7962:	466b      	mov	r3, sp
    7964:	7f1b      	ldrb	r3, [r3, #28]
    7966:	468b      	mov	fp, r1
    7968:	702b      	strb	r3, [r5, #0]
    796a:	2300      	movs	r3, #0
    796c:	a916      	add	r1, sp, #88	; 0x58
    796e:	77cb      	strb	r3, [r1, #31]
    7970:	0013      	movs	r3, r2
    7972:	3304      	adds	r3, #4
    7974:	930f      	str	r3, [sp, #60]	; 0x3c
    7976:	2300      	movs	r3, #0
    7978:	9408      	str	r4, [sp, #32]
    797a:	4698      	mov	r8, r3
    797c:	3301      	adds	r3, #1
    797e:	9307      	str	r3, [sp, #28]
    7980:	930e      	str	r3, [sp, #56]	; 0x38
    7982:	2300      	movs	r3, #0
    7984:	9511      	str	r5, [sp, #68]	; 0x44
    7986:	469a      	mov	sl, r3
    7988:	9313      	str	r3, [sp, #76]	; 0x4c
    798a:	e64b      	b.n	7624 <_svfprintf_r+0x23c>
    798c:	468b      	mov	fp, r1
    798e:	4641      	mov	r1, r8
    7990:	9312      	str	r3, [sp, #72]	; 0x48
    7992:	2900      	cmp	r1, #0
    7994:	d100      	bne.n	7998 <_svfprintf_r+0x5b0>
    7996:	e5f4      	b.n	7582 <_svfprintf_r+0x19a>
    7998:	ab16      	add	r3, sp, #88	; 0x58
    799a:	77d8      	strb	r0, [r3, #31]
    799c:	e5f1      	b.n	7582 <_svfprintf_r+0x19a>
    799e:	4663      	mov	r3, ip
    79a0:	431c      	orrs	r4, r3
    79a2:	780b      	ldrb	r3, [r1, #0]
    79a4:	e584      	b.n	74b0 <_svfprintf_r+0xc8>
    79a6:	780b      	ldrb	r3, [r1, #0]
    79a8:	2b6c      	cmp	r3, #108	; 0x6c
    79aa:	d101      	bne.n	79b0 <_svfprintf_r+0x5c8>
    79ac:	f000 fd86 	bl	84bc <_svfprintf_r+0x10d4>
    79b0:	2210      	movs	r2, #16
    79b2:	4314      	orrs	r4, r2
    79b4:	e57c      	b.n	74b0 <_svfprintf_r+0xc8>
    79b6:	468b      	mov	fp, r1
    79b8:	4641      	mov	r1, r8
    79ba:	9312      	str	r3, [sp, #72]	; 0x48
    79bc:	2900      	cmp	r1, #0
    79be:	d001      	beq.n	79c4 <_svfprintf_r+0x5dc>
    79c0:	f000 ffe8 	bl	8994 <_svfprintf_r+0x15ac>
    79c4:	4b63      	ldr	r3, [pc, #396]	; (7b54 <_svfprintf_r+0x76c>)
    79c6:	9317      	str	r3, [sp, #92]	; 0x5c
    79c8:	06a3      	lsls	r3, r4, #26
    79ca:	d400      	bmi.n	79ce <_svfprintf_r+0x5e6>
    79cc:	e753      	b.n	7876 <_svfprintf_r+0x48e>
    79ce:	2207      	movs	r2, #7
    79d0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    79d2:	3307      	adds	r3, #7
    79d4:	4393      	bics	r3, r2
    79d6:	3201      	adds	r2, #1
    79d8:	4694      	mov	ip, r2
    79da:	449c      	add	ip, r3
    79dc:	4662      	mov	r2, ip
    79de:	920f      	str	r2, [sp, #60]	; 0x3c
    79e0:	681a      	ldr	r2, [r3, #0]
    79e2:	685b      	ldr	r3, [r3, #4]
    79e4:	920c      	str	r2, [sp, #48]	; 0x30
    79e6:	930d      	str	r3, [sp, #52]	; 0x34
    79e8:	07e3      	lsls	r3, r4, #31
    79ea:	d500      	bpl.n	79ee <_svfprintf_r+0x606>
    79ec:	e755      	b.n	789a <_svfprintf_r+0x4b2>
    79ee:	990c      	ldr	r1, [sp, #48]	; 0x30
    79f0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    79f2:	0008      	movs	r0, r1
    79f4:	4310      	orrs	r0, r2
    79f6:	2302      	movs	r3, #2
    79f8:	0002      	movs	r2, r0
    79fa:	e6de      	b.n	77ba <_svfprintf_r+0x3d2>
    79fc:	468b      	mov	fp, r1
    79fe:	990f      	ldr	r1, [sp, #60]	; 0x3c
    7a00:	2230      	movs	r2, #48	; 0x30
    7a02:	680b      	ldr	r3, [r1, #0]
    7a04:	930c      	str	r3, [sp, #48]	; 0x30
    7a06:	2300      	movs	r3, #0
    7a08:	930d      	str	r3, [sp, #52]	; 0x34
    7a0a:	3302      	adds	r3, #2
    7a0c:	431c      	orrs	r4, r3
    7a0e:	ab1e      	add	r3, sp, #120	; 0x78
    7a10:	701a      	strb	r2, [r3, #0]
    7a12:	3248      	adds	r2, #72	; 0x48
    7a14:	705a      	strb	r2, [r3, #1]
    7a16:	000b      	movs	r3, r1
    7a18:	3304      	adds	r3, #4
    7a1a:	930f      	str	r3, [sp, #60]	; 0x3c
    7a1c:	4b4d      	ldr	r3, [pc, #308]	; (7b54 <_svfprintf_r+0x76c>)
    7a1e:	9212      	str	r2, [sp, #72]	; 0x48
    7a20:	9317      	str	r3, [sp, #92]	; 0x5c
    7a22:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    7a24:	2302      	movs	r3, #2
    7a26:	e6c8      	b.n	77ba <_svfprintf_r+0x3d2>
    7a28:	2301      	movs	r3, #1
    7a2a:	431c      	orrs	r4, r3
    7a2c:	780b      	ldrb	r3, [r1, #0]
    7a2e:	e53f      	b.n	74b0 <_svfprintf_r+0xc8>
    7a30:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7a32:	1d1a      	adds	r2, r3, #4
    7a34:	681b      	ldr	r3, [r3, #0]
    7a36:	930b      	str	r3, [sp, #44]	; 0x2c
    7a38:	2b00      	cmp	r3, #0
    7a3a:	da00      	bge.n	7a3e <_svfprintf_r+0x656>
    7a3c:	e542      	b.n	74c4 <_svfprintf_r+0xdc>
    7a3e:	780b      	ldrb	r3, [r1, #0]
    7a40:	920f      	str	r2, [sp, #60]	; 0x3c
    7a42:	e535      	b.n	74b0 <_svfprintf_r+0xc8>
    7a44:	780b      	ldrb	r3, [r1, #0]
    7a46:	2800      	cmp	r0, #0
    7a48:	d000      	beq.n	7a4c <_svfprintf_r+0x664>
    7a4a:	e531      	b.n	74b0 <_svfprintf_r+0xc8>
    7a4c:	2201      	movs	r2, #1
    7a4e:	3020      	adds	r0, #32
    7a50:	4690      	mov	r8, r2
    7a52:	e52d      	b.n	74b0 <_svfprintf_r+0xc8>
    7a54:	468b      	mov	fp, r1
    7a56:	9312      	str	r3, [sp, #72]	; 0x48
    7a58:	06a3      	lsls	r3, r4, #26
    7a5a:	d400      	bmi.n	7a5e <_svfprintf_r+0x676>
    7a5c:	e6ed      	b.n	783a <_svfprintf_r+0x452>
    7a5e:	2207      	movs	r2, #7
    7a60:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7a62:	3307      	adds	r3, #7
    7a64:	4393      	bics	r3, r2
    7a66:	3201      	adds	r2, #1
    7a68:	4694      	mov	ip, r2
    7a6a:	449c      	add	ip, r3
    7a6c:	4662      	mov	r2, ip
    7a6e:	920f      	str	r2, [sp, #60]	; 0x3c
    7a70:	681a      	ldr	r2, [r3, #0]
    7a72:	685b      	ldr	r3, [r3, #4]
    7a74:	0011      	movs	r1, r2
    7a76:	001a      	movs	r2, r3
    7a78:	0008      	movs	r0, r1
    7a7a:	4310      	orrs	r0, r2
    7a7c:	910c      	str	r1, [sp, #48]	; 0x30
    7a7e:	920d      	str	r2, [sp, #52]	; 0x34
    7a80:	2301      	movs	r3, #1
    7a82:	0002      	movs	r2, r0
    7a84:	e699      	b.n	77ba <_svfprintf_r+0x3d2>
    7a86:	468b      	mov	fp, r1
    7a88:	9312      	str	r3, [sp, #72]	; 0x48
    7a8a:	06a3      	lsls	r3, r4, #26
    7a8c:	d400      	bmi.n	7a90 <_svfprintf_r+0x6a8>
    7a8e:	e683      	b.n	7798 <_svfprintf_r+0x3b0>
    7a90:	2207      	movs	r2, #7
    7a92:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7a94:	3307      	adds	r3, #7
    7a96:	4393      	bics	r3, r2
    7a98:	3201      	adds	r2, #1
    7a9a:	4694      	mov	ip, r2
    7a9c:	449c      	add	ip, r3
    7a9e:	4662      	mov	r2, ip
    7aa0:	920f      	str	r2, [sp, #60]	; 0x3c
    7aa2:	681a      	ldr	r2, [r3, #0]
    7aa4:	685b      	ldr	r3, [r3, #4]
    7aa6:	0011      	movs	r1, r2
    7aa8:	001a      	movs	r2, r3
    7aaa:	0008      	movs	r0, r1
    7aac:	4310      	orrs	r0, r2
    7aae:	910c      	str	r1, [sp, #48]	; 0x30
    7ab0:	920d      	str	r2, [sp, #52]	; 0x34
    7ab2:	2300      	movs	r3, #0
    7ab4:	0002      	movs	r2, r0
    7ab6:	e680      	b.n	77ba <_svfprintf_r+0x3d2>
    7ab8:	468b      	mov	fp, r1
    7aba:	4641      	mov	r1, r8
    7abc:	9312      	str	r3, [sp, #72]	; 0x48
    7abe:	2900      	cmp	r1, #0
    7ac0:	d001      	beq.n	7ac6 <_svfprintf_r+0x6de>
    7ac2:	f000 ff7f 	bl	89c4 <_svfprintf_r+0x15dc>
    7ac6:	9b12      	ldr	r3, [sp, #72]	; 0x48
    7ac8:	2b00      	cmp	r3, #0
    7aca:	d100      	bne.n	7ace <_svfprintf_r+0x6e6>
    7acc:	e50b      	b.n	74e6 <_svfprintf_r+0xfe>
    7ace:	ad28      	add	r5, sp, #160	; 0xa0
    7ad0:	702b      	strb	r3, [r5, #0]
    7ad2:	2300      	movs	r3, #0
    7ad4:	aa16      	add	r2, sp, #88	; 0x58
    7ad6:	77d3      	strb	r3, [r2, #31]
    7ad8:	9408      	str	r4, [sp, #32]
    7ada:	e74e      	b.n	797a <_svfprintf_r+0x592>
    7adc:	68bc      	ldr	r4, [r7, #8]
    7ade:	4643      	mov	r3, r8
    7ae0:	2b00      	cmp	r3, #0
    7ae2:	d00f      	beq.n	7b04 <_svfprintf_r+0x71c>
    7ae4:	aa16      	add	r2, sp, #88	; 0x58
    7ae6:	231f      	movs	r3, #31
    7ae8:	4694      	mov	ip, r2
    7aea:	4463      	add	r3, ip
    7aec:	6033      	str	r3, [r6, #0]
    7aee:	2301      	movs	r3, #1
    7af0:	6073      	str	r3, [r6, #4]
    7af2:	687b      	ldr	r3, [r7, #4]
    7af4:	3401      	adds	r4, #1
    7af6:	3301      	adds	r3, #1
    7af8:	60bc      	str	r4, [r7, #8]
    7afa:	607b      	str	r3, [r7, #4]
    7afc:	2b07      	cmp	r3, #7
    7afe:	dd00      	ble.n	7b02 <_svfprintf_r+0x71a>
    7b00:	e1b3      	b.n	7e6a <_svfprintf_r+0xa82>
    7b02:	3608      	adds	r6, #8
    7b04:	464b      	mov	r3, r9
    7b06:	2b00      	cmp	r3, #0
    7b08:	d00c      	beq.n	7b24 <_svfprintf_r+0x73c>
    7b0a:	ab1e      	add	r3, sp, #120	; 0x78
    7b0c:	6033      	str	r3, [r6, #0]
    7b0e:	2302      	movs	r3, #2
    7b10:	6073      	str	r3, [r6, #4]
    7b12:	687b      	ldr	r3, [r7, #4]
    7b14:	3402      	adds	r4, #2
    7b16:	3301      	adds	r3, #1
    7b18:	60bc      	str	r4, [r7, #8]
    7b1a:	607b      	str	r3, [r7, #4]
    7b1c:	2b07      	cmp	r3, #7
    7b1e:	dd00      	ble.n	7b22 <_svfprintf_r+0x73a>
    7b20:	e1af      	b.n	7e82 <_svfprintf_r+0xa9a>
    7b22:	3608      	adds	r6, #8
    7b24:	9b10      	ldr	r3, [sp, #64]	; 0x40
    7b26:	2b80      	cmp	r3, #128	; 0x80
    7b28:	d100      	bne.n	7b2c <_svfprintf_r+0x744>
    7b2a:	e120      	b.n	7d6e <_svfprintf_r+0x986>
    7b2c:	4653      	mov	r3, sl
    7b2e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    7b30:	1a9d      	subs	r5, r3, r2
    7b32:	2d00      	cmp	r5, #0
    7b34:	dd3c      	ble.n	7bb0 <_svfprintf_r+0x7c8>
    7b36:	4a08      	ldr	r2, [pc, #32]	; (7b58 <_svfprintf_r+0x770>)
    7b38:	687b      	ldr	r3, [r7, #4]
    7b3a:	4691      	mov	r9, r2
    7b3c:	2d10      	cmp	r5, #16
    7b3e:	dd2c      	ble.n	7b9a <_svfprintf_r+0x7b2>
    7b40:	2210      	movs	r2, #16
    7b42:	0021      	movs	r1, r4
    7b44:	4692      	mov	sl, r2
    7b46:	9c09      	ldr	r4, [sp, #36]	; 0x24
    7b48:	0032      	movs	r2, r6
    7b4a:	002e      	movs	r6, r5
    7b4c:	464d      	mov	r5, r9
    7b4e:	e009      	b.n	7b64 <_svfprintf_r+0x77c>
    7b50:	0000a120 	.word	0x0000a120
    7b54:	0000a134 	.word	0x0000a134
    7b58:	0000a160 	.word	0x0000a160
    7b5c:	3e10      	subs	r6, #16
    7b5e:	3208      	adds	r2, #8
    7b60:	2e10      	cmp	r6, #16
    7b62:	dd16      	ble.n	7b92 <_svfprintf_r+0x7aa>
    7b64:	4650      	mov	r0, sl
    7b66:	3110      	adds	r1, #16
    7b68:	3301      	adds	r3, #1
    7b6a:	6015      	str	r5, [r2, #0]
    7b6c:	6050      	str	r0, [r2, #4]
    7b6e:	60b9      	str	r1, [r7, #8]
    7b70:	607b      	str	r3, [r7, #4]
    7b72:	2b07      	cmp	r3, #7
    7b74:	ddf2      	ble.n	7b5c <_svfprintf_r+0x774>
    7b76:	003a      	movs	r2, r7
    7b78:	9906      	ldr	r1, [sp, #24]
    7b7a:	0020      	movs	r0, r4
    7b7c:	f001 fa02 	bl	8f84 <__ssprint_r>
    7b80:	2800      	cmp	r0, #0
    7b82:	d000      	beq.n	7b86 <_svfprintf_r+0x79e>
    7b84:	e4b7      	b.n	74f6 <_svfprintf_r+0x10e>
    7b86:	3e10      	subs	r6, #16
    7b88:	68b9      	ldr	r1, [r7, #8]
    7b8a:	687b      	ldr	r3, [r7, #4]
    7b8c:	aa32      	add	r2, sp, #200	; 0xc8
    7b8e:	2e10      	cmp	r6, #16
    7b90:	dce8      	bgt.n	7b64 <_svfprintf_r+0x77c>
    7b92:	46a9      	mov	r9, r5
    7b94:	000c      	movs	r4, r1
    7b96:	0035      	movs	r5, r6
    7b98:	0016      	movs	r6, r2
    7b9a:	464a      	mov	r2, r9
    7b9c:	1964      	adds	r4, r4, r5
    7b9e:	3301      	adds	r3, #1
    7ba0:	6032      	str	r2, [r6, #0]
    7ba2:	6075      	str	r5, [r6, #4]
    7ba4:	60bc      	str	r4, [r7, #8]
    7ba6:	607b      	str	r3, [r7, #4]
    7ba8:	2b07      	cmp	r3, #7
    7baa:	dd00      	ble.n	7bae <_svfprintf_r+0x7c6>
    7bac:	e151      	b.n	7e52 <_svfprintf_r+0xa6a>
    7bae:	3608      	adds	r6, #8
    7bb0:	9b08      	ldr	r3, [sp, #32]
    7bb2:	05db      	lsls	r3, r3, #23
    7bb4:	d500      	bpl.n	7bb8 <_svfprintf_r+0x7d0>
    7bb6:	e0b6      	b.n	7d26 <_svfprintf_r+0x93e>
    7bb8:	9b11      	ldr	r3, [sp, #68]	; 0x44
    7bba:	6033      	str	r3, [r6, #0]
    7bbc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    7bbe:	469c      	mov	ip, r3
    7bc0:	6073      	str	r3, [r6, #4]
    7bc2:	687b      	ldr	r3, [r7, #4]
    7bc4:	4464      	add	r4, ip
    7bc6:	3301      	adds	r3, #1
    7bc8:	60bc      	str	r4, [r7, #8]
    7bca:	607b      	str	r3, [r7, #4]
    7bcc:	2b07      	cmp	r3, #7
    7bce:	dd00      	ble.n	7bd2 <_svfprintf_r+0x7ea>
    7bd0:	e09d      	b.n	7d0e <_svfprintf_r+0x926>
    7bd2:	3608      	adds	r6, #8
    7bd4:	9b08      	ldr	r3, [sp, #32]
    7bd6:	075b      	lsls	r3, r3, #29
    7bd8:	d541      	bpl.n	7c5e <_svfprintf_r+0x876>
    7bda:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    7bdc:	9a07      	ldr	r2, [sp, #28]
    7bde:	1a9d      	subs	r5, r3, r2
    7be0:	2d00      	cmp	r5, #0
    7be2:	dd3c      	ble.n	7c5e <_svfprintf_r+0x876>
    7be4:	4ac4      	ldr	r2, [pc, #784]	; (7ef8 <_svfprintf_r+0xb10>)
    7be6:	687b      	ldr	r3, [r7, #4]
    7be8:	4690      	mov	r8, r2
    7bea:	2d10      	cmp	r5, #16
    7bec:	dd26      	ble.n	7c3c <_svfprintf_r+0x854>
    7bee:	2210      	movs	r2, #16
    7bf0:	0021      	movs	r1, r4
    7bf2:	4691      	mov	r9, r2
    7bf4:	9c09      	ldr	r4, [sp, #36]	; 0x24
    7bf6:	0032      	movs	r2, r6
    7bf8:	002e      	movs	r6, r5
    7bfa:	9d06      	ldr	r5, [sp, #24]
    7bfc:	e003      	b.n	7c06 <_svfprintf_r+0x81e>
    7bfe:	3e10      	subs	r6, #16
    7c00:	3208      	adds	r2, #8
    7c02:	2e10      	cmp	r6, #16
    7c04:	dd17      	ble.n	7c36 <_svfprintf_r+0x84e>
    7c06:	48bc      	ldr	r0, [pc, #752]	; (7ef8 <_svfprintf_r+0xb10>)
    7c08:	3110      	adds	r1, #16
    7c0a:	6010      	str	r0, [r2, #0]
    7c0c:	4648      	mov	r0, r9
    7c0e:	3301      	adds	r3, #1
    7c10:	6050      	str	r0, [r2, #4]
    7c12:	60b9      	str	r1, [r7, #8]
    7c14:	607b      	str	r3, [r7, #4]
    7c16:	2b07      	cmp	r3, #7
    7c18:	ddf1      	ble.n	7bfe <_svfprintf_r+0x816>
    7c1a:	003a      	movs	r2, r7
    7c1c:	0029      	movs	r1, r5
    7c1e:	0020      	movs	r0, r4
    7c20:	f001 f9b0 	bl	8f84 <__ssprint_r>
    7c24:	2800      	cmp	r0, #0
    7c26:	d000      	beq.n	7c2a <_svfprintf_r+0x842>
    7c28:	e465      	b.n	74f6 <_svfprintf_r+0x10e>
    7c2a:	3e10      	subs	r6, #16
    7c2c:	68b9      	ldr	r1, [r7, #8]
    7c2e:	687b      	ldr	r3, [r7, #4]
    7c30:	aa32      	add	r2, sp, #200	; 0xc8
    7c32:	2e10      	cmp	r6, #16
    7c34:	dce7      	bgt.n	7c06 <_svfprintf_r+0x81e>
    7c36:	0035      	movs	r5, r6
    7c38:	000c      	movs	r4, r1
    7c3a:	0016      	movs	r6, r2
    7c3c:	4642      	mov	r2, r8
    7c3e:	1964      	adds	r4, r4, r5
    7c40:	3301      	adds	r3, #1
    7c42:	c624      	stmia	r6!, {r2, r5}
    7c44:	60bc      	str	r4, [r7, #8]
    7c46:	607b      	str	r3, [r7, #4]
    7c48:	2b07      	cmp	r3, #7
    7c4a:	dd08      	ble.n	7c5e <_svfprintf_r+0x876>
    7c4c:	003a      	movs	r2, r7
    7c4e:	9906      	ldr	r1, [sp, #24]
    7c50:	9809      	ldr	r0, [sp, #36]	; 0x24
    7c52:	f001 f997 	bl	8f84 <__ssprint_r>
    7c56:	2800      	cmp	r0, #0
    7c58:	d000      	beq.n	7c5c <_svfprintf_r+0x874>
    7c5a:	e44c      	b.n	74f6 <_svfprintf_r+0x10e>
    7c5c:	68bc      	ldr	r4, [r7, #8]
    7c5e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    7c60:	9907      	ldr	r1, [sp, #28]
    7c62:	428b      	cmp	r3, r1
    7c64:	da00      	bge.n	7c68 <_svfprintf_r+0x880>
    7c66:	000b      	movs	r3, r1
    7c68:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    7c6a:	4694      	mov	ip, r2
    7c6c:	449c      	add	ip, r3
    7c6e:	4663      	mov	r3, ip
    7c70:	930a      	str	r3, [sp, #40]	; 0x28
    7c72:	2c00      	cmp	r4, #0
    7c74:	d000      	beq.n	7c78 <_svfprintf_r+0x890>
    7c76:	e0d6      	b.n	7e26 <_svfprintf_r+0xa3e>
    7c78:	2300      	movs	r3, #0
    7c7a:	ae32      	add	r6, sp, #200	; 0xc8
    7c7c:	607b      	str	r3, [r7, #4]
    7c7e:	f7ff fbde 	bl	743e <_svfprintf_r+0x56>
    7c82:	9b14      	ldr	r3, [sp, #80]	; 0x50
    7c84:	2b01      	cmp	r3, #1
    7c86:	dc00      	bgt.n	7c8a <_svfprintf_r+0x8a2>
    7c88:	e0ae      	b.n	7de8 <_svfprintf_r+0xa00>
    7c8a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    7c8c:	3401      	adds	r4, #1
    7c8e:	6033      	str	r3, [r6, #0]
    7c90:	2301      	movs	r3, #1
    7c92:	6073      	str	r3, [r6, #4]
    7c94:	687b      	ldr	r3, [r7, #4]
    7c96:	60bc      	str	r4, [r7, #8]
    7c98:	3301      	adds	r3, #1
    7c9a:	607b      	str	r3, [r7, #4]
    7c9c:	2b07      	cmp	r3, #7
    7c9e:	dd00      	ble.n	7ca2 <_svfprintf_r+0x8ba>
    7ca0:	e2df      	b.n	8262 <_svfprintf_r+0xe7a>
    7ca2:	3608      	adds	r6, #8
    7ca4:	9a19      	ldr	r2, [sp, #100]	; 0x64
    7ca6:	3301      	adds	r3, #1
    7ca8:	6032      	str	r2, [r6, #0]
    7caa:	9a18      	ldr	r2, [sp, #96]	; 0x60
    7cac:	4698      	mov	r8, r3
    7cae:	4694      	mov	ip, r2
    7cb0:	4464      	add	r4, ip
    7cb2:	6072      	str	r2, [r6, #4]
    7cb4:	60bc      	str	r4, [r7, #8]
    7cb6:	607b      	str	r3, [r7, #4]
    7cb8:	2b07      	cmp	r3, #7
    7cba:	dd00      	ble.n	7cbe <_svfprintf_r+0x8d6>
    7cbc:	e2de      	b.n	827c <_svfprintf_r+0xe94>
    7cbe:	3608      	adds	r6, #8
    7cc0:	2200      	movs	r2, #0
    7cc2:	2300      	movs	r3, #0
    7cc4:	9816      	ldr	r0, [sp, #88]	; 0x58
    7cc6:	9915      	ldr	r1, [sp, #84]	; 0x54
    7cc8:	f7fa fe28 	bl	291c <__aeabi_dcmpeq>
    7ccc:	2800      	cmp	r0, #0
    7cce:	d000      	beq.n	7cd2 <_svfprintf_r+0x8ea>
    7cd0:	e1a4      	b.n	801c <_svfprintf_r+0xc34>
    7cd2:	9d11      	ldr	r5, [sp, #68]	; 0x44
    7cd4:	9b14      	ldr	r3, [sp, #80]	; 0x50
    7cd6:	3501      	adds	r5, #1
    7cd8:	3b01      	subs	r3, #1
    7cda:	6035      	str	r5, [r6, #0]
    7cdc:	6073      	str	r3, [r6, #4]
    7cde:	18e4      	adds	r4, r4, r3
    7ce0:	2301      	movs	r3, #1
    7ce2:	469c      	mov	ip, r3
    7ce4:	44e0      	add	r8, ip
    7ce6:	4643      	mov	r3, r8
    7ce8:	60bc      	str	r4, [r7, #8]
    7cea:	607b      	str	r3, [r7, #4]
    7cec:	2b07      	cmp	r3, #7
    7cee:	dd00      	ble.n	7cf2 <_svfprintf_r+0x90a>
    7cf0:	e08b      	b.n	7e0a <_svfprintf_r+0xa22>
    7cf2:	3608      	adds	r6, #8
    7cf4:	ab21      	add	r3, sp, #132	; 0x84
    7cf6:	6033      	str	r3, [r6, #0]
    7cf8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    7cfa:	469c      	mov	ip, r3
    7cfc:	6073      	str	r3, [r6, #4]
    7cfe:	4643      	mov	r3, r8
    7d00:	4464      	add	r4, ip
    7d02:	3301      	adds	r3, #1
    7d04:	60bc      	str	r4, [r7, #8]
    7d06:	607b      	str	r3, [r7, #4]
    7d08:	2b07      	cmp	r3, #7
    7d0a:	dc00      	bgt.n	7d0e <_svfprintf_r+0x926>
    7d0c:	e761      	b.n	7bd2 <_svfprintf_r+0x7ea>
    7d0e:	003a      	movs	r2, r7
    7d10:	9906      	ldr	r1, [sp, #24]
    7d12:	9809      	ldr	r0, [sp, #36]	; 0x24
    7d14:	f001 f936 	bl	8f84 <__ssprint_r>
    7d18:	2800      	cmp	r0, #0
    7d1a:	d001      	beq.n	7d20 <_svfprintf_r+0x938>
    7d1c:	f7ff fbeb 	bl	74f6 <_svfprintf_r+0x10e>
    7d20:	68bc      	ldr	r4, [r7, #8]
    7d22:	ae32      	add	r6, sp, #200	; 0xc8
    7d24:	e756      	b.n	7bd4 <_svfprintf_r+0x7ec>
    7d26:	9b12      	ldr	r3, [sp, #72]	; 0x48
    7d28:	2b65      	cmp	r3, #101	; 0x65
    7d2a:	ddaa      	ble.n	7c82 <_svfprintf_r+0x89a>
    7d2c:	2200      	movs	r2, #0
    7d2e:	2300      	movs	r3, #0
    7d30:	9816      	ldr	r0, [sp, #88]	; 0x58
    7d32:	9915      	ldr	r1, [sp, #84]	; 0x54
    7d34:	f7fa fdf2 	bl	291c <__aeabi_dcmpeq>
    7d38:	2800      	cmp	r0, #0
    7d3a:	d100      	bne.n	7d3e <_svfprintf_r+0x956>
    7d3c:	e0e2      	b.n	7f04 <_svfprintf_r+0xb1c>
    7d3e:	4b6f      	ldr	r3, [pc, #444]	; (7efc <_svfprintf_r+0xb14>)
    7d40:	3401      	adds	r4, #1
    7d42:	6033      	str	r3, [r6, #0]
    7d44:	2301      	movs	r3, #1
    7d46:	6073      	str	r3, [r6, #4]
    7d48:	687b      	ldr	r3, [r7, #4]
    7d4a:	60bc      	str	r4, [r7, #8]
    7d4c:	3301      	adds	r3, #1
    7d4e:	607b      	str	r3, [r7, #4]
    7d50:	2b07      	cmp	r3, #7
    7d52:	dd00      	ble.n	7d56 <_svfprintf_r+0x96e>
    7d54:	e366      	b.n	8424 <_svfprintf_r+0x103c>
    7d56:	3608      	adds	r6, #8
    7d58:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    7d5a:	9a14      	ldr	r2, [sp, #80]	; 0x50
    7d5c:	4293      	cmp	r3, r2
    7d5e:	da00      	bge.n	7d62 <_svfprintf_r+0x97a>
    7d60:	e1a4      	b.n	80ac <_svfprintf_r+0xcc4>
    7d62:	9b08      	ldr	r3, [sp, #32]
    7d64:	07db      	lsls	r3, r3, #31
    7d66:	d500      	bpl.n	7d6a <_svfprintf_r+0x982>
    7d68:	e1a0      	b.n	80ac <_svfprintf_r+0xcc4>
    7d6a:	68bc      	ldr	r4, [r7, #8]
    7d6c:	e732      	b.n	7bd4 <_svfprintf_r+0x7ec>
    7d6e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    7d70:	9a07      	ldr	r2, [sp, #28]
    7d72:	1a9d      	subs	r5, r3, r2
    7d74:	2d00      	cmp	r5, #0
    7d76:	dc00      	bgt.n	7d7a <_svfprintf_r+0x992>
    7d78:	e6d8      	b.n	7b2c <_svfprintf_r+0x744>
    7d7a:	4a61      	ldr	r2, [pc, #388]	; (7f00 <_svfprintf_r+0xb18>)
    7d7c:	687b      	ldr	r3, [r7, #4]
    7d7e:	4691      	mov	r9, r2
    7d80:	2d10      	cmp	r5, #16
    7d82:	dd25      	ble.n	7dd0 <_svfprintf_r+0x9e8>
    7d84:	2210      	movs	r2, #16
    7d86:	0021      	movs	r1, r4
    7d88:	4690      	mov	r8, r2
    7d8a:	9c09      	ldr	r4, [sp, #36]	; 0x24
    7d8c:	0032      	movs	r2, r6
    7d8e:	464e      	mov	r6, r9
    7d90:	e003      	b.n	7d9a <_svfprintf_r+0x9b2>
    7d92:	3d10      	subs	r5, #16
    7d94:	3208      	adds	r2, #8
    7d96:	2d10      	cmp	r5, #16
    7d98:	dd17      	ble.n	7dca <_svfprintf_r+0x9e2>
    7d9a:	4640      	mov	r0, r8
    7d9c:	3110      	adds	r1, #16
    7d9e:	3301      	adds	r3, #1
    7da0:	6016      	str	r6, [r2, #0]
    7da2:	6050      	str	r0, [r2, #4]
    7da4:	60b9      	str	r1, [r7, #8]
    7da6:	607b      	str	r3, [r7, #4]
    7da8:	2b07      	cmp	r3, #7
    7daa:	ddf2      	ble.n	7d92 <_svfprintf_r+0x9aa>
    7dac:	003a      	movs	r2, r7
    7dae:	9906      	ldr	r1, [sp, #24]
    7db0:	0020      	movs	r0, r4
    7db2:	f001 f8e7 	bl	8f84 <__ssprint_r>
    7db6:	2800      	cmp	r0, #0
    7db8:	d001      	beq.n	7dbe <_svfprintf_r+0x9d6>
    7dba:	f7ff fb9c 	bl	74f6 <_svfprintf_r+0x10e>
    7dbe:	3d10      	subs	r5, #16
    7dc0:	68b9      	ldr	r1, [r7, #8]
    7dc2:	687b      	ldr	r3, [r7, #4]
    7dc4:	aa32      	add	r2, sp, #200	; 0xc8
    7dc6:	2d10      	cmp	r5, #16
    7dc8:	dce7      	bgt.n	7d9a <_svfprintf_r+0x9b2>
    7dca:	46b1      	mov	r9, r6
    7dcc:	000c      	movs	r4, r1
    7dce:	0016      	movs	r6, r2
    7dd0:	464a      	mov	r2, r9
    7dd2:	1964      	adds	r4, r4, r5
    7dd4:	3301      	adds	r3, #1
    7dd6:	6032      	str	r2, [r6, #0]
    7dd8:	6075      	str	r5, [r6, #4]
    7dda:	60bc      	str	r4, [r7, #8]
    7ddc:	607b      	str	r3, [r7, #4]
    7dde:	2b07      	cmp	r3, #7
    7de0:	dd00      	ble.n	7de4 <_svfprintf_r+0x9fc>
    7de2:	e27e      	b.n	82e2 <_svfprintf_r+0xefa>
    7de4:	3608      	adds	r6, #8
    7de6:	e6a1      	b.n	7b2c <_svfprintf_r+0x744>
    7de8:	2301      	movs	r3, #1
    7dea:	9a08      	ldr	r2, [sp, #32]
    7dec:	4213      	tst	r3, r2
    7dee:	d000      	beq.n	7df2 <_svfprintf_r+0xa0a>
    7df0:	e74b      	b.n	7c8a <_svfprintf_r+0x8a2>
    7df2:	6073      	str	r3, [r6, #4]
    7df4:	687b      	ldr	r3, [r7, #4]
    7df6:	9a11      	ldr	r2, [sp, #68]	; 0x44
    7df8:	3301      	adds	r3, #1
    7dfa:	3401      	adds	r4, #1
    7dfc:	6032      	str	r2, [r6, #0]
    7dfe:	60bc      	str	r4, [r7, #8]
    7e00:	4698      	mov	r8, r3
    7e02:	607b      	str	r3, [r7, #4]
    7e04:	2b07      	cmp	r3, #7
    7e06:	dc00      	bgt.n	7e0a <_svfprintf_r+0xa22>
    7e08:	e773      	b.n	7cf2 <_svfprintf_r+0x90a>
    7e0a:	003a      	movs	r2, r7
    7e0c:	9906      	ldr	r1, [sp, #24]
    7e0e:	9809      	ldr	r0, [sp, #36]	; 0x24
    7e10:	f001 f8b8 	bl	8f84 <__ssprint_r>
    7e14:	2800      	cmp	r0, #0
    7e16:	d001      	beq.n	7e1c <_svfprintf_r+0xa34>
    7e18:	f7ff fb6d 	bl	74f6 <_svfprintf_r+0x10e>
    7e1c:	687b      	ldr	r3, [r7, #4]
    7e1e:	68bc      	ldr	r4, [r7, #8]
    7e20:	4698      	mov	r8, r3
    7e22:	ae32      	add	r6, sp, #200	; 0xc8
    7e24:	e766      	b.n	7cf4 <_svfprintf_r+0x90c>
    7e26:	003a      	movs	r2, r7
    7e28:	9906      	ldr	r1, [sp, #24]
    7e2a:	9809      	ldr	r0, [sp, #36]	; 0x24
    7e2c:	f001 f8aa 	bl	8f84 <__ssprint_r>
    7e30:	2800      	cmp	r0, #0
    7e32:	d100      	bne.n	7e36 <_svfprintf_r+0xa4e>
    7e34:	e720      	b.n	7c78 <_svfprintf_r+0x890>
    7e36:	f7ff fb5e 	bl	74f6 <_svfprintf_r+0x10e>
    7e3a:	9c08      	ldr	r4, [sp, #32]
    7e3c:	2b01      	cmp	r3, #1
    7e3e:	d100      	bne.n	7e42 <_svfprintf_r+0xa5a>
    7e40:	e184      	b.n	814c <_svfprintf_r+0xd64>
    7e42:	2b02      	cmp	r3, #2
    7e44:	d129      	bne.n	7e9a <_svfprintf_r+0xab2>
    7e46:	9408      	str	r4, [sp, #32]
    7e48:	2300      	movs	r3, #0
    7e4a:	2400      	movs	r4, #0
    7e4c:	930c      	str	r3, [sp, #48]	; 0x30
    7e4e:	940d      	str	r4, [sp, #52]	; 0x34
    7e50:	e4c5      	b.n	77de <_svfprintf_r+0x3f6>
    7e52:	003a      	movs	r2, r7
    7e54:	9906      	ldr	r1, [sp, #24]
    7e56:	9809      	ldr	r0, [sp, #36]	; 0x24
    7e58:	f001 f894 	bl	8f84 <__ssprint_r>
    7e5c:	2800      	cmp	r0, #0
    7e5e:	d001      	beq.n	7e64 <_svfprintf_r+0xa7c>
    7e60:	f7ff fb49 	bl	74f6 <_svfprintf_r+0x10e>
    7e64:	68bc      	ldr	r4, [r7, #8]
    7e66:	ae32      	add	r6, sp, #200	; 0xc8
    7e68:	e6a2      	b.n	7bb0 <_svfprintf_r+0x7c8>
    7e6a:	003a      	movs	r2, r7
    7e6c:	9906      	ldr	r1, [sp, #24]
    7e6e:	9809      	ldr	r0, [sp, #36]	; 0x24
    7e70:	f001 f888 	bl	8f84 <__ssprint_r>
    7e74:	2800      	cmp	r0, #0
    7e76:	d001      	beq.n	7e7c <_svfprintf_r+0xa94>
    7e78:	f7ff fb3d 	bl	74f6 <_svfprintf_r+0x10e>
    7e7c:	68bc      	ldr	r4, [r7, #8]
    7e7e:	ae32      	add	r6, sp, #200	; 0xc8
    7e80:	e640      	b.n	7b04 <_svfprintf_r+0x71c>
    7e82:	003a      	movs	r2, r7
    7e84:	9906      	ldr	r1, [sp, #24]
    7e86:	9809      	ldr	r0, [sp, #36]	; 0x24
    7e88:	f001 f87c 	bl	8f84 <__ssprint_r>
    7e8c:	2800      	cmp	r0, #0
    7e8e:	d001      	beq.n	7e94 <_svfprintf_r+0xaac>
    7e90:	f7ff fb31 	bl	74f6 <_svfprintf_r+0x10e>
    7e94:	68bc      	ldr	r4, [r7, #8]
    7e96:	ae32      	add	r6, sp, #200	; 0xc8
    7e98:	e644      	b.n	7b24 <_svfprintf_r+0x73c>
    7e9a:	9408      	str	r4, [sp, #32]
    7e9c:	2300      	movs	r3, #0
    7e9e:	2400      	movs	r4, #0
    7ea0:	930c      	str	r3, [sp, #48]	; 0x30
    7ea2:	940d      	str	r4, [sp, #52]	; 0x34
    7ea4:	980c      	ldr	r0, [sp, #48]	; 0x30
    7ea6:	990d      	ldr	r1, [sp, #52]	; 0x34
    7ea8:	465b      	mov	r3, fp
    7eaa:	aa32      	add	r2, sp, #200	; 0xc8
    7eac:	9307      	str	r3, [sp, #28]
    7eae:	4691      	mov	r9, r2
    7eb0:	46b3      	mov	fp, r6
    7eb2:	e000      	b.n	7eb6 <_svfprintf_r+0xace>
    7eb4:	46a1      	mov	r9, r4
    7eb6:	074a      	lsls	r2, r1, #29
    7eb8:	4694      	mov	ip, r2
    7eba:	464b      	mov	r3, r9
    7ebc:	4665      	mov	r5, ip
    7ebe:	1e5c      	subs	r4, r3, #1
    7ec0:	08c6      	lsrs	r6, r0, #3
    7ec2:	2307      	movs	r3, #7
    7ec4:	08ca      	lsrs	r2, r1, #3
    7ec6:	4335      	orrs	r5, r6
    7ec8:	0011      	movs	r1, r2
    7eca:	002a      	movs	r2, r5
    7ecc:	4003      	ands	r3, r0
    7ece:	3330      	adds	r3, #48	; 0x30
    7ed0:	7023      	strb	r3, [r4, #0]
    7ed2:	0028      	movs	r0, r5
    7ed4:	430a      	orrs	r2, r1
    7ed6:	d1ed      	bne.n	7eb4 <_svfprintf_r+0xacc>
    7ed8:	900c      	str	r0, [sp, #48]	; 0x30
    7eda:	910d      	str	r1, [sp, #52]	; 0x34
    7edc:	9907      	ldr	r1, [sp, #28]
    7ede:	465e      	mov	r6, fp
    7ee0:	468b      	mov	fp, r1
    7ee2:	9908      	ldr	r1, [sp, #32]
    7ee4:	464a      	mov	r2, r9
    7ee6:	9411      	str	r4, [sp, #68]	; 0x44
    7ee8:	07c9      	lsls	r1, r1, #31
    7eea:	d500      	bpl.n	7eee <_svfprintf_r+0xb06>
    7eec:	e13d      	b.n	816a <_svfprintf_r+0xd82>
    7eee:	ab32      	add	r3, sp, #200	; 0xc8
    7ef0:	1b1b      	subs	r3, r3, r4
    7ef2:	930e      	str	r3, [sp, #56]	; 0x38
    7ef4:	f7ff fb88 	bl	7608 <_svfprintf_r+0x220>
    7ef8:	0000a150 	.word	0x0000a150
    7efc:	00009ea8 	.word	0x00009ea8
    7f00:	0000a160 	.word	0x0000a160
    7f04:	981f      	ldr	r0, [sp, #124]	; 0x7c
    7f06:	2800      	cmp	r0, #0
    7f08:	dc00      	bgt.n	7f0c <_svfprintf_r+0xb24>
    7f0a:	e296      	b.n	843a <_svfprintf_r+0x1052>
    7f0c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    7f0e:	9914      	ldr	r1, [sp, #80]	; 0x50
    7f10:	0013      	movs	r3, r2
    7f12:	4690      	mov	r8, r2
    7f14:	428b      	cmp	r3, r1
    7f16:	dd00      	ble.n	7f1a <_svfprintf_r+0xb32>
    7f18:	4688      	mov	r8, r1
    7f1a:	4643      	mov	r3, r8
    7f1c:	2b00      	cmp	r3, #0
    7f1e:	dd0c      	ble.n	7f3a <_svfprintf_r+0xb52>
    7f20:	9b11      	ldr	r3, [sp, #68]	; 0x44
    7f22:	4444      	add	r4, r8
    7f24:	6033      	str	r3, [r6, #0]
    7f26:	4643      	mov	r3, r8
    7f28:	6073      	str	r3, [r6, #4]
    7f2a:	687b      	ldr	r3, [r7, #4]
    7f2c:	60bc      	str	r4, [r7, #8]
    7f2e:	3301      	adds	r3, #1
    7f30:	607b      	str	r3, [r7, #4]
    7f32:	2b07      	cmp	r3, #7
    7f34:	dd00      	ble.n	7f38 <_svfprintf_r+0xb50>
    7f36:	e3b7      	b.n	86a8 <_svfprintf_r+0x12c0>
    7f38:	3608      	adds	r6, #8
    7f3a:	4643      	mov	r3, r8
    7f3c:	43db      	mvns	r3, r3
    7f3e:	4642      	mov	r2, r8
    7f40:	17db      	asrs	r3, r3, #31
    7f42:	4013      	ands	r3, r2
    7f44:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    7f46:	1ad3      	subs	r3, r2, r3
    7f48:	4698      	mov	r8, r3
    7f4a:	2b00      	cmp	r3, #0
    7f4c:	dc00      	bgt.n	7f50 <_svfprintf_r+0xb68>
    7f4e:	e128      	b.n	81a2 <_svfprintf_r+0xdba>
    7f50:	2b10      	cmp	r3, #16
    7f52:	dc01      	bgt.n	7f58 <_svfprintf_r+0xb70>
    7f54:	f000 fce7 	bl	8926 <_svfprintf_r+0x153e>
    7f58:	4acf      	ldr	r2, [pc, #828]	; (8298 <_svfprintf_r+0xeb0>)
    7f5a:	0021      	movs	r1, r4
    7f5c:	4691      	mov	r9, r2
    7f5e:	2210      	movs	r2, #16
    7f60:	687b      	ldr	r3, [r7, #4]
    7f62:	4692      	mov	sl, r2
    7f64:	9d09      	ldr	r5, [sp, #36]	; 0x24
    7f66:	0032      	movs	r2, r6
    7f68:	464c      	mov	r4, r9
    7f6a:	4646      	mov	r6, r8
    7f6c:	e004      	b.n	7f78 <_svfprintf_r+0xb90>
    7f6e:	3208      	adds	r2, #8
    7f70:	3e10      	subs	r6, #16
    7f72:	2e10      	cmp	r6, #16
    7f74:	dc00      	bgt.n	7f78 <_svfprintf_r+0xb90>
    7f76:	e104      	b.n	8182 <_svfprintf_r+0xd9a>
    7f78:	4650      	mov	r0, sl
    7f7a:	3110      	adds	r1, #16
    7f7c:	3301      	adds	r3, #1
    7f7e:	6014      	str	r4, [r2, #0]
    7f80:	6050      	str	r0, [r2, #4]
    7f82:	60b9      	str	r1, [r7, #8]
    7f84:	607b      	str	r3, [r7, #4]
    7f86:	2b07      	cmp	r3, #7
    7f88:	ddf1      	ble.n	7f6e <_svfprintf_r+0xb86>
    7f8a:	003a      	movs	r2, r7
    7f8c:	9906      	ldr	r1, [sp, #24]
    7f8e:	0028      	movs	r0, r5
    7f90:	f000 fff8 	bl	8f84 <__ssprint_r>
    7f94:	2800      	cmp	r0, #0
    7f96:	d001      	beq.n	7f9c <_svfprintf_r+0xbb4>
    7f98:	f7ff faad 	bl	74f6 <_svfprintf_r+0x10e>
    7f9c:	68b9      	ldr	r1, [r7, #8]
    7f9e:	687b      	ldr	r3, [r7, #4]
    7fa0:	aa32      	add	r2, sp, #200	; 0xc8
    7fa2:	e7e5      	b.n	7f70 <_svfprintf_r+0xb88>
    7fa4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7fa6:	2b00      	cmp	r3, #0
    7fa8:	d100      	bne.n	7fac <_svfprintf_r+0xbc4>
    7faa:	e0ca      	b.n	8142 <_svfprintf_r+0xd5a>
    7fac:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    7fae:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    7fb0:	ab32      	add	r3, sp, #200	; 0xc8
    7fb2:	46b1      	mov	r9, r6
    7fb4:	001e      	movs	r6, r3
    7fb6:	0020      	movs	r0, r4
    7fb8:	0029      	movs	r1, r5
    7fba:	220a      	movs	r2, #10
    7fbc:	2300      	movs	r3, #0
    7fbe:	f7fa fcdb 	bl	2978 <__aeabi_uldivmod>
    7fc2:	3e01      	subs	r6, #1
    7fc4:	3230      	adds	r2, #48	; 0x30
    7fc6:	7032      	strb	r2, [r6, #0]
    7fc8:	2300      	movs	r3, #0
    7fca:	0020      	movs	r0, r4
    7fcc:	0029      	movs	r1, r5
    7fce:	220a      	movs	r2, #10
    7fd0:	f7fa fcd2 	bl	2978 <__aeabi_uldivmod>
    7fd4:	0003      	movs	r3, r0
    7fd6:	0004      	movs	r4, r0
    7fd8:	000d      	movs	r5, r1
    7fda:	430b      	orrs	r3, r1
    7fdc:	d1eb      	bne.n	7fb6 <_svfprintf_r+0xbce>
    7fde:	0032      	movs	r2, r6
    7fe0:	ab32      	add	r3, sp, #200	; 0xc8
    7fe2:	1a9b      	subs	r3, r3, r2
    7fe4:	9611      	str	r6, [sp, #68]	; 0x44
    7fe6:	940c      	str	r4, [sp, #48]	; 0x30
    7fe8:	950d      	str	r5, [sp, #52]	; 0x34
    7fea:	464e      	mov	r6, r9
    7fec:	930e      	str	r3, [sp, #56]	; 0x38
    7fee:	f7ff fb0b 	bl	7608 <_svfprintf_r+0x220>
    7ff2:	2300      	movs	r3, #0
    7ff4:	930e      	str	r3, [sp, #56]	; 0x38
    7ff6:	ab32      	add	r3, sp, #200	; 0xc8
    7ff8:	9311      	str	r3, [sp, #68]	; 0x44
    7ffa:	f7ff fb05 	bl	7608 <_svfprintf_r+0x220>
    7ffe:	003a      	movs	r2, r7
    8000:	9906      	ldr	r1, [sp, #24]
    8002:	9809      	ldr	r0, [sp, #36]	; 0x24
    8004:	f000 ffbe 	bl	8f84 <__ssprint_r>
    8008:	2800      	cmp	r0, #0
    800a:	d001      	beq.n	8010 <_svfprintf_r+0xc28>
    800c:	f7ff fa73 	bl	74f6 <_svfprintf_r+0x10e>
    8010:	ab16      	add	r3, sp, #88	; 0x58
    8012:	7fdb      	ldrb	r3, [r3, #31]
    8014:	68bc      	ldr	r4, [r7, #8]
    8016:	4698      	mov	r8, r3
    8018:	ae32      	add	r6, sp, #200	; 0xc8
    801a:	e560      	b.n	7ade <_svfprintf_r+0x6f6>
    801c:	9b14      	ldr	r3, [sp, #80]	; 0x50
    801e:	1e5d      	subs	r5, r3, #1
    8020:	2d00      	cmp	r5, #0
    8022:	dc00      	bgt.n	8026 <_svfprintf_r+0xc3e>
    8024:	e666      	b.n	7cf4 <_svfprintf_r+0x90c>
    8026:	4b9c      	ldr	r3, [pc, #624]	; (8298 <_svfprintf_r+0xeb0>)
    8028:	4699      	mov	r9, r3
    802a:	2d10      	cmp	r5, #16
    802c:	dd29      	ble.n	8082 <_svfprintf_r+0xc9a>
    802e:	2310      	movs	r3, #16
    8030:	0032      	movs	r2, r6
    8032:	469a      	mov	sl, r3
    8034:	002e      	movs	r6, r5
    8036:	0021      	movs	r1, r4
    8038:	4643      	mov	r3, r8
    803a:	9c09      	ldr	r4, [sp, #36]	; 0x24
    803c:	464d      	mov	r5, r9
    803e:	e003      	b.n	8048 <_svfprintf_r+0xc60>
    8040:	3e10      	subs	r6, #16
    8042:	3208      	adds	r2, #8
    8044:	2e10      	cmp	r6, #16
    8046:	dd17      	ble.n	8078 <_svfprintf_r+0xc90>
    8048:	4650      	mov	r0, sl
    804a:	3110      	adds	r1, #16
    804c:	3301      	adds	r3, #1
    804e:	6015      	str	r5, [r2, #0]
    8050:	6050      	str	r0, [r2, #4]
    8052:	60b9      	str	r1, [r7, #8]
    8054:	607b      	str	r3, [r7, #4]
    8056:	2b07      	cmp	r3, #7
    8058:	ddf2      	ble.n	8040 <_svfprintf_r+0xc58>
    805a:	003a      	movs	r2, r7
    805c:	9906      	ldr	r1, [sp, #24]
    805e:	0020      	movs	r0, r4
    8060:	f000 ff90 	bl	8f84 <__ssprint_r>
    8064:	2800      	cmp	r0, #0
    8066:	d001      	beq.n	806c <_svfprintf_r+0xc84>
    8068:	f7ff fa45 	bl	74f6 <_svfprintf_r+0x10e>
    806c:	3e10      	subs	r6, #16
    806e:	68b9      	ldr	r1, [r7, #8]
    8070:	687b      	ldr	r3, [r7, #4]
    8072:	aa32      	add	r2, sp, #200	; 0xc8
    8074:	2e10      	cmp	r6, #16
    8076:	dce7      	bgt.n	8048 <_svfprintf_r+0xc60>
    8078:	46a9      	mov	r9, r5
    807a:	000c      	movs	r4, r1
    807c:	0035      	movs	r5, r6
    807e:	4698      	mov	r8, r3
    8080:	0016      	movs	r6, r2
    8082:	464b      	mov	r3, r9
    8084:	6075      	str	r5, [r6, #4]
    8086:	6033      	str	r3, [r6, #0]
    8088:	1964      	adds	r4, r4, r5
    808a:	e629      	b.n	7ce0 <_svfprintf_r+0x8f8>
    808c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    808e:	681a      	ldr	r2, [r3, #0]
    8090:	f7ff fbfb 	bl	788a <_svfprintf_r+0x4a2>
    8094:	6813      	ldr	r3, [r2, #0]
    8096:	9307      	str	r3, [sp, #28]
    8098:	f7ff fa82 	bl	75a0 <_svfprintf_r+0x1b8>
    809c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    809e:	681a      	ldr	r2, [r3, #0]
    80a0:	f7ff fb84 	bl	77ac <_svfprintf_r+0x3c4>
    80a4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    80a6:	681a      	ldr	r2, [r3, #0]
    80a8:	f7ff fbd1 	bl	784e <_svfprintf_r+0x466>
    80ac:	9b19      	ldr	r3, [sp, #100]	; 0x64
    80ae:	68ba      	ldr	r2, [r7, #8]
    80b0:	6033      	str	r3, [r6, #0]
    80b2:	9b18      	ldr	r3, [sp, #96]	; 0x60
    80b4:	469c      	mov	ip, r3
    80b6:	6073      	str	r3, [r6, #4]
    80b8:	687b      	ldr	r3, [r7, #4]
    80ba:	4462      	add	r2, ip
    80bc:	3301      	adds	r3, #1
    80be:	0014      	movs	r4, r2
    80c0:	60ba      	str	r2, [r7, #8]
    80c2:	607b      	str	r3, [r7, #4]
    80c4:	2b07      	cmp	r3, #7
    80c6:	dd00      	ble.n	80ca <_svfprintf_r+0xce2>
    80c8:	e202      	b.n	84d0 <_svfprintf_r+0x10e8>
    80ca:	3608      	adds	r6, #8
    80cc:	9b14      	ldr	r3, [sp, #80]	; 0x50
    80ce:	1e5d      	subs	r5, r3, #1
    80d0:	2d00      	cmp	r5, #0
    80d2:	dc00      	bgt.n	80d6 <_svfprintf_r+0xcee>
    80d4:	e57e      	b.n	7bd4 <_svfprintf_r+0x7ec>
    80d6:	4a70      	ldr	r2, [pc, #448]	; (8298 <_svfprintf_r+0xeb0>)
    80d8:	687b      	ldr	r3, [r7, #4]
    80da:	4691      	mov	r9, r2
    80dc:	2d10      	cmp	r5, #16
    80de:	dd25      	ble.n	812c <_svfprintf_r+0xd44>
    80e0:	2210      	movs	r2, #16
    80e2:	0021      	movs	r1, r4
    80e4:	4690      	mov	r8, r2
    80e6:	9c09      	ldr	r4, [sp, #36]	; 0x24
    80e8:	0032      	movs	r2, r6
    80ea:	002e      	movs	r6, r5
    80ec:	464d      	mov	r5, r9
    80ee:	e003      	b.n	80f8 <_svfprintf_r+0xd10>
    80f0:	3208      	adds	r2, #8
    80f2:	3e10      	subs	r6, #16
    80f4:	2e10      	cmp	r6, #16
    80f6:	dd15      	ble.n	8124 <_svfprintf_r+0xd3c>
    80f8:	4640      	mov	r0, r8
    80fa:	3110      	adds	r1, #16
    80fc:	3301      	adds	r3, #1
    80fe:	6015      	str	r5, [r2, #0]
    8100:	6050      	str	r0, [r2, #4]
    8102:	60b9      	str	r1, [r7, #8]
    8104:	607b      	str	r3, [r7, #4]
    8106:	2b07      	cmp	r3, #7
    8108:	ddf2      	ble.n	80f0 <_svfprintf_r+0xd08>
    810a:	003a      	movs	r2, r7
    810c:	9906      	ldr	r1, [sp, #24]
    810e:	0020      	movs	r0, r4
    8110:	f000 ff38 	bl	8f84 <__ssprint_r>
    8114:	2800      	cmp	r0, #0
    8116:	d001      	beq.n	811c <_svfprintf_r+0xd34>
    8118:	f7ff f9ed 	bl	74f6 <_svfprintf_r+0x10e>
    811c:	68b9      	ldr	r1, [r7, #8]
    811e:	687b      	ldr	r3, [r7, #4]
    8120:	aa32      	add	r2, sp, #200	; 0xc8
    8122:	e7e6      	b.n	80f2 <_svfprintf_r+0xd0a>
    8124:	46a9      	mov	r9, r5
    8126:	000c      	movs	r4, r1
    8128:	0035      	movs	r5, r6
    812a:	0016      	movs	r6, r2
    812c:	464a      	mov	r2, r9
    812e:	1964      	adds	r4, r4, r5
    8130:	3301      	adds	r3, #1
    8132:	6032      	str	r2, [r6, #0]
    8134:	6075      	str	r5, [r6, #4]
    8136:	60bc      	str	r4, [r7, #8]
    8138:	607b      	str	r3, [r7, #4]
    813a:	2b07      	cmp	r3, #7
    813c:	dc00      	bgt.n	8140 <_svfprintf_r+0xd58>
    813e:	e548      	b.n	7bd2 <_svfprintf_r+0x7ea>
    8140:	e5e5      	b.n	7d0e <_svfprintf_r+0x926>
    8142:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    8144:	2b09      	cmp	r3, #9
    8146:	d900      	bls.n	814a <_svfprintf_r+0xd62>
    8148:	e730      	b.n	7fac <_svfprintf_r+0xbc4>
    814a:	9c08      	ldr	r4, [sp, #32]
    814c:	2227      	movs	r2, #39	; 0x27
    814e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    8150:	a928      	add	r1, sp, #160	; 0xa0
    8152:	3330      	adds	r3, #48	; 0x30
    8154:	548b      	strb	r3, [r1, r2]
    8156:	2301      	movs	r3, #1
    8158:	aa16      	add	r2, sp, #88	; 0x58
    815a:	4694      	mov	ip, r2
    815c:	930e      	str	r3, [sp, #56]	; 0x38
    815e:	336e      	adds	r3, #110	; 0x6e
    8160:	4463      	add	r3, ip
    8162:	9408      	str	r4, [sp, #32]
    8164:	9311      	str	r3, [sp, #68]	; 0x44
    8166:	f7ff fa4f 	bl	7608 <_svfprintf_r+0x220>
    816a:	2b30      	cmp	r3, #48	; 0x30
    816c:	d100      	bne.n	8170 <_svfprintf_r+0xd88>
    816e:	e20b      	b.n	8588 <_svfprintf_r+0x11a0>
    8170:	2330      	movs	r3, #48	; 0x30
    8172:	3a02      	subs	r2, #2
    8174:	7013      	strb	r3, [r2, #0]
    8176:	ab32      	add	r3, sp, #200	; 0xc8
    8178:	1a9b      	subs	r3, r3, r2
    817a:	930e      	str	r3, [sp, #56]	; 0x38
    817c:	9211      	str	r2, [sp, #68]	; 0x44
    817e:	f7ff fa43 	bl	7608 <_svfprintf_r+0x220>
    8182:	46b0      	mov	r8, r6
    8184:	46a1      	mov	r9, r4
    8186:	0016      	movs	r6, r2
    8188:	000c      	movs	r4, r1
    818a:	464a      	mov	r2, r9
    818c:	6032      	str	r2, [r6, #0]
    818e:	4642      	mov	r2, r8
    8190:	4444      	add	r4, r8
    8192:	3301      	adds	r3, #1
    8194:	6072      	str	r2, [r6, #4]
    8196:	60bc      	str	r4, [r7, #8]
    8198:	607b      	str	r3, [r7, #4]
    819a:	2b07      	cmp	r3, #7
    819c:	dd00      	ble.n	81a0 <_svfprintf_r+0xdb8>
    819e:	e29c      	b.n	86da <_svfprintf_r+0x12f2>
    81a0:	3608      	adds	r6, #8
    81a2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    81a4:	9a14      	ldr	r2, [sp, #80]	; 0x50
    81a6:	4293      	cmp	r3, r2
    81a8:	db4c      	blt.n	8244 <_svfprintf_r+0xe5c>
    81aa:	9a08      	ldr	r2, [sp, #32]
    81ac:	07d2      	lsls	r2, r2, #31
    81ae:	d449      	bmi.n	8244 <_svfprintf_r+0xe5c>
    81b0:	9a14      	ldr	r2, [sp, #80]	; 0x50
    81b2:	9913      	ldr	r1, [sp, #76]	; 0x4c
    81b4:	1ad3      	subs	r3, r2, r3
    81b6:	1a52      	subs	r2, r2, r1
    81b8:	4690      	mov	r8, r2
    81ba:	429a      	cmp	r2, r3
    81bc:	dd00      	ble.n	81c0 <_svfprintf_r+0xdd8>
    81be:	4698      	mov	r8, r3
    81c0:	4642      	mov	r2, r8
    81c2:	2a00      	cmp	r2, #0
    81c4:	dd0f      	ble.n	81e6 <_svfprintf_r+0xdfe>
    81c6:	9913      	ldr	r1, [sp, #76]	; 0x4c
    81c8:	9a11      	ldr	r2, [sp, #68]	; 0x44
    81ca:	468c      	mov	ip, r1
    81cc:	4462      	add	r2, ip
    81ce:	6032      	str	r2, [r6, #0]
    81d0:	4642      	mov	r2, r8
    81d2:	6072      	str	r2, [r6, #4]
    81d4:	687a      	ldr	r2, [r7, #4]
    81d6:	4444      	add	r4, r8
    81d8:	3201      	adds	r2, #1
    81da:	60bc      	str	r4, [r7, #8]
    81dc:	607a      	str	r2, [r7, #4]
    81de:	2a07      	cmp	r2, #7
    81e0:	dd00      	ble.n	81e4 <_svfprintf_r+0xdfc>
    81e2:	e286      	b.n	86f2 <_svfprintf_r+0x130a>
    81e4:	3608      	adds	r6, #8
    81e6:	4642      	mov	r2, r8
    81e8:	43d5      	mvns	r5, r2
    81ea:	17ed      	asrs	r5, r5, #31
    81ec:	4015      	ands	r5, r2
    81ee:	1b5d      	subs	r5, r3, r5
    81f0:	2d00      	cmp	r5, #0
    81f2:	dc00      	bgt.n	81f6 <_svfprintf_r+0xe0e>
    81f4:	e4ee      	b.n	7bd4 <_svfprintf_r+0x7ec>
    81f6:	4a28      	ldr	r2, [pc, #160]	; (8298 <_svfprintf_r+0xeb0>)
    81f8:	687b      	ldr	r3, [r7, #4]
    81fa:	4691      	mov	r9, r2
    81fc:	2d10      	cmp	r5, #16
    81fe:	dd95      	ble.n	812c <_svfprintf_r+0xd44>
    8200:	2210      	movs	r2, #16
    8202:	0021      	movs	r1, r4
    8204:	4690      	mov	r8, r2
    8206:	9c09      	ldr	r4, [sp, #36]	; 0x24
    8208:	0032      	movs	r2, r6
    820a:	002e      	movs	r6, r5
    820c:	464d      	mov	r5, r9
    820e:	e003      	b.n	8218 <_svfprintf_r+0xe30>
    8210:	3208      	adds	r2, #8
    8212:	3e10      	subs	r6, #16
    8214:	2e10      	cmp	r6, #16
    8216:	dd85      	ble.n	8124 <_svfprintf_r+0xd3c>
    8218:	4640      	mov	r0, r8
    821a:	3110      	adds	r1, #16
    821c:	3301      	adds	r3, #1
    821e:	6015      	str	r5, [r2, #0]
    8220:	6050      	str	r0, [r2, #4]
    8222:	60b9      	str	r1, [r7, #8]
    8224:	607b      	str	r3, [r7, #4]
    8226:	2b07      	cmp	r3, #7
    8228:	ddf2      	ble.n	8210 <_svfprintf_r+0xe28>
    822a:	003a      	movs	r2, r7
    822c:	9906      	ldr	r1, [sp, #24]
    822e:	0020      	movs	r0, r4
    8230:	f000 fea8 	bl	8f84 <__ssprint_r>
    8234:	2800      	cmp	r0, #0
    8236:	d001      	beq.n	823c <_svfprintf_r+0xe54>
    8238:	f7ff f95d 	bl	74f6 <_svfprintf_r+0x10e>
    823c:	68b9      	ldr	r1, [r7, #8]
    823e:	687b      	ldr	r3, [r7, #4]
    8240:	aa32      	add	r2, sp, #200	; 0xc8
    8242:	e7e6      	b.n	8212 <_svfprintf_r+0xe2a>
    8244:	9a19      	ldr	r2, [sp, #100]	; 0x64
    8246:	6032      	str	r2, [r6, #0]
    8248:	9a18      	ldr	r2, [sp, #96]	; 0x60
    824a:	4694      	mov	ip, r2
    824c:	6072      	str	r2, [r6, #4]
    824e:	687a      	ldr	r2, [r7, #4]
    8250:	4464      	add	r4, ip
    8252:	3201      	adds	r2, #1
    8254:	60bc      	str	r4, [r7, #8]
    8256:	607a      	str	r2, [r7, #4]
    8258:	2a07      	cmp	r2, #7
    825a:	dd00      	ble.n	825e <_svfprintf_r+0xe76>
    825c:	e230      	b.n	86c0 <_svfprintf_r+0x12d8>
    825e:	3608      	adds	r6, #8
    8260:	e7a6      	b.n	81b0 <_svfprintf_r+0xdc8>
    8262:	003a      	movs	r2, r7
    8264:	9906      	ldr	r1, [sp, #24]
    8266:	9809      	ldr	r0, [sp, #36]	; 0x24
    8268:	f000 fe8c 	bl	8f84 <__ssprint_r>
    826c:	2800      	cmp	r0, #0
    826e:	d001      	beq.n	8274 <_svfprintf_r+0xe8c>
    8270:	f7ff f941 	bl	74f6 <_svfprintf_r+0x10e>
    8274:	68bc      	ldr	r4, [r7, #8]
    8276:	687b      	ldr	r3, [r7, #4]
    8278:	ae32      	add	r6, sp, #200	; 0xc8
    827a:	e513      	b.n	7ca4 <_svfprintf_r+0x8bc>
    827c:	003a      	movs	r2, r7
    827e:	9906      	ldr	r1, [sp, #24]
    8280:	9809      	ldr	r0, [sp, #36]	; 0x24
    8282:	f000 fe7f 	bl	8f84 <__ssprint_r>
    8286:	2800      	cmp	r0, #0
    8288:	d001      	beq.n	828e <_svfprintf_r+0xea6>
    828a:	f7ff f934 	bl	74f6 <_svfprintf_r+0x10e>
    828e:	687b      	ldr	r3, [r7, #4]
    8290:	68bc      	ldr	r4, [r7, #8]
    8292:	4698      	mov	r8, r3
    8294:	ae32      	add	r6, sp, #200	; 0xc8
    8296:	e513      	b.n	7cc0 <_svfprintf_r+0x8d8>
    8298:	0000a160 	.word	0x0000a160
    829c:	2307      	movs	r3, #7
    829e:	3207      	adds	r2, #7
    82a0:	439a      	bics	r2, r3
    82a2:	3301      	adds	r3, #1
    82a4:	469c      	mov	ip, r3
    82a6:	4494      	add	ip, r2
    82a8:	4663      	mov	r3, ip
    82aa:	930f      	str	r3, [sp, #60]	; 0x3c
    82ac:	6853      	ldr	r3, [r2, #4]
    82ae:	6812      	ldr	r2, [r2, #0]
    82b0:	930d      	str	r3, [sp, #52]	; 0x34
    82b2:	920c      	str	r2, [sp, #48]	; 0x30
    82b4:	2b00      	cmp	r3, #0
    82b6:	db01      	blt.n	82bc <_svfprintf_r+0xed4>
    82b8:	f7ff f97a 	bl	75b0 <_svfprintf_r+0x1c8>
    82bc:	980c      	ldr	r0, [sp, #48]	; 0x30
    82be:	990d      	ldr	r1, [sp, #52]	; 0x34
    82c0:	2300      	movs	r3, #0
    82c2:	4242      	negs	r2, r0
    82c4:	418b      	sbcs	r3, r1
    82c6:	0011      	movs	r1, r2
    82c8:	001a      	movs	r2, r3
    82ca:	232d      	movs	r3, #45	; 0x2d
    82cc:	a816      	add	r0, sp, #88	; 0x58
    82ce:	77c3      	strb	r3, [r0, #31]
    82d0:	0008      	movs	r0, r1
    82d2:	4310      	orrs	r0, r2
    82d4:	910c      	str	r1, [sp, #48]	; 0x30
    82d6:	920d      	str	r2, [sp, #52]	; 0x34
    82d8:	4698      	mov	r8, r3
    82da:	0002      	movs	r2, r0
    82dc:	3b2c      	subs	r3, #44	; 0x2c
    82de:	f7ff f970 	bl	75c2 <_svfprintf_r+0x1da>
    82e2:	003a      	movs	r2, r7
    82e4:	9906      	ldr	r1, [sp, #24]
    82e6:	9809      	ldr	r0, [sp, #36]	; 0x24
    82e8:	f000 fe4c 	bl	8f84 <__ssprint_r>
    82ec:	2800      	cmp	r0, #0
    82ee:	d001      	beq.n	82f4 <_svfprintf_r+0xf0c>
    82f0:	f7ff f901 	bl	74f6 <_svfprintf_r+0x10e>
    82f4:	68bc      	ldr	r4, [r7, #8]
    82f6:	ae32      	add	r6, sp, #200	; 0xc8
    82f8:	e418      	b.n	7b2c <_svfprintf_r+0x744>
    82fa:	9916      	ldr	r1, [sp, #88]	; 0x58
    82fc:	9d15      	ldr	r5, [sp, #84]	; 0x54
    82fe:	000a      	movs	r2, r1
    8300:	0008      	movs	r0, r1
    8302:	002b      	movs	r3, r5
    8304:	0029      	movs	r1, r5
    8306:	f000 fedb 	bl	90c0 <__aeabi_dcmpun>
    830a:	2800      	cmp	r0, #0
    830c:	d000      	beq.n	8310 <_svfprintf_r+0xf28>
    830e:	e2e6      	b.n	88de <_svfprintf_r+0x14f6>
    8310:	4653      	mov	r3, sl
    8312:	3301      	adds	r3, #1
    8314:	d100      	bne.n	8318 <_svfprintf_r+0xf30>
    8316:	e20d      	b.n	8734 <_svfprintf_r+0x134c>
    8318:	2320      	movs	r3, #32
    831a:	9a12      	ldr	r2, [sp, #72]	; 0x48
    831c:	439a      	bics	r2, r3
    831e:	920e      	str	r2, [sp, #56]	; 0x38
    8320:	2a47      	cmp	r2, #71	; 0x47
    8322:	d100      	bne.n	8326 <_svfprintf_r+0xf3e>
    8324:	e11c      	b.n	8560 <_svfprintf_r+0x1178>
    8326:	2380      	movs	r3, #128	; 0x80
    8328:	005b      	lsls	r3, r3, #1
    832a:	4323      	orrs	r3, r4
    832c:	9308      	str	r3, [sp, #32]
    832e:	9b15      	ldr	r3, [sp, #84]	; 0x54
    8330:	2b00      	cmp	r3, #0
    8332:	da00      	bge.n	8336 <_svfprintf_r+0xf4e>
    8334:	e221      	b.n	877a <_svfprintf_r+0x1392>
    8336:	9a16      	ldr	r2, [sp, #88]	; 0x58
    8338:	9307      	str	r3, [sp, #28]
    833a:	2300      	movs	r3, #0
    833c:	4691      	mov	r9, r2
    833e:	9310      	str	r3, [sp, #64]	; 0x40
    8340:	9b12      	ldr	r3, [sp, #72]	; 0x48
    8342:	2b66      	cmp	r3, #102	; 0x66
    8344:	d100      	bne.n	8348 <_svfprintf_r+0xf60>
    8346:	e1fc      	b.n	8742 <_svfprintf_r+0x135a>
    8348:	2b46      	cmp	r3, #70	; 0x46
    834a:	d100      	bne.n	834e <_svfprintf_r+0xf66>
    834c:	e0db      	b.n	8506 <_svfprintf_r+0x111e>
    834e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    8350:	9809      	ldr	r0, [sp, #36]	; 0x24
    8352:	3a45      	subs	r2, #69	; 0x45
    8354:	0013      	movs	r3, r2
    8356:	4259      	negs	r1, r3
    8358:	4159      	adcs	r1, r3
    835a:	ab20      	add	r3, sp, #128	; 0x80
    835c:	000d      	movs	r5, r1
    835e:	9303      	str	r3, [sp, #12]
    8360:	ab1f      	add	r3, sp, #124	; 0x7c
    8362:	9302      	str	r3, [sp, #8]
    8364:	2302      	movs	r3, #2
    8366:	aa23      	add	r2, sp, #140	; 0x8c
    8368:	4455      	add	r5, sl
    836a:	921b      	str	r2, [sp, #108]	; 0x6c
    836c:	9204      	str	r2, [sp, #16]
    836e:	9300      	str	r3, [sp, #0]
    8370:	9501      	str	r5, [sp, #4]
    8372:	9b07      	ldr	r3, [sp, #28]
    8374:	464a      	mov	r2, r9
    8376:	f7fd f8bb 	bl	54f0 <_dtoa_r>
    837a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    837c:	9011      	str	r0, [sp, #68]	; 0x44
    837e:	2b67      	cmp	r3, #103	; 0x67
    8380:	d000      	beq.n	8384 <_svfprintf_r+0xf9c>
    8382:	e239      	b.n	87f8 <_svfprintf_r+0x1410>
    8384:	9b11      	ldr	r3, [sp, #68]	; 0x44
    8386:	4698      	mov	r8, r3
    8388:	44a8      	add	r8, r5
    838a:	07e3      	lsls	r3, r4, #31
    838c:	d400      	bmi.n	8390 <_svfprintf_r+0xfa8>
    838e:	e28b      	b.n	88a8 <_svfprintf_r+0x14c0>
    8390:	2300      	movs	r3, #0
    8392:	2200      	movs	r2, #0
    8394:	4648      	mov	r0, r9
    8396:	9907      	ldr	r1, [sp, #28]
    8398:	f7fa fac0 	bl	291c <__aeabi_dcmpeq>
    839c:	4643      	mov	r3, r8
    839e:	2800      	cmp	r0, #0
    83a0:	d10a      	bne.n	83b8 <_svfprintf_r+0xfd0>
    83a2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    83a4:	4543      	cmp	r3, r8
    83a6:	d207      	bcs.n	83b8 <_svfprintf_r+0xfd0>
    83a8:	2130      	movs	r1, #48	; 0x30
    83aa:	4640      	mov	r0, r8
    83ac:	1c5a      	adds	r2, r3, #1
    83ae:	9223      	str	r2, [sp, #140]	; 0x8c
    83b0:	7019      	strb	r1, [r3, #0]
    83b2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    83b4:	4298      	cmp	r0, r3
    83b6:	d8f9      	bhi.n	83ac <_svfprintf_r+0xfc4>
    83b8:	9a11      	ldr	r2, [sp, #68]	; 0x44
    83ba:	1a9b      	subs	r3, r3, r2
    83bc:	9314      	str	r3, [sp, #80]	; 0x50
    83be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    83c0:	2b47      	cmp	r3, #71	; 0x47
    83c2:	d100      	bne.n	83c6 <_svfprintf_r+0xfde>
    83c4:	e0f6      	b.n	85b4 <_svfprintf_r+0x11cc>
    83c6:	9b12      	ldr	r3, [sp, #72]	; 0x48
    83c8:	2b65      	cmp	r3, #101	; 0x65
    83ca:	dc00      	bgt.n	83ce <_svfprintf_r+0xfe6>
    83cc:	e226      	b.n	881c <_svfprintf_r+0x1434>
    83ce:	9b12      	ldr	r3, [sp, #72]	; 0x48
    83d0:	2b66      	cmp	r3, #102	; 0x66
    83d2:	d100      	bne.n	83d6 <_svfprintf_r+0xfee>
    83d4:	e1f4      	b.n	87c0 <_svfprintf_r+0x13d8>
    83d6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    83d8:	9313      	str	r3, [sp, #76]	; 0x4c
    83da:	9b14      	ldr	r3, [sp, #80]	; 0x50
    83dc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    83de:	0019      	movs	r1, r3
    83e0:	4291      	cmp	r1, r2
    83e2:	dd00      	ble.n	83e6 <_svfprintf_r+0xffe>
    83e4:	e1d4      	b.n	8790 <_svfprintf_r+0x13a8>
    83e6:	07e3      	lsls	r3, r4, #31
    83e8:	d500      	bpl.n	83ec <_svfprintf_r+0x1004>
    83ea:	e249      	b.n	8880 <_svfprintf_r+0x1498>
    83ec:	43d3      	mvns	r3, r2
    83ee:	17db      	asrs	r3, r3, #31
    83f0:	0011      	movs	r1, r2
    83f2:	401a      	ands	r2, r3
    83f4:	2367      	movs	r3, #103	; 0x67
    83f6:	9207      	str	r2, [sp, #28]
    83f8:	910e      	str	r1, [sp, #56]	; 0x38
    83fa:	9312      	str	r3, [sp, #72]	; 0x48
    83fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
    83fe:	2b00      	cmp	r3, #0
    8400:	d000      	beq.n	8404 <_svfprintf_r+0x101c>
    8402:	e0cf      	b.n	85a4 <_svfprintf_r+0x11bc>
    8404:	ab16      	add	r3, sp, #88	; 0x58
    8406:	7fdb      	ldrb	r3, [r3, #31]
    8408:	4698      	mov	r8, r3
    840a:	2300      	movs	r3, #0
    840c:	469a      	mov	sl, r3
    840e:	f7ff f903 	bl	7618 <_svfprintf_r+0x230>
    8412:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    8414:	990a      	ldr	r1, [sp, #40]	; 0x28
    8416:	6813      	ldr	r3, [r2, #0]
    8418:	6019      	str	r1, [r3, #0]
    841a:	0013      	movs	r3, r2
    841c:	3304      	adds	r3, #4
    841e:	930f      	str	r3, [sp, #60]	; 0x3c
    8420:	f7ff f80d 	bl	743e <_svfprintf_r+0x56>
    8424:	003a      	movs	r2, r7
    8426:	9906      	ldr	r1, [sp, #24]
    8428:	9809      	ldr	r0, [sp, #36]	; 0x24
    842a:	f000 fdab 	bl	8f84 <__ssprint_r>
    842e:	2800      	cmp	r0, #0
    8430:	d001      	beq.n	8436 <_svfprintf_r+0x104e>
    8432:	f7ff f860 	bl	74f6 <_svfprintf_r+0x10e>
    8436:	ae32      	add	r6, sp, #200	; 0xc8
    8438:	e48e      	b.n	7d58 <_svfprintf_r+0x970>
    843a:	4bde      	ldr	r3, [pc, #888]	; (87b4 <_svfprintf_r+0x13cc>)
    843c:	3401      	adds	r4, #1
    843e:	6033      	str	r3, [r6, #0]
    8440:	2301      	movs	r3, #1
    8442:	6073      	str	r3, [r6, #4]
    8444:	687b      	ldr	r3, [r7, #4]
    8446:	60bc      	str	r4, [r7, #8]
    8448:	3301      	adds	r3, #1
    844a:	607b      	str	r3, [r7, #4]
    844c:	2b07      	cmp	r3, #7
    844e:	dc7a      	bgt.n	8546 <_svfprintf_r+0x115e>
    8450:	3608      	adds	r6, #8
    8452:	2800      	cmp	r0, #0
    8454:	d107      	bne.n	8466 <_svfprintf_r+0x107e>
    8456:	9b14      	ldr	r3, [sp, #80]	; 0x50
    8458:	2b00      	cmp	r3, #0
    845a:	d104      	bne.n	8466 <_svfprintf_r+0x107e>
    845c:	9b08      	ldr	r3, [sp, #32]
    845e:	07db      	lsls	r3, r3, #31
    8460:	d401      	bmi.n	8466 <_svfprintf_r+0x107e>
    8462:	f7ff fbb7 	bl	7bd4 <_svfprintf_r+0x7ec>
    8466:	9b19      	ldr	r3, [sp, #100]	; 0x64
    8468:	6033      	str	r3, [r6, #0]
    846a:	9b18      	ldr	r3, [sp, #96]	; 0x60
    846c:	1919      	adds	r1, r3, r4
    846e:	6073      	str	r3, [r6, #4]
    8470:	687b      	ldr	r3, [r7, #4]
    8472:	60b9      	str	r1, [r7, #8]
    8474:	3301      	adds	r3, #1
    8476:	607b      	str	r3, [r7, #4]
    8478:	2b07      	cmp	r3, #7
    847a:	dd00      	ble.n	847e <_svfprintf_r+0x1096>
    847c:	e1f2      	b.n	8864 <_svfprintf_r+0x147c>
    847e:	0032      	movs	r2, r6
    8480:	3208      	adds	r2, #8
    8482:	2800      	cmp	r0, #0
    8484:	da00      	bge.n	8488 <_svfprintf_r+0x10a0>
    8486:	e1cc      	b.n	8822 <_svfprintf_r+0x143a>
    8488:	9811      	ldr	r0, [sp, #68]	; 0x44
    848a:	3301      	adds	r3, #1
    848c:	6010      	str	r0, [r2, #0]
    848e:	9814      	ldr	r0, [sp, #80]	; 0x50
    8490:	607b      	str	r3, [r7, #4]
    8492:	1844      	adds	r4, r0, r1
    8494:	6050      	str	r0, [r2, #4]
    8496:	60bc      	str	r4, [r7, #8]
    8498:	2b07      	cmp	r3, #7
    849a:	dd00      	ble.n	849e <_svfprintf_r+0x10b6>
    849c:	e437      	b.n	7d0e <_svfprintf_r+0x926>
    849e:	3208      	adds	r2, #8
    84a0:	0016      	movs	r6, r2
    84a2:	f7ff fb97 	bl	7bd4 <_svfprintf_r+0x7ec>
    84a6:	990f      	ldr	r1, [sp, #60]	; 0x3c
    84a8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    84aa:	680b      	ldr	r3, [r1, #0]
    84ac:	601a      	str	r2, [r3, #0]
    84ae:	17d2      	asrs	r2, r2, #31
    84b0:	605a      	str	r2, [r3, #4]
    84b2:	000b      	movs	r3, r1
    84b4:	3304      	adds	r3, #4
    84b6:	930f      	str	r3, [sp, #60]	; 0x3c
    84b8:	f7fe ffc1 	bl	743e <_svfprintf_r+0x56>
    84bc:	464b      	mov	r3, r9
    84be:	3101      	adds	r1, #1
    84c0:	431c      	orrs	r4, r3
    84c2:	780b      	ldrb	r3, [r1, #0]
    84c4:	f7fe fff4 	bl	74b0 <_svfprintf_r+0xc8>
    84c8:	4bbb      	ldr	r3, [pc, #748]	; (87b8 <_svfprintf_r+0x13d0>)
    84ca:	9311      	str	r3, [sp, #68]	; 0x44
    84cc:	f7ff f937 	bl	773e <_svfprintf_r+0x356>
    84d0:	003a      	movs	r2, r7
    84d2:	9906      	ldr	r1, [sp, #24]
    84d4:	9809      	ldr	r0, [sp, #36]	; 0x24
    84d6:	f000 fd55 	bl	8f84 <__ssprint_r>
    84da:	2800      	cmp	r0, #0
    84dc:	d001      	beq.n	84e2 <_svfprintf_r+0x10fa>
    84de:	f7ff f80a 	bl	74f6 <_svfprintf_r+0x10e>
    84e2:	68bc      	ldr	r4, [r7, #8]
    84e4:	ae32      	add	r6, sp, #200	; 0xc8
    84e6:	e5f1      	b.n	80cc <_svfprintf_r+0xce4>
    84e8:	2140      	movs	r1, #64	; 0x40
    84ea:	9809      	ldr	r0, [sp, #36]	; 0x24
    84ec:	f7fe f91e 	bl	672c <_malloc_r>
    84f0:	9b06      	ldr	r3, [sp, #24]
    84f2:	6018      	str	r0, [r3, #0]
    84f4:	6118      	str	r0, [r3, #16]
    84f6:	2800      	cmp	r0, #0
    84f8:	d100      	bne.n	84fc <_svfprintf_r+0x1114>
    84fa:	e24f      	b.n	899c <_svfprintf_r+0x15b4>
    84fc:	2340      	movs	r3, #64	; 0x40
    84fe:	9a06      	ldr	r2, [sp, #24]
    8500:	6153      	str	r3, [r2, #20]
    8502:	f7fe ff8e 	bl	7422 <_svfprintf_r+0x3a>
    8506:	ab23      	add	r3, sp, #140	; 0x8c
    8508:	931b      	str	r3, [sp, #108]	; 0x6c
    850a:	9304      	str	r3, [sp, #16]
    850c:	ab20      	add	r3, sp, #128	; 0x80
    850e:	9303      	str	r3, [sp, #12]
    8510:	ab1f      	add	r3, sp, #124	; 0x7c
    8512:	9302      	str	r3, [sp, #8]
    8514:	4653      	mov	r3, sl
    8516:	9301      	str	r3, [sp, #4]
    8518:	2303      	movs	r3, #3
    851a:	464a      	mov	r2, r9
    851c:	9300      	str	r3, [sp, #0]
    851e:	9809      	ldr	r0, [sp, #36]	; 0x24
    8520:	9b07      	ldr	r3, [sp, #28]
    8522:	f7fc ffe5 	bl	54f0 <_dtoa_r>
    8526:	4655      	mov	r5, sl
    8528:	9011      	str	r0, [sp, #68]	; 0x44
    852a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    852c:	4698      	mov	r8, r3
    852e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    8530:	44a8      	add	r8, r5
    8532:	2b46      	cmp	r3, #70	; 0x46
    8534:	d000      	beq.n	8538 <_svfprintf_r+0x1150>
    8536:	e72b      	b.n	8390 <_svfprintf_r+0xfa8>
    8538:	9b11      	ldr	r3, [sp, #68]	; 0x44
    853a:	781b      	ldrb	r3, [r3, #0]
    853c:	2b30      	cmp	r3, #48	; 0x30
    853e:	d016      	beq.n	856e <_svfprintf_r+0x1186>
    8540:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    8542:	4498      	add	r8, r3
    8544:	e724      	b.n	8390 <_svfprintf_r+0xfa8>
    8546:	003a      	movs	r2, r7
    8548:	9906      	ldr	r1, [sp, #24]
    854a:	9809      	ldr	r0, [sp, #36]	; 0x24
    854c:	f000 fd1a 	bl	8f84 <__ssprint_r>
    8550:	2800      	cmp	r0, #0
    8552:	d001      	beq.n	8558 <_svfprintf_r+0x1170>
    8554:	f7fe ffcf 	bl	74f6 <_svfprintf_r+0x10e>
    8558:	981f      	ldr	r0, [sp, #124]	; 0x7c
    855a:	68bc      	ldr	r4, [r7, #8]
    855c:	ae32      	add	r6, sp, #200	; 0xc8
    855e:	e778      	b.n	8452 <_svfprintf_r+0x106a>
    8560:	4653      	mov	r3, sl
    8562:	2b00      	cmp	r3, #0
    8564:	d000      	beq.n	8568 <_svfprintf_r+0x1180>
    8566:	e6de      	b.n	8326 <_svfprintf_r+0xf3e>
    8568:	3301      	adds	r3, #1
    856a:	469a      	mov	sl, r3
    856c:	e6db      	b.n	8326 <_svfprintf_r+0xf3e>
    856e:	2200      	movs	r2, #0
    8570:	2300      	movs	r3, #0
    8572:	4648      	mov	r0, r9
    8574:	9907      	ldr	r1, [sp, #28]
    8576:	f7fa f9d1 	bl	291c <__aeabi_dcmpeq>
    857a:	2800      	cmp	r0, #0
    857c:	d1e0      	bne.n	8540 <_svfprintf_r+0x1158>
    857e:	2301      	movs	r3, #1
    8580:	1b5b      	subs	r3, r3, r5
    8582:	931f      	str	r3, [sp, #124]	; 0x7c
    8584:	4498      	add	r8, r3
    8586:	e703      	b.n	8390 <_svfprintf_r+0xfa8>
    8588:	9a11      	ldr	r2, [sp, #68]	; 0x44
    858a:	ab32      	add	r3, sp, #200	; 0xc8
    858c:	1a9b      	subs	r3, r3, r2
    858e:	930e      	str	r3, [sp, #56]	; 0x38
    8590:	f7ff f83a 	bl	7608 <_svfprintf_r+0x220>
    8594:	9811      	ldr	r0, [sp, #68]	; 0x44
    8596:	f7fc fe35 	bl	5204 <strlen>
    859a:	0002      	movs	r2, r0
    859c:	900e      	str	r0, [sp, #56]	; 0x38
    859e:	0003      	movs	r3, r0
    85a0:	f7ff f9cd 	bl	793e <_svfprintf_r+0x556>
    85a4:	232d      	movs	r3, #45	; 0x2d
    85a6:	aa16      	add	r2, sp, #88	; 0x58
    85a8:	77d3      	strb	r3, [r2, #31]
    85aa:	4698      	mov	r8, r3
    85ac:	2300      	movs	r3, #0
    85ae:	469a      	mov	sl, r3
    85b0:	f7ff f835 	bl	761e <_svfprintf_r+0x236>
    85b4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    85b6:	9313      	str	r3, [sp, #76]	; 0x4c
    85b8:	1cda      	adds	r2, r3, #3
    85ba:	db02      	blt.n	85c2 <_svfprintf_r+0x11da>
    85bc:	459a      	cmp	sl, r3
    85be:	db00      	blt.n	85c2 <_svfprintf_r+0x11da>
    85c0:	e70b      	b.n	83da <_svfprintf_r+0xff2>
    85c2:	9b12      	ldr	r3, [sp, #72]	; 0x48
    85c4:	3b02      	subs	r3, #2
    85c6:	9312      	str	r3, [sp, #72]	; 0x48
    85c8:	222c      	movs	r2, #44	; 0x2c
    85ca:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    85cc:	2148      	movs	r1, #72	; 0x48
    85ce:	1e5d      	subs	r5, r3, #1
    85d0:	ab16      	add	r3, sp, #88	; 0x58
    85d2:	189b      	adds	r3, r3, r2
    85d4:	466a      	mov	r2, sp
    85d6:	1852      	adds	r2, r2, r1
    85d8:	7812      	ldrb	r2, [r2, #0]
    85da:	951f      	str	r5, [sp, #124]	; 0x7c
    85dc:	701a      	strb	r2, [r3, #0]
    85de:	2d00      	cmp	r5, #0
    85e0:	da00      	bge.n	85e4 <_svfprintf_r+0x11fc>
    85e2:	e1a4      	b.n	892e <_svfprintf_r+0x1546>
    85e4:	212d      	movs	r1, #45	; 0x2d
    85e6:	232b      	movs	r3, #43	; 0x2b
    85e8:	aa16      	add	r2, sp, #88	; 0x58
    85ea:	1852      	adds	r2, r2, r1
    85ec:	7013      	strb	r3, [r2, #0]
    85ee:	2d09      	cmp	r5, #9
    85f0:	dc00      	bgt.n	85f4 <_svfprintf_r+0x120c>
    85f2:	e14c      	b.n	888e <_svfprintf_r+0x14a6>
    85f4:	aa16      	add	r2, sp, #88	; 0x58
    85f6:	233b      	movs	r3, #59	; 0x3b
    85f8:	4694      	mov	ip, r2
    85fa:	4463      	add	r3, ip
    85fc:	469a      	mov	sl, r3
    85fe:	46b1      	mov	r9, r6
    8600:	46a0      	mov	r8, r4
    8602:	4656      	mov	r6, sl
    8604:	e000      	b.n	8608 <_svfprintf_r+0x1220>
    8606:	0026      	movs	r6, r4
    8608:	0028      	movs	r0, r5
    860a:	210a      	movs	r1, #10
    860c:	f7fa f970 	bl	28f0 <__aeabi_idivmod>
    8610:	1e74      	subs	r4, r6, #1
    8612:	3130      	adds	r1, #48	; 0x30
    8614:	7021      	strb	r1, [r4, #0]
    8616:	0028      	movs	r0, r5
    8618:	210a      	movs	r1, #10
    861a:	f7fa f883 	bl	2724 <__divsi3>
    861e:	0005      	movs	r5, r0
    8620:	2809      	cmp	r0, #9
    8622:	dcf0      	bgt.n	8606 <_svfprintf_r+0x121e>
    8624:	0023      	movs	r3, r4
    8626:	4644      	mov	r4, r8
    8628:	46b0      	mov	r8, r6
    862a:	464e      	mov	r6, r9
    862c:	4699      	mov	r9, r3
    862e:	0003      	movs	r3, r0
    8630:	3330      	adds	r3, #48	; 0x30
    8632:	b2d8      	uxtb	r0, r3
    8634:	4643      	mov	r3, r8
    8636:	3b02      	subs	r3, #2
    8638:	7018      	strb	r0, [r3, #0]
    863a:	459a      	cmp	sl, r3
    863c:	d800      	bhi.n	8640 <_svfprintf_r+0x1258>
    863e:	e1b4      	b.n	89aa <_svfprintf_r+0x15c2>
    8640:	4642      	mov	r2, r8
    8642:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    8644:	4645      	mov	r5, r8
    8646:	1a99      	subs	r1, r3, r2
    8648:	2301      	movs	r3, #1
    864a:	3107      	adds	r1, #7
    864c:	425b      	negs	r3, r3
    864e:	e001      	b.n	8654 <_svfprintf_r+0x126c>
    8650:	5ce8      	ldrb	r0, [r5, r3]
    8652:	3301      	adds	r3, #1
    8654:	aa21      	add	r2, sp, #132	; 0x84
    8656:	18d2      	adds	r2, r2, r3
    8658:	70d0      	strb	r0, [r2, #3]
    865a:	428b      	cmp	r3, r1
    865c:	d1f8      	bne.n	8650 <_svfprintf_r+0x1268>
    865e:	a916      	add	r1, sp, #88	; 0x58
    8660:	468c      	mov	ip, r1
    8662:	222e      	movs	r2, #46	; 0x2e
    8664:	464b      	mov	r3, r9
    8666:	4462      	add	r2, ip
    8668:	4694      	mov	ip, r2
    866a:	1afb      	subs	r3, r7, r3
    866c:	4463      	add	r3, ip
    866e:	aa21      	add	r2, sp, #132	; 0x84
    8670:	9914      	ldr	r1, [sp, #80]	; 0x50
    8672:	1a9b      	subs	r3, r3, r2
    8674:	469c      	mov	ip, r3
    8676:	000a      	movs	r2, r1
    8678:	4462      	add	r2, ip
    867a:	931a      	str	r3, [sp, #104]	; 0x68
    867c:	920e      	str	r2, [sp, #56]	; 0x38
    867e:	2901      	cmp	r1, #1
    8680:	dc00      	bgt.n	8684 <_svfprintf_r+0x129c>
    8682:	e145      	b.n	8910 <_svfprintf_r+0x1528>
    8684:	9a18      	ldr	r2, [sp, #96]	; 0x60
    8686:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    8688:	4694      	mov	ip, r2
    868a:	4463      	add	r3, ip
    868c:	001a      	movs	r2, r3
    868e:	930e      	str	r3, [sp, #56]	; 0x38
    8690:	43db      	mvns	r3, r3
    8692:	17db      	asrs	r3, r3, #31
    8694:	401a      	ands	r2, r3
    8696:	2300      	movs	r3, #0
    8698:	9207      	str	r2, [sp, #28]
    869a:	9313      	str	r3, [sp, #76]	; 0x4c
    869c:	e6ae      	b.n	83fc <_svfprintf_r+0x1014>
    869e:	2301      	movs	r3, #1
    86a0:	425b      	negs	r3, r3
    86a2:	930a      	str	r3, [sp, #40]	; 0x28
    86a4:	f7fe ff2d 	bl	7502 <_svfprintf_r+0x11a>
    86a8:	003a      	movs	r2, r7
    86aa:	9906      	ldr	r1, [sp, #24]
    86ac:	9809      	ldr	r0, [sp, #36]	; 0x24
    86ae:	f000 fc69 	bl	8f84 <__ssprint_r>
    86b2:	2800      	cmp	r0, #0
    86b4:	d001      	beq.n	86ba <_svfprintf_r+0x12d2>
    86b6:	f7fe ff1e 	bl	74f6 <_svfprintf_r+0x10e>
    86ba:	68bc      	ldr	r4, [r7, #8]
    86bc:	ae32      	add	r6, sp, #200	; 0xc8
    86be:	e43c      	b.n	7f3a <_svfprintf_r+0xb52>
    86c0:	003a      	movs	r2, r7
    86c2:	9906      	ldr	r1, [sp, #24]
    86c4:	9809      	ldr	r0, [sp, #36]	; 0x24
    86c6:	f000 fc5d 	bl	8f84 <__ssprint_r>
    86ca:	2800      	cmp	r0, #0
    86cc:	d001      	beq.n	86d2 <_svfprintf_r+0x12ea>
    86ce:	f7fe ff12 	bl	74f6 <_svfprintf_r+0x10e>
    86d2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    86d4:	68bc      	ldr	r4, [r7, #8]
    86d6:	ae32      	add	r6, sp, #200	; 0xc8
    86d8:	e56a      	b.n	81b0 <_svfprintf_r+0xdc8>
    86da:	003a      	movs	r2, r7
    86dc:	9906      	ldr	r1, [sp, #24]
    86de:	9809      	ldr	r0, [sp, #36]	; 0x24
    86e0:	f000 fc50 	bl	8f84 <__ssprint_r>
    86e4:	2800      	cmp	r0, #0
    86e6:	d001      	beq.n	86ec <_svfprintf_r+0x1304>
    86e8:	f7fe ff05 	bl	74f6 <_svfprintf_r+0x10e>
    86ec:	68bc      	ldr	r4, [r7, #8]
    86ee:	ae32      	add	r6, sp, #200	; 0xc8
    86f0:	e557      	b.n	81a2 <_svfprintf_r+0xdba>
    86f2:	003a      	movs	r2, r7
    86f4:	9906      	ldr	r1, [sp, #24]
    86f6:	9809      	ldr	r0, [sp, #36]	; 0x24
    86f8:	f000 fc44 	bl	8f84 <__ssprint_r>
    86fc:	2800      	cmp	r0, #0
    86fe:	d001      	beq.n	8704 <_svfprintf_r+0x131c>
    8700:	f7fe fef9 	bl	74f6 <_svfprintf_r+0x10e>
    8704:	9b14      	ldr	r3, [sp, #80]	; 0x50
    8706:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
    8708:	68bc      	ldr	r4, [r7, #8]
    870a:	1a9b      	subs	r3, r3, r2
    870c:	ae32      	add	r6, sp, #200	; 0xc8
    870e:	e56a      	b.n	81e6 <_svfprintf_r+0xdfe>
    8710:	4653      	mov	r3, sl
    8712:	9307      	str	r3, [sp, #28]
    8714:	2b06      	cmp	r3, #6
    8716:	d901      	bls.n	871c <_svfprintf_r+0x1334>
    8718:	2306      	movs	r3, #6
    871a:	9307      	str	r3, [sp, #28]
    871c:	9b07      	ldr	r3, [sp, #28]
    871e:	950f      	str	r5, [sp, #60]	; 0x3c
    8720:	930e      	str	r3, [sp, #56]	; 0x38
    8722:	2300      	movs	r3, #0
    8724:	4698      	mov	r8, r3
    8726:	469a      	mov	sl, r3
    8728:	9313      	str	r3, [sp, #76]	; 0x4c
    872a:	4b24      	ldr	r3, [pc, #144]	; (87bc <_svfprintf_r+0x13d4>)
    872c:	9408      	str	r4, [sp, #32]
    872e:	9311      	str	r3, [sp, #68]	; 0x44
    8730:	f7fe ff78 	bl	7624 <_svfprintf_r+0x23c>
    8734:	2320      	movs	r3, #32
    8736:	9a12      	ldr	r2, [sp, #72]	; 0x48
    8738:	439a      	bics	r2, r3
    873a:	3b1a      	subs	r3, #26
    873c:	920e      	str	r2, [sp, #56]	; 0x38
    873e:	469a      	mov	sl, r3
    8740:	e5f1      	b.n	8326 <_svfprintf_r+0xf3e>
    8742:	ab23      	add	r3, sp, #140	; 0x8c
    8744:	931b      	str	r3, [sp, #108]	; 0x6c
    8746:	9304      	str	r3, [sp, #16]
    8748:	ab20      	add	r3, sp, #128	; 0x80
    874a:	9303      	str	r3, [sp, #12]
    874c:	ab1f      	add	r3, sp, #124	; 0x7c
    874e:	9302      	str	r3, [sp, #8]
    8750:	4653      	mov	r3, sl
    8752:	9301      	str	r3, [sp, #4]
    8754:	2303      	movs	r3, #3
    8756:	464a      	mov	r2, r9
    8758:	9300      	str	r3, [sp, #0]
    875a:	9809      	ldr	r0, [sp, #36]	; 0x24
    875c:	9b07      	ldr	r3, [sp, #28]
    875e:	f7fc fec7 	bl	54f0 <_dtoa_r>
    8762:	0003      	movs	r3, r0
    8764:	4453      	add	r3, sl
    8766:	9011      	str	r0, [sp, #68]	; 0x44
    8768:	4698      	mov	r8, r3
    876a:	4655      	mov	r5, sl
    876c:	e6e4      	b.n	8538 <_svfprintf_r+0x1150>
    876e:	232d      	movs	r3, #45	; 0x2d
    8770:	aa16      	add	r2, sp, #88	; 0x58
    8772:	77d3      	strb	r3, [r2, #31]
    8774:	4698      	mov	r8, r3
    8776:	f7fe ffdb 	bl	7730 <_svfprintf_r+0x348>
    877a:	2280      	movs	r2, #128	; 0x80
    877c:	0612      	lsls	r2, r2, #24
    877e:	4694      	mov	ip, r2
    8780:	9b16      	ldr	r3, [sp, #88]	; 0x58
    8782:	4699      	mov	r9, r3
    8784:	9b15      	ldr	r3, [sp, #84]	; 0x54
    8786:	4463      	add	r3, ip
    8788:	9307      	str	r3, [sp, #28]
    878a:	232d      	movs	r3, #45	; 0x2d
    878c:	9310      	str	r3, [sp, #64]	; 0x40
    878e:	e5d7      	b.n	8340 <_svfprintf_r+0xf58>
    8790:	9a18      	ldr	r2, [sp, #96]	; 0x60
    8792:	9b14      	ldr	r3, [sp, #80]	; 0x50
    8794:	4694      	mov	ip, r2
    8796:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    8798:	4463      	add	r3, ip
    879a:	930e      	str	r3, [sp, #56]	; 0x38
    879c:	2a00      	cmp	r2, #0
    879e:	dc00      	bgt.n	87a2 <_svfprintf_r+0x13ba>
    87a0:	e0ce      	b.n	8940 <_svfprintf_r+0x1558>
    87a2:	001a      	movs	r2, r3
    87a4:	43db      	mvns	r3, r3
    87a6:	17db      	asrs	r3, r3, #31
    87a8:	401a      	ands	r2, r3
    87aa:	2367      	movs	r3, #103	; 0x67
    87ac:	9207      	str	r2, [sp, #28]
    87ae:	9312      	str	r3, [sp, #72]	; 0x48
    87b0:	e624      	b.n	83fc <_svfprintf_r+0x1014>
    87b2:	46c0      	nop			; (mov r8, r8)
    87b4:	00009ea8 	.word	0x00009ea8
    87b8:	0000a114 	.word	0x0000a114
    87bc:	0000a148 	.word	0x0000a148
    87c0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    87c2:	9313      	str	r3, [sp, #76]	; 0x4c
    87c4:	2b00      	cmp	r3, #0
    87c6:	dc00      	bgt.n	87ca <_svfprintf_r+0x13e2>
    87c8:	e0d5      	b.n	8976 <_svfprintf_r+0x158e>
    87ca:	4652      	mov	r2, sl
    87cc:	2a00      	cmp	r2, #0
    87ce:	d000      	beq.n	87d2 <_svfprintf_r+0x13ea>
    87d0:	e092      	b.n	88f8 <_svfprintf_r+0x1510>
    87d2:	07e2      	lsls	r2, r4, #31
    87d4:	d500      	bpl.n	87d8 <_svfprintf_r+0x13f0>
    87d6:	e08f      	b.n	88f8 <_svfprintf_r+0x1510>
    87d8:	9307      	str	r3, [sp, #28]
    87da:	930e      	str	r3, [sp, #56]	; 0x38
    87dc:	e60e      	b.n	83fc <_svfprintf_r+0x1014>
    87de:	ab16      	add	r3, sp, #88	; 0x58
    87e0:	7fdb      	ldrb	r3, [r3, #31]
    87e2:	950f      	str	r5, [sp, #60]	; 0x3c
    87e4:	4698      	mov	r8, r3
    87e6:	4653      	mov	r3, sl
    87e8:	9307      	str	r3, [sp, #28]
    87ea:	930e      	str	r3, [sp, #56]	; 0x38
    87ec:	2300      	movs	r3, #0
    87ee:	9408      	str	r4, [sp, #32]
    87f0:	469a      	mov	sl, r3
    87f2:	9313      	str	r3, [sp, #76]	; 0x4c
    87f4:	f7fe ff10 	bl	7618 <_svfprintf_r+0x230>
    87f8:	9b11      	ldr	r3, [sp, #68]	; 0x44
    87fa:	4698      	mov	r8, r3
    87fc:	9b12      	ldr	r3, [sp, #72]	; 0x48
    87fe:	44a8      	add	r8, r5
    8800:	2b47      	cmp	r3, #71	; 0x47
    8802:	d000      	beq.n	8806 <_svfprintf_r+0x141e>
    8804:	e5c4      	b.n	8390 <_svfprintf_r+0xfa8>
    8806:	07e3      	lsls	r3, r4, #31
    8808:	d500      	bpl.n	880c <_svfprintf_r+0x1424>
    880a:	e68e      	b.n	852a <_svfprintf_r+0x1142>
    880c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    880e:	9a11      	ldr	r2, [sp, #68]	; 0x44
    8810:	1a9b      	subs	r3, r3, r2
    8812:	9314      	str	r3, [sp, #80]	; 0x50
    8814:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    8816:	2b47      	cmp	r3, #71	; 0x47
    8818:	d100      	bne.n	881c <_svfprintf_r+0x1434>
    881a:	e6cb      	b.n	85b4 <_svfprintf_r+0x11cc>
    881c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    881e:	9313      	str	r3, [sp, #76]	; 0x4c
    8820:	e6d2      	b.n	85c8 <_svfprintf_r+0x11e0>
    8822:	4244      	negs	r4, r0
    8824:	3010      	adds	r0, #16
    8826:	db00      	blt.n	882a <_svfprintf_r+0x1442>
    8828:	e0d0      	b.n	89cc <_svfprintf_r+0x15e4>
    882a:	486e      	ldr	r0, [pc, #440]	; (89e4 <_svfprintf_r+0x15fc>)
    882c:	2610      	movs	r6, #16
    882e:	0005      	movs	r5, r0
    8830:	e003      	b.n	883a <_svfprintf_r+0x1452>
    8832:	3208      	adds	r2, #8
    8834:	3c10      	subs	r4, #16
    8836:	2c10      	cmp	r4, #16
    8838:	dd38      	ble.n	88ac <_svfprintf_r+0x14c4>
    883a:	3110      	adds	r1, #16
    883c:	3301      	adds	r3, #1
    883e:	6015      	str	r5, [r2, #0]
    8840:	6056      	str	r6, [r2, #4]
    8842:	60b9      	str	r1, [r7, #8]
    8844:	607b      	str	r3, [r7, #4]
    8846:	2b07      	cmp	r3, #7
    8848:	ddf3      	ble.n	8832 <_svfprintf_r+0x144a>
    884a:	003a      	movs	r2, r7
    884c:	9906      	ldr	r1, [sp, #24]
    884e:	9809      	ldr	r0, [sp, #36]	; 0x24
    8850:	f000 fb98 	bl	8f84 <__ssprint_r>
    8854:	2800      	cmp	r0, #0
    8856:	d001      	beq.n	885c <_svfprintf_r+0x1474>
    8858:	f7fe fe4d 	bl	74f6 <_svfprintf_r+0x10e>
    885c:	68b9      	ldr	r1, [r7, #8]
    885e:	687b      	ldr	r3, [r7, #4]
    8860:	aa32      	add	r2, sp, #200	; 0xc8
    8862:	e7e7      	b.n	8834 <_svfprintf_r+0x144c>
    8864:	003a      	movs	r2, r7
    8866:	9906      	ldr	r1, [sp, #24]
    8868:	9809      	ldr	r0, [sp, #36]	; 0x24
    886a:	f000 fb8b 	bl	8f84 <__ssprint_r>
    886e:	2800      	cmp	r0, #0
    8870:	d001      	beq.n	8876 <_svfprintf_r+0x148e>
    8872:	f7fe fe40 	bl	74f6 <_svfprintf_r+0x10e>
    8876:	981f      	ldr	r0, [sp, #124]	; 0x7c
    8878:	68b9      	ldr	r1, [r7, #8]
    887a:	687b      	ldr	r3, [r7, #4]
    887c:	aa32      	add	r2, sp, #200	; 0xc8
    887e:	e600      	b.n	8482 <_svfprintf_r+0x109a>
    8880:	9a18      	ldr	r2, [sp, #96]	; 0x60
    8882:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    8884:	4694      	mov	ip, r2
    8886:	4463      	add	r3, ip
    8888:	001a      	movs	r2, r3
    888a:	930e      	str	r3, [sp, #56]	; 0x38
    888c:	e78a      	b.n	87a4 <_svfprintf_r+0x13bc>
    888e:	212e      	movs	r1, #46	; 0x2e
    8890:	2330      	movs	r3, #48	; 0x30
    8892:	aa16      	add	r2, sp, #88	; 0x58
    8894:	1852      	adds	r2, r2, r1
    8896:	7013      	strb	r3, [r2, #0]
    8898:	002b      	movs	r3, r5
    889a:	aa16      	add	r2, sp, #88	; 0x58
    889c:	3101      	adds	r1, #1
    889e:	3330      	adds	r3, #48	; 0x30
    88a0:	1852      	adds	r2, r2, r1
    88a2:	7013      	strb	r3, [r2, #0]
    88a4:	ab22      	add	r3, sp, #136	; 0x88
    88a6:	e6e2      	b.n	866e <_svfprintf_r+0x1286>
    88a8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    88aa:	e585      	b.n	83b8 <_svfprintf_r+0xfd0>
    88ac:	46a9      	mov	r9, r5
    88ae:	4648      	mov	r0, r9
    88b0:	1909      	adds	r1, r1, r4
    88b2:	3301      	adds	r3, #1
    88b4:	6010      	str	r0, [r2, #0]
    88b6:	6054      	str	r4, [r2, #4]
    88b8:	60b9      	str	r1, [r7, #8]
    88ba:	3208      	adds	r2, #8
    88bc:	607b      	str	r3, [r7, #4]
    88be:	2b07      	cmp	r3, #7
    88c0:	dc00      	bgt.n	88c4 <_svfprintf_r+0x14dc>
    88c2:	e5e1      	b.n	8488 <_svfprintf_r+0x10a0>
    88c4:	003a      	movs	r2, r7
    88c6:	9906      	ldr	r1, [sp, #24]
    88c8:	9809      	ldr	r0, [sp, #36]	; 0x24
    88ca:	f000 fb5b 	bl	8f84 <__ssprint_r>
    88ce:	2800      	cmp	r0, #0
    88d0:	d001      	beq.n	88d6 <_svfprintf_r+0x14ee>
    88d2:	f7fe fe10 	bl	74f6 <_svfprintf_r+0x10e>
    88d6:	68b9      	ldr	r1, [r7, #8]
    88d8:	687b      	ldr	r3, [r7, #4]
    88da:	aa32      	add	r2, sp, #200	; 0xc8
    88dc:	e5d4      	b.n	8488 <_svfprintf_r+0x10a0>
    88de:	9b15      	ldr	r3, [sp, #84]	; 0x54
    88e0:	2b00      	cmp	r3, #0
    88e2:	db38      	blt.n	8956 <_svfprintf_r+0x156e>
    88e4:	ab16      	add	r3, sp, #88	; 0x58
    88e6:	7fdb      	ldrb	r3, [r3, #31]
    88e8:	4698      	mov	r8, r3
    88ea:	9b12      	ldr	r3, [sp, #72]	; 0x48
    88ec:	2b47      	cmp	r3, #71	; 0x47
    88ee:	dc2e      	bgt.n	894e <_svfprintf_r+0x1566>
    88f0:	4b3d      	ldr	r3, [pc, #244]	; (89e8 <_svfprintf_r+0x1600>)
    88f2:	9311      	str	r3, [sp, #68]	; 0x44
    88f4:	f7fe ff23 	bl	773e <_svfprintf_r+0x356>
    88f8:	9a18      	ldr	r2, [sp, #96]	; 0x60
    88fa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    88fc:	4694      	mov	ip, r2
    88fe:	4463      	add	r3, ip
    8900:	4453      	add	r3, sl
    8902:	001a      	movs	r2, r3
    8904:	930e      	str	r3, [sp, #56]	; 0x38
    8906:	43db      	mvns	r3, r3
    8908:	17db      	asrs	r3, r3, #31
    890a:	401a      	ands	r2, r3
    890c:	9207      	str	r2, [sp, #28]
    890e:	e575      	b.n	83fc <_svfprintf_r+0x1014>
    8910:	2301      	movs	r3, #1
    8912:	4023      	ands	r3, r4
    8914:	9313      	str	r3, [sp, #76]	; 0x4c
    8916:	d000      	beq.n	891a <_svfprintf_r+0x1532>
    8918:	e6b4      	b.n	8684 <_svfprintf_r+0x129c>
    891a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    891c:	43d3      	mvns	r3, r2
    891e:	17db      	asrs	r3, r3, #31
    8920:	401a      	ands	r2, r3
    8922:	9207      	str	r2, [sp, #28]
    8924:	e56a      	b.n	83fc <_svfprintf_r+0x1014>
    8926:	4a2f      	ldr	r2, [pc, #188]	; (89e4 <_svfprintf_r+0x15fc>)
    8928:	687b      	ldr	r3, [r7, #4]
    892a:	4691      	mov	r9, r2
    892c:	e42d      	b.n	818a <_svfprintf_r+0xda2>
    892e:	2301      	movs	r3, #1
    8930:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    8932:	391b      	subs	r1, #27
    8934:	1a9d      	subs	r5, r3, r2
    8936:	aa16      	add	r2, sp, #88	; 0x58
    8938:	332c      	adds	r3, #44	; 0x2c
    893a:	1852      	adds	r2, r2, r1
    893c:	7013      	strb	r3, [r2, #0]
    893e:	e656      	b.n	85ee <_svfprintf_r+0x1206>
    8940:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    8942:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    8944:	1a98      	subs	r0, r3, r2
    8946:	1c43      	adds	r3, r0, #1
    8948:	001a      	movs	r2, r3
    894a:	930e      	str	r3, [sp, #56]	; 0x38
    894c:	e72a      	b.n	87a4 <_svfprintf_r+0x13bc>
    894e:	4b27      	ldr	r3, [pc, #156]	; (89ec <_svfprintf_r+0x1604>)
    8950:	9311      	str	r3, [sp, #68]	; 0x44
    8952:	f7fe fef4 	bl	773e <_svfprintf_r+0x356>
    8956:	232d      	movs	r3, #45	; 0x2d
    8958:	aa16      	add	r2, sp, #88	; 0x58
    895a:	77d3      	strb	r3, [r2, #31]
    895c:	4698      	mov	r8, r3
    895e:	e7c4      	b.n	88ea <_svfprintf_r+0x1502>
    8960:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    8962:	1d1a      	adds	r2, r3, #4
    8964:	681b      	ldr	r3, [r3, #0]
    8966:	469a      	mov	sl, r3
    8968:	2b00      	cmp	r3, #0
    896a:	db36      	blt.n	89da <_svfprintf_r+0x15f2>
    896c:	784b      	ldrb	r3, [r1, #1]
    896e:	920f      	str	r2, [sp, #60]	; 0x3c
    8970:	4659      	mov	r1, fp
    8972:	f7fe fd9d 	bl	74b0 <_svfprintf_r+0xc8>
    8976:	4653      	mov	r3, sl
    8978:	2b00      	cmp	r3, #0
    897a:	d101      	bne.n	8980 <_svfprintf_r+0x1598>
    897c:	07e3      	lsls	r3, r4, #31
    897e:	d503      	bpl.n	8988 <_svfprintf_r+0x15a0>
    8980:	9b18      	ldr	r3, [sp, #96]	; 0x60
    8982:	1c58      	adds	r0, r3, #1
    8984:	0003      	movs	r3, r0
    8986:	e7bb      	b.n	8900 <_svfprintf_r+0x1518>
    8988:	2301      	movs	r3, #1
    898a:	e725      	b.n	87d8 <_svfprintf_r+0x13f0>
    898c:	ab16      	add	r3, sp, #88	; 0x58
    898e:	77d8      	strb	r0, [r3, #31]
    8990:	f7fe ff6c 	bl	786c <_svfprintf_r+0x484>
    8994:	ab16      	add	r3, sp, #88	; 0x58
    8996:	77d8      	strb	r0, [r3, #31]
    8998:	f7ff f814 	bl	79c4 <_svfprintf_r+0x5dc>
    899c:	230c      	movs	r3, #12
    899e:	9a09      	ldr	r2, [sp, #36]	; 0x24
    89a0:	6013      	str	r3, [r2, #0]
    89a2:	3b0d      	subs	r3, #13
    89a4:	930a      	str	r3, [sp, #40]	; 0x28
    89a6:	f7fe fdac 	bl	7502 <_svfprintf_r+0x11a>
    89aa:	aa16      	add	r2, sp, #88	; 0x58
    89ac:	232e      	movs	r3, #46	; 0x2e
    89ae:	4694      	mov	ip, r2
    89b0:	4463      	add	r3, ip
    89b2:	e65c      	b.n	866e <_svfprintf_r+0x1286>
    89b4:	ab16      	add	r3, sp, #88	; 0x58
    89b6:	77d8      	strb	r0, [r3, #31]
    89b8:	f7fe fe85 	bl	76c6 <_svfprintf_r+0x2de>
    89bc:	ab16      	add	r3, sp, #88	; 0x58
    89be:	77d8      	strb	r0, [r3, #31]
    89c0:	f7fe fddd 	bl	757e <_svfprintf_r+0x196>
    89c4:	ab16      	add	r3, sp, #88	; 0x58
    89c6:	77d8      	strb	r0, [r3, #31]
    89c8:	f7ff f87d 	bl	7ac6 <_svfprintf_r+0x6de>
    89cc:	4805      	ldr	r0, [pc, #20]	; (89e4 <_svfprintf_r+0x15fc>)
    89ce:	4681      	mov	r9, r0
    89d0:	e76d      	b.n	88ae <_svfprintf_r+0x14c6>
    89d2:	ab16      	add	r3, sp, #88	; 0x58
    89d4:	77d8      	strb	r0, [r3, #31]
    89d6:	f7fe ff79 	bl	78cc <_svfprintf_r+0x4e4>
    89da:	2301      	movs	r3, #1
    89dc:	425b      	negs	r3, r3
    89de:	469a      	mov	sl, r3
    89e0:	e7c4      	b.n	896c <_svfprintf_r+0x1584>
    89e2:	46c0      	nop			; (mov r8, r8)
    89e4:	0000a160 	.word	0x0000a160
    89e8:	0000a118 	.word	0x0000a118
    89ec:	0000a11c 	.word	0x0000a11c

000089f0 <__register_exitproc>:
    89f0:	b5f0      	push	{r4, r5, r6, r7, lr}
    89f2:	464e      	mov	r6, r9
    89f4:	4645      	mov	r5, r8
    89f6:	46de      	mov	lr, fp
    89f8:	4657      	mov	r7, sl
    89fa:	b5e0      	push	{r5, r6, r7, lr}
    89fc:	4d36      	ldr	r5, [pc, #216]	; (8ad8 <__register_exitproc+0xe8>)
    89fe:	b083      	sub	sp, #12
    8a00:	0006      	movs	r6, r0
    8a02:	6828      	ldr	r0, [r5, #0]
    8a04:	4698      	mov	r8, r3
    8a06:	000f      	movs	r7, r1
    8a08:	4691      	mov	r9, r2
    8a0a:	f7fd fe8b 	bl	6724 <__retarget_lock_acquire_recursive>
    8a0e:	4b33      	ldr	r3, [pc, #204]	; (8adc <__register_exitproc+0xec>)
    8a10:	681c      	ldr	r4, [r3, #0]
    8a12:	23a4      	movs	r3, #164	; 0xa4
    8a14:	005b      	lsls	r3, r3, #1
    8a16:	58e0      	ldr	r0, [r4, r3]
    8a18:	2800      	cmp	r0, #0
    8a1a:	d052      	beq.n	8ac2 <__register_exitproc+0xd2>
    8a1c:	6843      	ldr	r3, [r0, #4]
    8a1e:	2b1f      	cmp	r3, #31
    8a20:	dc13      	bgt.n	8a4a <__register_exitproc+0x5a>
    8a22:	1c5a      	adds	r2, r3, #1
    8a24:	9201      	str	r2, [sp, #4]
    8a26:	2e00      	cmp	r6, #0
    8a28:	d128      	bne.n	8a7c <__register_exitproc+0x8c>
    8a2a:	9a01      	ldr	r2, [sp, #4]
    8a2c:	3302      	adds	r3, #2
    8a2e:	009b      	lsls	r3, r3, #2
    8a30:	6042      	str	r2, [r0, #4]
    8a32:	501f      	str	r7, [r3, r0]
    8a34:	6828      	ldr	r0, [r5, #0]
    8a36:	f7fd fe77 	bl	6728 <__retarget_lock_release_recursive>
    8a3a:	2000      	movs	r0, #0
    8a3c:	b003      	add	sp, #12
    8a3e:	bc3c      	pop	{r2, r3, r4, r5}
    8a40:	4690      	mov	r8, r2
    8a42:	4699      	mov	r9, r3
    8a44:	46a2      	mov	sl, r4
    8a46:	46ab      	mov	fp, r5
    8a48:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8a4a:	4b25      	ldr	r3, [pc, #148]	; (8ae0 <__register_exitproc+0xf0>)
    8a4c:	2b00      	cmp	r3, #0
    8a4e:	d03d      	beq.n	8acc <__register_exitproc+0xdc>
    8a50:	20c8      	movs	r0, #200	; 0xc8
    8a52:	0040      	lsls	r0, r0, #1
    8a54:	e000      	b.n	8a58 <__register_exitproc+0x68>
    8a56:	bf00      	nop
    8a58:	2800      	cmp	r0, #0
    8a5a:	d037      	beq.n	8acc <__register_exitproc+0xdc>
    8a5c:	22a4      	movs	r2, #164	; 0xa4
    8a5e:	2300      	movs	r3, #0
    8a60:	0052      	lsls	r2, r2, #1
    8a62:	58a1      	ldr	r1, [r4, r2]
    8a64:	6043      	str	r3, [r0, #4]
    8a66:	6001      	str	r1, [r0, #0]
    8a68:	50a0      	str	r0, [r4, r2]
    8a6a:	3240      	adds	r2, #64	; 0x40
    8a6c:	5083      	str	r3, [r0, r2]
    8a6e:	3204      	adds	r2, #4
    8a70:	5083      	str	r3, [r0, r2]
    8a72:	3301      	adds	r3, #1
    8a74:	9301      	str	r3, [sp, #4]
    8a76:	2300      	movs	r3, #0
    8a78:	2e00      	cmp	r6, #0
    8a7a:	d0d6      	beq.n	8a2a <__register_exitproc+0x3a>
    8a7c:	009a      	lsls	r2, r3, #2
    8a7e:	4692      	mov	sl, r2
    8a80:	4482      	add	sl, r0
    8a82:	464a      	mov	r2, r9
    8a84:	2188      	movs	r1, #136	; 0x88
    8a86:	4654      	mov	r4, sl
    8a88:	5062      	str	r2, [r4, r1]
    8a8a:	22c4      	movs	r2, #196	; 0xc4
    8a8c:	0052      	lsls	r2, r2, #1
    8a8e:	4691      	mov	r9, r2
    8a90:	4481      	add	r9, r0
    8a92:	464a      	mov	r2, r9
    8a94:	3987      	subs	r1, #135	; 0x87
    8a96:	4099      	lsls	r1, r3
    8a98:	6812      	ldr	r2, [r2, #0]
    8a9a:	468b      	mov	fp, r1
    8a9c:	430a      	orrs	r2, r1
    8a9e:	4694      	mov	ip, r2
    8aa0:	464a      	mov	r2, r9
    8aa2:	4661      	mov	r1, ip
    8aa4:	6011      	str	r1, [r2, #0]
    8aa6:	2284      	movs	r2, #132	; 0x84
    8aa8:	4641      	mov	r1, r8
    8aaa:	0052      	lsls	r2, r2, #1
    8aac:	50a1      	str	r1, [r4, r2]
    8aae:	2e02      	cmp	r6, #2
    8ab0:	d1bb      	bne.n	8a2a <__register_exitproc+0x3a>
    8ab2:	0002      	movs	r2, r0
    8ab4:	465c      	mov	r4, fp
    8ab6:	328d      	adds	r2, #141	; 0x8d
    8ab8:	32ff      	adds	r2, #255	; 0xff
    8aba:	6811      	ldr	r1, [r2, #0]
    8abc:	430c      	orrs	r4, r1
    8abe:	6014      	str	r4, [r2, #0]
    8ac0:	e7b3      	b.n	8a2a <__register_exitproc+0x3a>
    8ac2:	0020      	movs	r0, r4
    8ac4:	304d      	adds	r0, #77	; 0x4d
    8ac6:	30ff      	adds	r0, #255	; 0xff
    8ac8:	50e0      	str	r0, [r4, r3]
    8aca:	e7a7      	b.n	8a1c <__register_exitproc+0x2c>
    8acc:	6828      	ldr	r0, [r5, #0]
    8ace:	f7fd fe2b 	bl	6728 <__retarget_lock_release_recursive>
    8ad2:	2001      	movs	r0, #1
    8ad4:	4240      	negs	r0, r0
    8ad6:	e7b1      	b.n	8a3c <__register_exitproc+0x4c>
    8ad8:	20000438 	.word	0x20000438
    8adc:	00009e94 	.word	0x00009e94
    8ae0:	00000000 	.word	0x00000000

00008ae4 <_calloc_r>:
    8ae4:	b510      	push	{r4, lr}
    8ae6:	4351      	muls	r1, r2
    8ae8:	f7fd fe20 	bl	672c <_malloc_r>
    8aec:	1e04      	subs	r4, r0, #0
    8aee:	d01c      	beq.n	8b2a <_calloc_r+0x46>
    8af0:	0003      	movs	r3, r0
    8af2:	3b08      	subs	r3, #8
    8af4:	685a      	ldr	r2, [r3, #4]
    8af6:	2303      	movs	r3, #3
    8af8:	439a      	bics	r2, r3
    8afa:	3a04      	subs	r2, #4
    8afc:	2a24      	cmp	r2, #36	; 0x24
    8afe:	d816      	bhi.n	8b2e <_calloc_r+0x4a>
    8b00:	0003      	movs	r3, r0
    8b02:	2a13      	cmp	r2, #19
    8b04:	d90d      	bls.n	8b22 <_calloc_r+0x3e>
    8b06:	2100      	movs	r1, #0
    8b08:	3308      	adds	r3, #8
    8b0a:	6001      	str	r1, [r0, #0]
    8b0c:	6041      	str	r1, [r0, #4]
    8b0e:	2a1b      	cmp	r2, #27
    8b10:	d907      	bls.n	8b22 <_calloc_r+0x3e>
    8b12:	6081      	str	r1, [r0, #8]
    8b14:	60c1      	str	r1, [r0, #12]
    8b16:	2a24      	cmp	r2, #36	; 0x24
    8b18:	d10d      	bne.n	8b36 <_calloc_r+0x52>
    8b1a:	0003      	movs	r3, r0
    8b1c:	6101      	str	r1, [r0, #16]
    8b1e:	3318      	adds	r3, #24
    8b20:	6141      	str	r1, [r0, #20]
    8b22:	2200      	movs	r2, #0
    8b24:	601a      	str	r2, [r3, #0]
    8b26:	605a      	str	r2, [r3, #4]
    8b28:	609a      	str	r2, [r3, #8]
    8b2a:	0020      	movs	r0, r4
    8b2c:	bd10      	pop	{r4, pc}
    8b2e:	2100      	movs	r1, #0
    8b30:	f7fc fb1e 	bl	5170 <memset>
    8b34:	e7f9      	b.n	8b2a <_calloc_r+0x46>
    8b36:	0003      	movs	r3, r0
    8b38:	3310      	adds	r3, #16
    8b3a:	e7f2      	b.n	8b22 <_calloc_r+0x3e>

00008b3c <__ascii_mbtowc>:
    8b3c:	b082      	sub	sp, #8
    8b3e:	2900      	cmp	r1, #0
    8b40:	d00a      	beq.n	8b58 <__ascii_mbtowc+0x1c>
    8b42:	2a00      	cmp	r2, #0
    8b44:	d00b      	beq.n	8b5e <__ascii_mbtowc+0x22>
    8b46:	2b00      	cmp	r3, #0
    8b48:	d00b      	beq.n	8b62 <__ascii_mbtowc+0x26>
    8b4a:	7813      	ldrb	r3, [r2, #0]
    8b4c:	600b      	str	r3, [r1, #0]
    8b4e:	7810      	ldrb	r0, [r2, #0]
    8b50:	1e43      	subs	r3, r0, #1
    8b52:	4198      	sbcs	r0, r3
    8b54:	b002      	add	sp, #8
    8b56:	4770      	bx	lr
    8b58:	a901      	add	r1, sp, #4
    8b5a:	2a00      	cmp	r2, #0
    8b5c:	d1f3      	bne.n	8b46 <__ascii_mbtowc+0xa>
    8b5e:	2000      	movs	r0, #0
    8b60:	e7f8      	b.n	8b54 <__ascii_mbtowc+0x18>
    8b62:	2002      	movs	r0, #2
    8b64:	4240      	negs	r0, r0
    8b66:	e7f5      	b.n	8b54 <__ascii_mbtowc+0x18>

00008b68 <memmove>:
    8b68:	b5f0      	push	{r4, r5, r6, r7, lr}
    8b6a:	4288      	cmp	r0, r1
    8b6c:	d90a      	bls.n	8b84 <memmove+0x1c>
    8b6e:	188b      	adds	r3, r1, r2
    8b70:	4298      	cmp	r0, r3
    8b72:	d207      	bcs.n	8b84 <memmove+0x1c>
    8b74:	1e53      	subs	r3, r2, #1
    8b76:	2a00      	cmp	r2, #0
    8b78:	d003      	beq.n	8b82 <memmove+0x1a>
    8b7a:	5cca      	ldrb	r2, [r1, r3]
    8b7c:	54c2      	strb	r2, [r0, r3]
    8b7e:	3b01      	subs	r3, #1
    8b80:	d2fb      	bcs.n	8b7a <memmove+0x12>
    8b82:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8b84:	0005      	movs	r5, r0
    8b86:	2a0f      	cmp	r2, #15
    8b88:	d808      	bhi.n	8b9c <memmove+0x34>
    8b8a:	2a00      	cmp	r2, #0
    8b8c:	d0f9      	beq.n	8b82 <memmove+0x1a>
    8b8e:	2300      	movs	r3, #0
    8b90:	5ccc      	ldrb	r4, [r1, r3]
    8b92:	54ec      	strb	r4, [r5, r3]
    8b94:	3301      	adds	r3, #1
    8b96:	4293      	cmp	r3, r2
    8b98:	d1fa      	bne.n	8b90 <memmove+0x28>
    8b9a:	e7f2      	b.n	8b82 <memmove+0x1a>
    8b9c:	000b      	movs	r3, r1
    8b9e:	4303      	orrs	r3, r0
    8ba0:	079b      	lsls	r3, r3, #30
    8ba2:	d12d      	bne.n	8c00 <memmove+0x98>
    8ba4:	0015      	movs	r5, r2
    8ba6:	000c      	movs	r4, r1
    8ba8:	0003      	movs	r3, r0
    8baa:	3d10      	subs	r5, #16
    8bac:	092f      	lsrs	r7, r5, #4
    8bae:	3701      	adds	r7, #1
    8bb0:	013f      	lsls	r7, r7, #4
    8bb2:	19c7      	adds	r7, r0, r7
    8bb4:	6826      	ldr	r6, [r4, #0]
    8bb6:	601e      	str	r6, [r3, #0]
    8bb8:	6866      	ldr	r6, [r4, #4]
    8bba:	605e      	str	r6, [r3, #4]
    8bbc:	68a6      	ldr	r6, [r4, #8]
    8bbe:	609e      	str	r6, [r3, #8]
    8bc0:	68e6      	ldr	r6, [r4, #12]
    8bc2:	3410      	adds	r4, #16
    8bc4:	60de      	str	r6, [r3, #12]
    8bc6:	3310      	adds	r3, #16
    8bc8:	429f      	cmp	r7, r3
    8bca:	d1f3      	bne.n	8bb4 <memmove+0x4c>
    8bcc:	240f      	movs	r4, #15
    8bce:	43a5      	bics	r5, r4
    8bd0:	3510      	adds	r5, #16
    8bd2:	1949      	adds	r1, r1, r5
    8bd4:	4014      	ands	r4, r2
    8bd6:	1945      	adds	r5, r0, r5
    8bd8:	2c03      	cmp	r4, #3
    8bda:	d913      	bls.n	8c04 <memmove+0x9c>
    8bdc:	2300      	movs	r3, #0
    8bde:	1f27      	subs	r7, r4, #4
    8be0:	08be      	lsrs	r6, r7, #2
    8be2:	3601      	adds	r6, #1
    8be4:	00b6      	lsls	r6, r6, #2
    8be6:	58cc      	ldr	r4, [r1, r3]
    8be8:	50ec      	str	r4, [r5, r3]
    8bea:	3304      	adds	r3, #4
    8bec:	42b3      	cmp	r3, r6
    8bee:	d1fa      	bne.n	8be6 <memmove+0x7e>
    8bf0:	2603      	movs	r6, #3
    8bf2:	43b7      	bics	r7, r6
    8bf4:	1d3c      	adds	r4, r7, #4
    8bf6:	1909      	adds	r1, r1, r4
    8bf8:	192d      	adds	r5, r5, r4
    8bfa:	4032      	ands	r2, r6
    8bfc:	d1c7      	bne.n	8b8e <memmove+0x26>
    8bfe:	e7c0      	b.n	8b82 <memmove+0x1a>
    8c00:	0005      	movs	r5, r0
    8c02:	e7c4      	b.n	8b8e <memmove+0x26>
    8c04:	0022      	movs	r2, r4
    8c06:	e7c0      	b.n	8b8a <memmove+0x22>

00008c08 <_realloc_r>:
    8c08:	b5f0      	push	{r4, r5, r6, r7, lr}
    8c0a:	464e      	mov	r6, r9
    8c0c:	4645      	mov	r5, r8
    8c0e:	46de      	mov	lr, fp
    8c10:	4657      	mov	r7, sl
    8c12:	b5e0      	push	{r5, r6, r7, lr}
    8c14:	b085      	sub	sp, #20
    8c16:	9001      	str	r0, [sp, #4]
    8c18:	000e      	movs	r6, r1
    8c1a:	0015      	movs	r5, r2
    8c1c:	2900      	cmp	r1, #0
    8c1e:	d100      	bne.n	8c22 <_realloc_r+0x1a>
    8c20:	e09e      	b.n	8d60 <_realloc_r+0x158>
    8c22:	0037      	movs	r7, r6
    8c24:	9801      	ldr	r0, [sp, #4]
    8c26:	3f08      	subs	r7, #8
    8c28:	f7fe f874 	bl	6d14 <__malloc_lock>
    8c2c:	687a      	ldr	r2, [r7, #4]
    8c2e:	2303      	movs	r3, #3
    8c30:	0014      	movs	r4, r2
    8c32:	439c      	bics	r4, r3
    8c34:	002b      	movs	r3, r5
    8c36:	330b      	adds	r3, #11
    8c38:	46b9      	mov	r9, r7
    8c3a:	2b16      	cmp	r3, #22
    8c3c:	d847      	bhi.n	8cce <_realloc_r+0xc6>
    8c3e:	2110      	movs	r1, #16
    8c40:	2310      	movs	r3, #16
    8c42:	4688      	mov	r8, r1
    8c44:	4545      	cmp	r5, r8
    8c46:	d846      	bhi.n	8cd6 <_realloc_r+0xce>
    8c48:	429c      	cmp	r4, r3
    8c4a:	da49      	bge.n	8ce0 <_realloc_r+0xd8>
    8c4c:	49cc      	ldr	r1, [pc, #816]	; (8f80 <_realloc_r+0x378>)
    8c4e:	1938      	adds	r0, r7, r4
    8c50:	468b      	mov	fp, r1
    8c52:	6889      	ldr	r1, [r1, #8]
    8c54:	9002      	str	r0, [sp, #8]
    8c56:	4288      	cmp	r0, r1
    8c58:	d100      	bne.n	8c5c <_realloc_r+0x54>
    8c5a:	e0c2      	b.n	8de2 <_realloc_r+0x1da>
    8c5c:	2101      	movs	r1, #1
    8c5e:	468a      	mov	sl, r1
    8c60:	6840      	ldr	r0, [r0, #4]
    8c62:	0001      	movs	r1, r0
    8c64:	9003      	str	r0, [sp, #12]
    8c66:	4650      	mov	r0, sl
    8c68:	4381      	bics	r1, r0
    8c6a:	468c      	mov	ip, r1
    8c6c:	9902      	ldr	r1, [sp, #8]
    8c6e:	468b      	mov	fp, r1
    8c70:	44dc      	add	ip, fp
    8c72:	4661      	mov	r1, ip
    8c74:	6849      	ldr	r1, [r1, #4]
    8c76:	4201      	tst	r1, r0
    8c78:	d04d      	beq.n	8d16 <_realloc_r+0x10e>
    8c7a:	4210      	tst	r0, r2
    8c7c:	d100      	bne.n	8c80 <_realloc_r+0x78>
    8c7e:	e0a2      	b.n	8dc6 <_realloc_r+0x1be>
    8c80:	0029      	movs	r1, r5
    8c82:	9801      	ldr	r0, [sp, #4]
    8c84:	f7fd fd52 	bl	672c <_malloc_r>
    8c88:	1e05      	subs	r5, r0, #0
    8c8a:	d039      	beq.n	8d00 <_realloc_r+0xf8>
    8c8c:	2301      	movs	r3, #1
    8c8e:	0002      	movs	r2, r0
    8c90:	6879      	ldr	r1, [r7, #4]
    8c92:	3a08      	subs	r2, #8
    8c94:	4399      	bics	r1, r3
    8c96:	187f      	adds	r7, r7, r1
    8c98:	42ba      	cmp	r2, r7
    8c9a:	d100      	bne.n	8c9e <_realloc_r+0x96>
    8c9c:	e12e      	b.n	8efc <_realloc_r+0x2f4>
    8c9e:	1f22      	subs	r2, r4, #4
    8ca0:	2a24      	cmp	r2, #36	; 0x24
    8ca2:	d900      	bls.n	8ca6 <_realloc_r+0x9e>
    8ca4:	e114      	b.n	8ed0 <_realloc_r+0x2c8>
    8ca6:	2a13      	cmp	r2, #19
    8ca8:	d900      	bls.n	8cac <_realloc_r+0xa4>
    8caa:	e0e8      	b.n	8e7e <_realloc_r+0x276>
    8cac:	0003      	movs	r3, r0
    8cae:	0032      	movs	r2, r6
    8cb0:	6811      	ldr	r1, [r2, #0]
    8cb2:	6019      	str	r1, [r3, #0]
    8cb4:	6851      	ldr	r1, [r2, #4]
    8cb6:	6059      	str	r1, [r3, #4]
    8cb8:	6892      	ldr	r2, [r2, #8]
    8cba:	609a      	str	r2, [r3, #8]
    8cbc:	9c01      	ldr	r4, [sp, #4]
    8cbe:	0031      	movs	r1, r6
    8cc0:	0020      	movs	r0, r4
    8cc2:	f7fd fc43 	bl	654c <_free_r>
    8cc6:	0020      	movs	r0, r4
    8cc8:	f7fe f82c 	bl	6d24 <__malloc_unlock>
    8ccc:	e01b      	b.n	8d06 <_realloc_r+0xfe>
    8cce:	2107      	movs	r1, #7
    8cd0:	438b      	bics	r3, r1
    8cd2:	4698      	mov	r8, r3
    8cd4:	d5b6      	bpl.n	8c44 <_realloc_r+0x3c>
    8cd6:	230c      	movs	r3, #12
    8cd8:	9a01      	ldr	r2, [sp, #4]
    8cda:	2500      	movs	r5, #0
    8cdc:	6013      	str	r3, [r2, #0]
    8cde:	e012      	b.n	8d06 <_realloc_r+0xfe>
    8ce0:	0035      	movs	r5, r6
    8ce2:	4643      	mov	r3, r8
    8ce4:	1ae3      	subs	r3, r4, r3
    8ce6:	2b0f      	cmp	r3, #15
    8ce8:	d825      	bhi.n	8d36 <_realloc_r+0x12e>
    8cea:	464b      	mov	r3, r9
    8cec:	2201      	movs	r2, #1
    8cee:	4649      	mov	r1, r9
    8cf0:	685b      	ldr	r3, [r3, #4]
    8cf2:	4013      	ands	r3, r2
    8cf4:	4323      	orrs	r3, r4
    8cf6:	604b      	str	r3, [r1, #4]
    8cf8:	444c      	add	r4, r9
    8cfa:	6863      	ldr	r3, [r4, #4]
    8cfc:	431a      	orrs	r2, r3
    8cfe:	6062      	str	r2, [r4, #4]
    8d00:	9801      	ldr	r0, [sp, #4]
    8d02:	f7fe f80f 	bl	6d24 <__malloc_unlock>
    8d06:	0028      	movs	r0, r5
    8d08:	b005      	add	sp, #20
    8d0a:	bc3c      	pop	{r2, r3, r4, r5}
    8d0c:	4690      	mov	r8, r2
    8d0e:	4699      	mov	r9, r3
    8d10:	46a2      	mov	sl, r4
    8d12:	46ab      	mov	fp, r5
    8d14:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8d16:	2103      	movs	r1, #3
    8d18:	9803      	ldr	r0, [sp, #12]
    8d1a:	468c      	mov	ip, r1
    8d1c:	4388      	bics	r0, r1
    8d1e:	1821      	adds	r1, r4, r0
    8d20:	468b      	mov	fp, r1
    8d22:	4299      	cmp	r1, r3
    8d24:	db21      	blt.n	8d6a <_realloc_r+0x162>
    8d26:	9a02      	ldr	r2, [sp, #8]
    8d28:	0035      	movs	r5, r6
    8d2a:	68d3      	ldr	r3, [r2, #12]
    8d2c:	6892      	ldr	r2, [r2, #8]
    8d2e:	465c      	mov	r4, fp
    8d30:	60d3      	str	r3, [r2, #12]
    8d32:	609a      	str	r2, [r3, #8]
    8d34:	e7d5      	b.n	8ce2 <_realloc_r+0xda>
    8d36:	464a      	mov	r2, r9
    8d38:	2001      	movs	r0, #1
    8d3a:	4646      	mov	r6, r8
    8d3c:	6852      	ldr	r2, [r2, #4]
    8d3e:	4649      	mov	r1, r9
    8d40:	4002      	ands	r2, r0
    8d42:	4332      	orrs	r2, r6
    8d44:	464e      	mov	r6, r9
    8d46:	4441      	add	r1, r8
    8d48:	4303      	orrs	r3, r0
    8d4a:	6072      	str	r2, [r6, #4]
    8d4c:	444c      	add	r4, r9
    8d4e:	604b      	str	r3, [r1, #4]
    8d50:	6863      	ldr	r3, [r4, #4]
    8d52:	3108      	adds	r1, #8
    8d54:	4318      	orrs	r0, r3
    8d56:	6060      	str	r0, [r4, #4]
    8d58:	9801      	ldr	r0, [sp, #4]
    8d5a:	f7fd fbf7 	bl	654c <_free_r>
    8d5e:	e7cf      	b.n	8d00 <_realloc_r+0xf8>
    8d60:	0011      	movs	r1, r2
    8d62:	f7fd fce3 	bl	672c <_malloc_r>
    8d66:	0005      	movs	r5, r0
    8d68:	e7cd      	b.n	8d06 <_realloc_r+0xfe>
    8d6a:	4651      	mov	r1, sl
    8d6c:	4211      	tst	r1, r2
    8d6e:	d000      	beq.n	8d72 <_realloc_r+0x16a>
    8d70:	e786      	b.n	8c80 <_realloc_r+0x78>
    8d72:	4661      	mov	r1, ip
    8d74:	683a      	ldr	r2, [r7, #0]
    8d76:	1aba      	subs	r2, r7, r2
    8d78:	4692      	mov	sl, r2
    8d7a:	6852      	ldr	r2, [r2, #4]
    8d7c:	438a      	bics	r2, r1
    8d7e:	1880      	adds	r0, r0, r2
    8d80:	4683      	mov	fp, r0
    8d82:	44a3      	add	fp, r4
    8d84:	459b      	cmp	fp, r3
    8d86:	db26      	blt.n	8dd6 <_realloc_r+0x1ce>
    8d88:	9a02      	ldr	r2, [sp, #8]
    8d8a:	68d3      	ldr	r3, [r2, #12]
    8d8c:	6892      	ldr	r2, [r2, #8]
    8d8e:	60d3      	str	r3, [r2, #12]
    8d90:	609a      	str	r2, [r3, #8]
    8d92:	4653      	mov	r3, sl
    8d94:	4652      	mov	r2, sl
    8d96:	4655      	mov	r5, sl
    8d98:	6892      	ldr	r2, [r2, #8]
    8d9a:	68db      	ldr	r3, [r3, #12]
    8d9c:	3508      	adds	r5, #8
    8d9e:	60d3      	str	r3, [r2, #12]
    8da0:	609a      	str	r2, [r3, #8]
    8da2:	1f22      	subs	r2, r4, #4
    8da4:	2a24      	cmp	r2, #36	; 0x24
    8da6:	d900      	bls.n	8daa <_realloc_r+0x1a2>
    8da8:	e096      	b.n	8ed8 <_realloc_r+0x2d0>
    8daa:	2a13      	cmp	r2, #19
    8dac:	d972      	bls.n	8e94 <_realloc_r+0x28c>
    8dae:	4653      	mov	r3, sl
    8db0:	6831      	ldr	r1, [r6, #0]
    8db2:	6099      	str	r1, [r3, #8]
    8db4:	6871      	ldr	r1, [r6, #4]
    8db6:	60d9      	str	r1, [r3, #12]
    8db8:	2a1b      	cmp	r2, #27
    8dba:	d900      	bls.n	8dbe <_realloc_r+0x1b6>
    8dbc:	e0a4      	b.n	8f08 <_realloc_r+0x300>
    8dbe:	0032      	movs	r2, r6
    8dc0:	3310      	adds	r3, #16
    8dc2:	3208      	adds	r2, #8
    8dc4:	e068      	b.n	8e98 <_realloc_r+0x290>
    8dc6:	683a      	ldr	r2, [r7, #0]
    8dc8:	1aba      	subs	r2, r7, r2
    8dca:	4692      	mov	sl, r2
    8dcc:	4651      	mov	r1, sl
    8dce:	2203      	movs	r2, #3
    8dd0:	6849      	ldr	r1, [r1, #4]
    8dd2:	4391      	bics	r1, r2
    8dd4:	000a      	movs	r2, r1
    8dd6:	4693      	mov	fp, r2
    8dd8:	44a3      	add	fp, r4
    8dda:	459b      	cmp	fp, r3
    8ddc:	da00      	bge.n	8de0 <_realloc_r+0x1d8>
    8dde:	e74f      	b.n	8c80 <_realloc_r+0x78>
    8de0:	e7d7      	b.n	8d92 <_realloc_r+0x18a>
    8de2:	2003      	movs	r0, #3
    8de4:	9902      	ldr	r1, [sp, #8]
    8de6:	4684      	mov	ip, r0
    8de8:	6849      	ldr	r1, [r1, #4]
    8dea:	4381      	bics	r1, r0
    8dec:	4640      	mov	r0, r8
    8dee:	1909      	adds	r1, r1, r4
    8df0:	3010      	adds	r0, #16
    8df2:	9002      	str	r0, [sp, #8]
    8df4:	4281      	cmp	r1, r0
    8df6:	da58      	bge.n	8eaa <_realloc_r+0x2a2>
    8df8:	07d2      	lsls	r2, r2, #31
    8dfa:	d500      	bpl.n	8dfe <_realloc_r+0x1f6>
    8dfc:	e740      	b.n	8c80 <_realloc_r+0x78>
    8dfe:	4660      	mov	r0, ip
    8e00:	683a      	ldr	r2, [r7, #0]
    8e02:	1aba      	subs	r2, r7, r2
    8e04:	4692      	mov	sl, r2
    8e06:	6852      	ldr	r2, [r2, #4]
    8e08:	4382      	bics	r2, r0
    8e0a:	9802      	ldr	r0, [sp, #8]
    8e0c:	1851      	adds	r1, r2, r1
    8e0e:	9103      	str	r1, [sp, #12]
    8e10:	4288      	cmp	r0, r1
    8e12:	dce0      	bgt.n	8dd6 <_realloc_r+0x1ce>
    8e14:	4653      	mov	r3, sl
    8e16:	4652      	mov	r2, sl
    8e18:	4655      	mov	r5, sl
    8e1a:	6892      	ldr	r2, [r2, #8]
    8e1c:	68db      	ldr	r3, [r3, #12]
    8e1e:	3508      	adds	r5, #8
    8e20:	60d3      	str	r3, [r2, #12]
    8e22:	609a      	str	r2, [r3, #8]
    8e24:	1f22      	subs	r2, r4, #4
    8e26:	2a24      	cmp	r2, #36	; 0x24
    8e28:	d900      	bls.n	8e2c <_realloc_r+0x224>
    8e2a:	e08e      	b.n	8f4a <_realloc_r+0x342>
    8e2c:	2a13      	cmp	r2, #19
    8e2e:	d800      	bhi.n	8e32 <_realloc_r+0x22a>
    8e30:	e088      	b.n	8f44 <_realloc_r+0x33c>
    8e32:	4653      	mov	r3, sl
    8e34:	6831      	ldr	r1, [r6, #0]
    8e36:	6099      	str	r1, [r3, #8]
    8e38:	6871      	ldr	r1, [r6, #4]
    8e3a:	60d9      	str	r1, [r3, #12]
    8e3c:	2a1b      	cmp	r2, #27
    8e3e:	d900      	bls.n	8e42 <_realloc_r+0x23a>
    8e40:	e088      	b.n	8f54 <_realloc_r+0x34c>
    8e42:	0032      	movs	r2, r6
    8e44:	3310      	adds	r3, #16
    8e46:	3208      	adds	r2, #8
    8e48:	6811      	ldr	r1, [r2, #0]
    8e4a:	6019      	str	r1, [r3, #0]
    8e4c:	6851      	ldr	r1, [r2, #4]
    8e4e:	6059      	str	r1, [r3, #4]
    8e50:	6892      	ldr	r2, [r2, #8]
    8e52:	609a      	str	r2, [r3, #8]
    8e54:	4651      	mov	r1, sl
    8e56:	465b      	mov	r3, fp
    8e58:	4642      	mov	r2, r8
    8e5a:	4441      	add	r1, r8
    8e5c:	6099      	str	r1, [r3, #8]
    8e5e:	9b03      	ldr	r3, [sp, #12]
    8e60:	9801      	ldr	r0, [sp, #4]
    8e62:	1a9a      	subs	r2, r3, r2
    8e64:	2301      	movs	r3, #1
    8e66:	431a      	orrs	r2, r3
    8e68:	604a      	str	r2, [r1, #4]
    8e6a:	4652      	mov	r2, sl
    8e6c:	6852      	ldr	r2, [r2, #4]
    8e6e:	4013      	ands	r3, r2
    8e70:	4642      	mov	r2, r8
    8e72:	4313      	orrs	r3, r2
    8e74:	4652      	mov	r2, sl
    8e76:	6053      	str	r3, [r2, #4]
    8e78:	f7fd ff54 	bl	6d24 <__malloc_unlock>
    8e7c:	e743      	b.n	8d06 <_realloc_r+0xfe>
    8e7e:	6833      	ldr	r3, [r6, #0]
    8e80:	6003      	str	r3, [r0, #0]
    8e82:	6873      	ldr	r3, [r6, #4]
    8e84:	6043      	str	r3, [r0, #4]
    8e86:	2a1b      	cmp	r2, #27
    8e88:	d82d      	bhi.n	8ee6 <_realloc_r+0x2de>
    8e8a:	0003      	movs	r3, r0
    8e8c:	0032      	movs	r2, r6
    8e8e:	3308      	adds	r3, #8
    8e90:	3208      	adds	r2, #8
    8e92:	e70d      	b.n	8cb0 <_realloc_r+0xa8>
    8e94:	002b      	movs	r3, r5
    8e96:	0032      	movs	r2, r6
    8e98:	6811      	ldr	r1, [r2, #0]
    8e9a:	465c      	mov	r4, fp
    8e9c:	6019      	str	r1, [r3, #0]
    8e9e:	6851      	ldr	r1, [r2, #4]
    8ea0:	46d1      	mov	r9, sl
    8ea2:	6059      	str	r1, [r3, #4]
    8ea4:	6892      	ldr	r2, [r2, #8]
    8ea6:	609a      	str	r2, [r3, #8]
    8ea8:	e71b      	b.n	8ce2 <_realloc_r+0xda>
    8eaa:	4643      	mov	r3, r8
    8eac:	18fa      	adds	r2, r7, r3
    8eae:	465b      	mov	r3, fp
    8eb0:	609a      	str	r2, [r3, #8]
    8eb2:	4643      	mov	r3, r8
    8eb4:	1ac9      	subs	r1, r1, r3
    8eb6:	2301      	movs	r3, #1
    8eb8:	4319      	orrs	r1, r3
    8eba:	6051      	str	r1, [r2, #4]
    8ebc:	687a      	ldr	r2, [r7, #4]
    8ebe:	9801      	ldr	r0, [sp, #4]
    8ec0:	4013      	ands	r3, r2
    8ec2:	4642      	mov	r2, r8
    8ec4:	4313      	orrs	r3, r2
    8ec6:	607b      	str	r3, [r7, #4]
    8ec8:	f7fd ff2c 	bl	6d24 <__malloc_unlock>
    8ecc:	0035      	movs	r5, r6
    8ece:	e71a      	b.n	8d06 <_realloc_r+0xfe>
    8ed0:	0031      	movs	r1, r6
    8ed2:	f7ff fe49 	bl	8b68 <memmove>
    8ed6:	e6f1      	b.n	8cbc <_realloc_r+0xb4>
    8ed8:	0031      	movs	r1, r6
    8eda:	0028      	movs	r0, r5
    8edc:	f7ff fe44 	bl	8b68 <memmove>
    8ee0:	465c      	mov	r4, fp
    8ee2:	46d1      	mov	r9, sl
    8ee4:	e6fd      	b.n	8ce2 <_realloc_r+0xda>
    8ee6:	68b3      	ldr	r3, [r6, #8]
    8ee8:	6083      	str	r3, [r0, #8]
    8eea:	68f3      	ldr	r3, [r6, #12]
    8eec:	60c3      	str	r3, [r0, #12]
    8eee:	2a24      	cmp	r2, #36	; 0x24
    8ef0:	d015      	beq.n	8f1e <_realloc_r+0x316>
    8ef2:	0003      	movs	r3, r0
    8ef4:	0032      	movs	r2, r6
    8ef6:	3310      	adds	r3, #16
    8ef8:	3210      	adds	r2, #16
    8efa:	e6d9      	b.n	8cb0 <_realloc_r+0xa8>
    8efc:	6853      	ldr	r3, [r2, #4]
    8efe:	2203      	movs	r2, #3
    8f00:	4393      	bics	r3, r2
    8f02:	18e4      	adds	r4, r4, r3
    8f04:	0035      	movs	r5, r6
    8f06:	e6ec      	b.n	8ce2 <_realloc_r+0xda>
    8f08:	4653      	mov	r3, sl
    8f0a:	68b1      	ldr	r1, [r6, #8]
    8f0c:	6119      	str	r1, [r3, #16]
    8f0e:	68f1      	ldr	r1, [r6, #12]
    8f10:	6159      	str	r1, [r3, #20]
    8f12:	2a24      	cmp	r2, #36	; 0x24
    8f14:	d00c      	beq.n	8f30 <_realloc_r+0x328>
    8f16:	0032      	movs	r2, r6
    8f18:	3318      	adds	r3, #24
    8f1a:	3210      	adds	r2, #16
    8f1c:	e7bc      	b.n	8e98 <_realloc_r+0x290>
    8f1e:	6933      	ldr	r3, [r6, #16]
    8f20:	0032      	movs	r2, r6
    8f22:	6103      	str	r3, [r0, #16]
    8f24:	0003      	movs	r3, r0
    8f26:	6971      	ldr	r1, [r6, #20]
    8f28:	3318      	adds	r3, #24
    8f2a:	3218      	adds	r2, #24
    8f2c:	6141      	str	r1, [r0, #20]
    8f2e:	e6bf      	b.n	8cb0 <_realloc_r+0xa8>
    8f30:	4653      	mov	r3, sl
    8f32:	6932      	ldr	r2, [r6, #16]
    8f34:	4651      	mov	r1, sl
    8f36:	619a      	str	r2, [r3, #24]
    8f38:	0032      	movs	r2, r6
    8f3a:	6970      	ldr	r0, [r6, #20]
    8f3c:	3320      	adds	r3, #32
    8f3e:	3218      	adds	r2, #24
    8f40:	61c8      	str	r0, [r1, #28]
    8f42:	e7a9      	b.n	8e98 <_realloc_r+0x290>
    8f44:	002b      	movs	r3, r5
    8f46:	0032      	movs	r2, r6
    8f48:	e77e      	b.n	8e48 <_realloc_r+0x240>
    8f4a:	0031      	movs	r1, r6
    8f4c:	0028      	movs	r0, r5
    8f4e:	f7ff fe0b 	bl	8b68 <memmove>
    8f52:	e77f      	b.n	8e54 <_realloc_r+0x24c>
    8f54:	4653      	mov	r3, sl
    8f56:	68b1      	ldr	r1, [r6, #8]
    8f58:	6119      	str	r1, [r3, #16]
    8f5a:	68f1      	ldr	r1, [r6, #12]
    8f5c:	6159      	str	r1, [r3, #20]
    8f5e:	2a24      	cmp	r2, #36	; 0x24
    8f60:	d003      	beq.n	8f6a <_realloc_r+0x362>
    8f62:	0032      	movs	r2, r6
    8f64:	3318      	adds	r3, #24
    8f66:	3210      	adds	r2, #16
    8f68:	e76e      	b.n	8e48 <_realloc_r+0x240>
    8f6a:	4653      	mov	r3, sl
    8f6c:	6932      	ldr	r2, [r6, #16]
    8f6e:	4651      	mov	r1, sl
    8f70:	619a      	str	r2, [r3, #24]
    8f72:	0032      	movs	r2, r6
    8f74:	6970      	ldr	r0, [r6, #20]
    8f76:	3320      	adds	r3, #32
    8f78:	3218      	adds	r2, #24
    8f7a:	61c8      	str	r0, [r1, #28]
    8f7c:	e764      	b.n	8e48 <_realloc_r+0x240>
    8f7e:	46c0      	nop			; (mov r8, r8)
    8f80:	2000043c 	.word	0x2000043c

00008f84 <__ssprint_r>:
    8f84:	b5f0      	push	{r4, r5, r6, r7, lr}
    8f86:	4657      	mov	r7, sl
    8f88:	464e      	mov	r6, r9
    8f8a:	46de      	mov	lr, fp
    8f8c:	4645      	mov	r5, r8
    8f8e:	b5e0      	push	{r5, r6, r7, lr}
    8f90:	6893      	ldr	r3, [r2, #8]
    8f92:	b083      	sub	sp, #12
    8f94:	9001      	str	r0, [sp, #4]
    8f96:	000e      	movs	r6, r1
    8f98:	4692      	mov	sl, r2
    8f9a:	2b00      	cmp	r3, #0
    8f9c:	d070      	beq.n	9080 <__ssprint_r+0xfc>
    8f9e:	688d      	ldr	r5, [r1, #8]
    8fa0:	6813      	ldr	r3, [r2, #0]
    8fa2:	002c      	movs	r4, r5
    8fa4:	6808      	ldr	r0, [r1, #0]
    8fa6:	001d      	movs	r5, r3
    8fa8:	e046      	b.n	9038 <__ssprint_r+0xb4>
    8faa:	2290      	movs	r2, #144	; 0x90
    8fac:	89b3      	ldrh	r3, [r6, #12]
    8fae:	00d2      	lsls	r2, r2, #3
    8fb0:	4213      	tst	r3, r2
    8fb2:	d030      	beq.n	9016 <__ssprint_r+0x92>
    8fb4:	6931      	ldr	r1, [r6, #16]
    8fb6:	1a42      	subs	r2, r0, r1
    8fb8:	4693      	mov	fp, r2
    8fba:	6970      	ldr	r0, [r6, #20]
    8fbc:	0042      	lsls	r2, r0, #1
    8fbe:	1812      	adds	r2, r2, r0
    8fc0:	0fd0      	lsrs	r0, r2, #31
    8fc2:	1882      	adds	r2, r0, r2
    8fc4:	1052      	asrs	r2, r2, #1
    8fc6:	4690      	mov	r8, r2
    8fc8:	465a      	mov	r2, fp
    8fca:	1c50      	adds	r0, r2, #1
    8fcc:	19c0      	adds	r0, r0, r7
    8fce:	4642      	mov	r2, r8
    8fd0:	4540      	cmp	r0, r8
    8fd2:	d901      	bls.n	8fd8 <__ssprint_r+0x54>
    8fd4:	4680      	mov	r8, r0
    8fd6:	0002      	movs	r2, r0
    8fd8:	2080      	movs	r0, #128	; 0x80
    8fda:	00c0      	lsls	r0, r0, #3
    8fdc:	4203      	tst	r3, r0
    8fde:	d038      	beq.n	9052 <__ssprint_r+0xce>
    8fe0:	0011      	movs	r1, r2
    8fe2:	9801      	ldr	r0, [sp, #4]
    8fe4:	f7fd fba2 	bl	672c <_malloc_r>
    8fe8:	1e04      	subs	r4, r0, #0
    8fea:	d054      	beq.n	9096 <__ssprint_r+0x112>
    8fec:	465a      	mov	r2, fp
    8fee:	6931      	ldr	r1, [r6, #16]
    8ff0:	f7fc f87c 	bl	50ec <memcpy>
    8ff4:	89b3      	ldrh	r3, [r6, #12]
    8ff6:	4a2a      	ldr	r2, [pc, #168]	; (90a0 <__ssprint_r+0x11c>)
    8ff8:	4013      	ands	r3, r2
    8ffa:	2280      	movs	r2, #128	; 0x80
    8ffc:	4313      	orrs	r3, r2
    8ffe:	81b3      	strh	r3, [r6, #12]
    9000:	4643      	mov	r3, r8
    9002:	0020      	movs	r0, r4
    9004:	465a      	mov	r2, fp
    9006:	6134      	str	r4, [r6, #16]
    9008:	46b8      	mov	r8, r7
    900a:	003c      	movs	r4, r7
    900c:	4458      	add	r0, fp
    900e:	6173      	str	r3, [r6, #20]
    9010:	1a9b      	subs	r3, r3, r2
    9012:	6030      	str	r0, [r6, #0]
    9014:	60b3      	str	r3, [r6, #8]
    9016:	4642      	mov	r2, r8
    9018:	4649      	mov	r1, r9
    901a:	f7ff fda5 	bl	8b68 <memmove>
    901e:	68b3      	ldr	r3, [r6, #8]
    9020:	1b1c      	subs	r4, r3, r4
    9022:	6833      	ldr	r3, [r6, #0]
    9024:	60b4      	str	r4, [r6, #8]
    9026:	4443      	add	r3, r8
    9028:	6033      	str	r3, [r6, #0]
    902a:	0018      	movs	r0, r3
    902c:	4653      	mov	r3, sl
    902e:	689b      	ldr	r3, [r3, #8]
    9030:	1bdf      	subs	r7, r3, r7
    9032:	4653      	mov	r3, sl
    9034:	609f      	str	r7, [r3, #8]
    9036:	d023      	beq.n	9080 <__ssprint_r+0xfc>
    9038:	686f      	ldr	r7, [r5, #4]
    903a:	002b      	movs	r3, r5
    903c:	3508      	adds	r5, #8
    903e:	2f00      	cmp	r7, #0
    9040:	d0fa      	beq.n	9038 <__ssprint_r+0xb4>
    9042:	681b      	ldr	r3, [r3, #0]
    9044:	46a0      	mov	r8, r4
    9046:	4699      	mov	r9, r3
    9048:	42a7      	cmp	r7, r4
    904a:	d2ae      	bcs.n	8faa <__ssprint_r+0x26>
    904c:	003c      	movs	r4, r7
    904e:	46b8      	mov	r8, r7
    9050:	e7e1      	b.n	9016 <__ssprint_r+0x92>
    9052:	9801      	ldr	r0, [sp, #4]
    9054:	f7ff fdd8 	bl	8c08 <_realloc_r>
    9058:	1e04      	subs	r4, r0, #0
    905a:	d1d1      	bne.n	9000 <__ssprint_r+0x7c>
    905c:	9c01      	ldr	r4, [sp, #4]
    905e:	6931      	ldr	r1, [r6, #16]
    9060:	0020      	movs	r0, r4
    9062:	f7fd fa73 	bl	654c <_free_r>
    9066:	230c      	movs	r3, #12
    9068:	6023      	str	r3, [r4, #0]
    906a:	2240      	movs	r2, #64	; 0x40
    906c:	89b3      	ldrh	r3, [r6, #12]
    906e:	2001      	movs	r0, #1
    9070:	4313      	orrs	r3, r2
    9072:	81b3      	strh	r3, [r6, #12]
    9074:	4652      	mov	r2, sl
    9076:	2300      	movs	r3, #0
    9078:	4240      	negs	r0, r0
    907a:	6093      	str	r3, [r2, #8]
    907c:	6053      	str	r3, [r2, #4]
    907e:	e003      	b.n	9088 <__ssprint_r+0x104>
    9080:	2300      	movs	r3, #0
    9082:	4652      	mov	r2, sl
    9084:	2000      	movs	r0, #0
    9086:	6053      	str	r3, [r2, #4]
    9088:	b003      	add	sp, #12
    908a:	bc3c      	pop	{r2, r3, r4, r5}
    908c:	4690      	mov	r8, r2
    908e:	4699      	mov	r9, r3
    9090:	46a2      	mov	sl, r4
    9092:	46ab      	mov	fp, r5
    9094:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9096:	230c      	movs	r3, #12
    9098:	9a01      	ldr	r2, [sp, #4]
    909a:	6013      	str	r3, [r2, #0]
    909c:	e7e5      	b.n	906a <__ssprint_r+0xe6>
    909e:	46c0      	nop			; (mov r8, r8)
    90a0:	fffffb7f 	.word	0xfffffb7f

000090a4 <__ascii_wctomb>:
    90a4:	2900      	cmp	r1, #0
    90a6:	d004      	beq.n	90b2 <__ascii_wctomb+0xe>
    90a8:	2aff      	cmp	r2, #255	; 0xff
    90aa:	d804      	bhi.n	90b6 <__ascii_wctomb+0x12>
    90ac:	2001      	movs	r0, #1
    90ae:	700a      	strb	r2, [r1, #0]
    90b0:	4770      	bx	lr
    90b2:	2000      	movs	r0, #0
    90b4:	e7fc      	b.n	90b0 <__ascii_wctomb+0xc>
    90b6:	238a      	movs	r3, #138	; 0x8a
    90b8:	6003      	str	r3, [r0, #0]
    90ba:	2001      	movs	r0, #1
    90bc:	4240      	negs	r0, r0
    90be:	e7f7      	b.n	90b0 <__ascii_wctomb+0xc>

000090c0 <__aeabi_dcmpun>:
    90c0:	b570      	push	{r4, r5, r6, lr}
    90c2:	4e0e      	ldr	r6, [pc, #56]	; (90fc <__aeabi_dcmpun+0x3c>)
    90c4:	030d      	lsls	r5, r1, #12
    90c6:	031c      	lsls	r4, r3, #12
    90c8:	0049      	lsls	r1, r1, #1
    90ca:	005b      	lsls	r3, r3, #1
    90cc:	0b2d      	lsrs	r5, r5, #12
    90ce:	0d49      	lsrs	r1, r1, #21
    90d0:	0b24      	lsrs	r4, r4, #12
    90d2:	0d5b      	lsrs	r3, r3, #21
    90d4:	42b1      	cmp	r1, r6
    90d6:	d004      	beq.n	90e2 <__aeabi_dcmpun+0x22>
    90d8:	4908      	ldr	r1, [pc, #32]	; (90fc <__aeabi_dcmpun+0x3c>)
    90da:	2000      	movs	r0, #0
    90dc:	428b      	cmp	r3, r1
    90de:	d008      	beq.n	90f2 <__aeabi_dcmpun+0x32>
    90e0:	bd70      	pop	{r4, r5, r6, pc}
    90e2:	4305      	orrs	r5, r0
    90e4:	2001      	movs	r0, #1
    90e6:	2d00      	cmp	r5, #0
    90e8:	d1fa      	bne.n	90e0 <__aeabi_dcmpun+0x20>
    90ea:	4904      	ldr	r1, [pc, #16]	; (90fc <__aeabi_dcmpun+0x3c>)
    90ec:	2000      	movs	r0, #0
    90ee:	428b      	cmp	r3, r1
    90f0:	d1f6      	bne.n	90e0 <__aeabi_dcmpun+0x20>
    90f2:	4314      	orrs	r4, r2
    90f4:	0020      	movs	r0, r4
    90f6:	1e44      	subs	r4, r0, #1
    90f8:	41a0      	sbcs	r0, r4
    90fa:	e7f1      	b.n	90e0 <__aeabi_dcmpun+0x20>
    90fc:	000007ff 	.word	0x000007ff
    9100:	00000514 	.word	0x00000514
    9104:	0000049c 	.word	0x0000049c
    9108:	000004b0 	.word	0x000004b0
    910c:	000004c4 	.word	0x000004c4
    9110:	000004d8 	.word	0x000004d8
    9114:	000004ec 	.word	0x000004ec
    9118:	00000500 	.word	0x00000500
    911c:	00000520 	.word	0x00000520
    9120:	0000094a 	.word	0x0000094a
    9124:	0000085c 	.word	0x0000085c
    9128:	0000088a 	.word	0x0000088a
    912c:	000008aa 	.word	0x000008aa
    9130:	000008ca 	.word	0x000008ca
    9134:	000008ea 	.word	0x000008ea
    9138:	0000090a 	.word	0x0000090a
    913c:	0000092a 	.word	0x0000092a
    9140:	000009e6 	.word	0x000009e6
    9144:	000009a4 	.word	0x000009a4
    9148:	000009ae 	.word	0x000009ae
    914c:	000009b8 	.word	0x000009b8
    9150:	000009c2 	.word	0x000009c2
    9154:	000009cc 	.word	0x000009cc
    9158:	000009d6 	.word	0x000009d6
    915c:	000009de 	.word	0x000009de
    9160:	434c3532 	.word	0x434c3532
    9164:	203a7878 	.word	0x203a7878
    9168:	616c6564 	.word	0x616c6564
    916c:	736d5f79 	.word	0x736d5f79
    9170:	20736920 	.word	0x20736920
    9174:	6c6c756e 	.word	0x6c6c756e
    9178:	00000a0d 	.word	0x00000a0d
    917c:	434c3532 	.word	0x434c3532
    9180:	203a7878 	.word	0x203a7878
    9184:	74696e69 	.word	0x74696e69
    9188:	696c6169 	.word	0x696c6169
    918c:	6920657a 	.word	0x6920657a
    9190:	756e2073 	.word	0x756e2073
    9194:	0a0d6c6c 	.word	0x0a0d6c6c
    9198:	00000000 	.word	0x00000000
    919c:	434c3532 	.word	0x434c3532
    91a0:	203a7878 	.word	0x203a7878
    91a4:	692d6564 	.word	0x692d6564
    91a8:	6974696e 	.word	0x6974696e
    91ac:	7a696c61 	.word	0x7a696c61
    91b0:	73692065 	.word	0x73692065
    91b4:	6c756e20 	.word	0x6c756e20
    91b8:	000a0d6c 	.word	0x000a0d6c
    91bc:	434c3532 	.word	0x434c3532
    91c0:	203a7878 	.word	0x203a7878
    91c4:	20697073 	.word	0x20697073
    91c8:	64616572 	.word	0x64616572
    91cc:	20736920 	.word	0x20736920
    91d0:	6c6c756e 	.word	0x6c6c756e
    91d4:	00000a0d 	.word	0x00000a0d
    91d8:	434c3532 	.word	0x434c3532
    91dc:	203a7878 	.word	0x203a7878
    91e0:	20697073 	.word	0x20697073
    91e4:	74697277 	.word	0x74697277
    91e8:	73692065 	.word	0x73692065
    91ec:	6c756e20 	.word	0x6c756e20
    91f0:	000a0d6c 	.word	0x000a0d6c
    91f4:	434c3532 	.word	0x434c3532
    91f8:	203a7878 	.word	0x203a7878
    91fc:	70696863 	.word	0x70696863
    9200:	6c657320 	.word	0x6c657320
    9204:	20746365 	.word	0x20746365
    9208:	6e207369 	.word	0x6e207369
    920c:	0d6c6c75 	.word	0x0d6c6c75
    9210:	0000000a 	.word	0x0000000a
    9214:	434c3532 	.word	0x434c3532
    9218:	203a7878 	.word	0x203a7878
    921c:	6f697067 	.word	0x6f697067
    9220:	69727720 	.word	0x69727720
    9224:	69206574 	.word	0x69206574
    9228:	756e2073 	.word	0x756e2073
    922c:	0a0d6c6c 	.word	0x0a0d6c6c
    9230:	00000000 	.word	0x00000000
    9234:	434c3532 	.word	0x434c3532
    9238:	203a7878 	.word	0x203a7878
    923c:	6c696166 	.word	0x6c696166
    9240:	74206465 	.word	0x74206465
    9244:	6e69206f 	.word	0x6e69206f
    9248:	61697469 	.word	0x61697469
    924c:	657a696c 	.word	0x657a696c
    9250:	69707320 	.word	0x69707320
    9254:	00000a0d 	.word	0x00000a0d
    9258:	434c3532 	.word	0x434c3532
    925c:	203a7878 	.word	0x203a7878
    9260:	6c696166 	.word	0x6c696166
    9264:	74206465 	.word	0x74206465
    9268:	6564206f 	.word	0x6564206f
    926c:	696e692d 	.word	0x696e692d
    9270:	6c616974 	.word	0x6c616974
    9274:	20657a69 	.word	0x20657a69
    9278:	00000a0d 	.word	0x00000a0d
    927c:	434c3532 	.word	0x434c3532
    9280:	663a7878 	.word	0x663a7878
    9284:	656c6961 	.word	0x656c6961
    9288:	6f742064 	.word	0x6f742064
    928c:	74656720 	.word	0x74656720
    9290:	72617620 	.word	0x72617620
    9294:	746e6169 	.word	0x746e6169
    9298:	00000a0d 	.word	0x00000a0d
    929c:	434c3532 	.word	0x434c3532
    92a0:	663a7878 	.word	0x663a7878
    92a4:	656c6961 	.word	0x656c6961
    92a8:	6f742064 	.word	0x6f742064
    92ac:	74656720 	.word	0x74656720
    92b0:	67617020 	.word	0x67617020
    92b4:	69732065 	.word	0x69732065
    92b8:	0a0d657a 	.word	0x0a0d657a
    92bc:	00000000 	.word	0x00000000
    92c0:	434c3532 	.word	0x434c3532
    92c4:	663a7878 	.word	0x663a7878
    92c8:	656c6961 	.word	0x656c6961
    92cc:	6f742064 	.word	0x6f742064
    92d0:	61657220 	.word	0x61657220
    92d4:	74732064 	.word	0x74732064
    92d8:	73757461 	.word	0x73757461
    92dc:	67657220 	.word	0x67657220
    92e0:	00000a0d 	.word	0x00000a0d
    92e4:	434c3532 	.word	0x434c3532
    92e8:	203a7878 	.word	0x203a7878
    92ec:	6c696166 	.word	0x6c696166
    92f0:	74206465 	.word	0x74206465
    92f4:	6e65206f 	.word	0x6e65206f
    92f8:	656c6261 	.word	0x656c6261
    92fc:	69727720 	.word	0x69727720
    9300:	6f206574 	.word	0x6f206574
    9304:	61726570 	.word	0x61726570
    9308:	6e6f6974 	.word	0x6e6f6974
    930c:	000a0d20 	.word	0x000a0d20
    9310:	434c3532 	.word	0x434c3532
    9314:	663a7878 	.word	0x663a7878
    9318:	656c6961 	.word	0x656c6961
    931c:	6f742064 	.word	0x6f742064
    9320:	69727720 	.word	0x69727720
    9324:	73206574 	.word	0x73206574
    9328:	75746174 	.word	0x75746174
    932c:	65722073 	.word	0x65722073
    9330:	000a0d67 	.word	0x000a0d67
    9334:	434c3532 	.word	0x434c3532
    9338:	663a7878 	.word	0x663a7878
    933c:	656c6961 	.word	0x656c6961
    9340:	6f742064 	.word	0x6f742064
    9344:	61726520 	.word	0x61726520
    9348:	63206573 	.word	0x63206573
    934c:	0d706968 	.word	0x0d706968
    9350:	0000000a 	.word	0x0000000a
    9354:	434c3532 	.word	0x434c3532
    9358:	663a7878 	.word	0x663a7878
    935c:	656c6961 	.word	0x656c6961
    9360:	65732064 	.word	0x65732064
    9364:	65642074 	.word	0x65642074
    9368:	70207065 	.word	0x70207065
    936c:	7265776f 	.word	0x7265776f
    9370:	646f6d20 	.word	0x646f6d20
    9374:	000a0d65 	.word	0x000a0d65
    9378:	434c3532 	.word	0x434c3532
    937c:	663a7878 	.word	0x663a7878
    9380:	656c6961 	.word	0x656c6961
    9384:	65722064 	.word	0x65722064
    9388:	4d206461 	.word	0x4d206461
    938c:	49207266 	.word	0x49207266
    9390:	61202044 	.word	0x61202044
    9394:	7220646e 	.word	0x7220646e
    9398:	61656c65 	.word	0x61656c65
    939c:	66206573 	.word	0x66206573
    93a0:	206d6f72 	.word	0x206d6f72
    93a4:	20445044 	.word	0x20445044
    93a8:	65646f6d 	.word	0x65646f6d
    93ac:	00000a0d 	.word	0x00000a0d
    93b0:	434c3532 	.word	0x434c3532
    93b4:	78303830 	.word	0x78303830
    93b8:	6461203a 	.word	0x6461203a
    93bc:	73657264 	.word	0x73657264
    93c0:	64252073 	.word	0x64252073
    93c4:	20736920 	.word	0x20736920
    93c8:	61657267 	.word	0x61657267
    93cc:	20726574 	.word	0x20726574
    93d0:	6e616874 	.word	0x6e616874
    93d4:	78616d20 	.word	0x78616d20
    93d8:	6c6c6120 	.word	0x6c6c6120
    93dc:	6465776f 	.word	0x6465776f
    93e0:	0d642520 	.word	0x0d642520
    93e4:	0000000a 	.word	0x0000000a
    93e8:	434c3532 	.word	0x434c3532
    93ec:	78303631 	.word	0x78303631
    93f0:	6461203a 	.word	0x6461203a
    93f4:	73657264 	.word	0x73657264
    93f8:	64252073 	.word	0x64252073
    93fc:	20736920 	.word	0x20736920
    9400:	61657267 	.word	0x61657267
    9404:	20726574 	.word	0x20726574
    9408:	6e616874 	.word	0x6e616874
    940c:	78616d20 	.word	0x78616d20
    9410:	6c6c6120 	.word	0x6c6c6120
    9414:	6465776f 	.word	0x6465776f
    9418:	0d642520 	.word	0x0d642520
    941c:	0000000a 	.word	0x0000000a
    9420:	434c3532 	.word	0x434c3532
    9424:	78303233 	.word	0x78303233
    9428:	6461203a 	.word	0x6461203a
    942c:	73657264 	.word	0x73657264
    9430:	64252073 	.word	0x64252073
    9434:	20736920 	.word	0x20736920
    9438:	61657267 	.word	0x61657267
    943c:	20726574 	.word	0x20726574
    9440:	6e616874 	.word	0x6e616874
    9444:	78616d20 	.word	0x78616d20
    9448:	6c6c6120 	.word	0x6c6c6120
    944c:	6465776f 	.word	0x6465776f
    9450:	0d642520 	.word	0x0d642520
    9454:	0000000a 	.word	0x0000000a
    9458:	434c3532 	.word	0x434c3532
    945c:	78303436 	.word	0x78303436
    9460:	6461203a 	.word	0x6461203a
    9464:	73657264 	.word	0x73657264
    9468:	64252073 	.word	0x64252073
    946c:	20736920 	.word	0x20736920
    9470:	61657267 	.word	0x61657267
    9474:	20726574 	.word	0x20726574
    9478:	6e616874 	.word	0x6e616874
    947c:	78616d20 	.word	0x78616d20
    9480:	6c6c6120 	.word	0x6c6c6120
    9484:	6465776f 	.word	0x6465776f
    9488:	0d642520 	.word	0x0d642520
    948c:	0000000a 	.word	0x0000000a
    9490:	434c3532 	.word	0x434c3532
    9494:	3a383231 	.word	0x3a383231
    9498:	64646120 	.word	0x64646120
    949c:	73736572 	.word	0x73736572
    94a0:	20642520 	.word	0x20642520
    94a4:	67207369 	.word	0x67207369
    94a8:	74616572 	.word	0x74616572
    94ac:	74207265 	.word	0x74207265
    94b0:	206e6168 	.word	0x206e6168
    94b4:	2078616d 	.word	0x2078616d
    94b8:	6f6c6c61 	.word	0x6f6c6c61
    94bc:	20646577 	.word	0x20646577
    94c0:	0a0d6425 	.word	0x0a0d6425
    94c4:	00000000 	.word	0x00000000
    94c8:	434c3532 	.word	0x434c3532
    94cc:	3a363532 	.word	0x3a363532
    94d0:	64646120 	.word	0x64646120
    94d4:	73736572 	.word	0x73736572
    94d8:	20642520 	.word	0x20642520
    94dc:	67207369 	.word	0x67207369
    94e0:	74616572 	.word	0x74616572
    94e4:	74207265 	.word	0x74207265
    94e8:	206e6168 	.word	0x206e6168
    94ec:	2078616d 	.word	0x2078616d
    94f0:	6f6c6c61 	.word	0x6f6c6c61
    94f4:	20646577 	.word	0x20646577
    94f8:	0a0d6425 	.word	0x0a0d6425
    94fc:	00000000 	.word	0x00000000
    9500:	434c3532 	.word	0x434c3532
    9504:	663a7878 	.word	0x663a7878
    9508:	656c6961 	.word	0x656c6961
    950c:	6f742064 	.word	0x6f742064
    9510:	6c617620 	.word	0x6c617620
    9514:	74616469 	.word	0x74616469
    9518:	64612065 	.word	0x64612065
    951c:	73657264 	.word	0x73657264
    9520:	65652073 	.word	0x65652073
    9524:	6d6f7270 	.word	0x6d6f7270
    9528:	70797420 	.word	0x70797420
    952c:	6e752065 	.word	0x6e752065
    9530:	776f6e6b 	.word	0x776f6e6b
    9534:	000a0d6e 	.word	0x000a0d6e
    9538:	434c3532 	.word	0x434c3532
    953c:	203a7878 	.word	0x203a7878
    9540:	6c696166 	.word	0x6c696166
    9544:	74206465 	.word	0x74206465
    9548:	7369206f 	.word	0x7369206f
    954c:	20657573 	.word	0x20657573
    9550:	64616572 	.word	0x64616572
    9554:	6d6f6320 	.word	0x6d6f6320
    9558:	646e616d 	.word	0x646e616d
    955c:	000a0d20 	.word	0x000a0d20
    9560:	434c3532 	.word	0x434c3532
    9564:	203a7878 	.word	0x203a7878
    9568:	6c696166 	.word	0x6c696166
    956c:	72206465 	.word	0x72206465
    9570:	20646165 	.word	0x20646165
    9574:	65747962 	.word	0x65747962
    9578:	000a0d20 	.word	0x000a0d20
    957c:	434c3532 	.word	0x434c3532
    9580:	203a7878 	.word	0x203a7878
    9584:	6c696166 	.word	0x6c696166
    9588:	74206465 	.word	0x74206465
    958c:	6567206f 	.word	0x6567206f
    9590:	79622074 	.word	0x79622074
    9594:	0d736574 	.word	0x0d736574
    9598:	0000000a 	.word	0x0000000a
    959c:	434c3532 	.word	0x434c3532
    95a0:	203a7878 	.word	0x203a7878
    95a4:	6c696166 	.word	0x6c696166
    95a8:	74206465 	.word	0x74206465
    95ac:	7277206f 	.word	0x7277206f
    95b0:	2c657469 	.word	0x2c657469
    95b4:	766e6920 	.word	0x766e6920
    95b8:	64696c61 	.word	0x64696c61
    95bc:	64646120 	.word	0x64646120
    95c0:	73736572 	.word	0x73736572
    95c4:	000a0d20 	.word	0x000a0d20
    95c8:	434c3532 	.word	0x434c3532
    95cc:	663a7878 	.word	0x663a7878
    95d0:	656c6961 	.word	0x656c6961
    95d4:	6f742064 	.word	0x6f742064
    95d8:	6e657320 	.word	0x6e657320
    95dc:	72652064 	.word	0x72652064
    95e0:	20657361 	.word	0x20657361
    95e4:	74636573 	.word	0x74636573
    95e8:	0a0d726f 	.word	0x0a0d726f
    95ec:	00000000 	.word	0x00000000
    95f0:	434c3532 	.word	0x434c3532
    95f4:	203a7878 	.word	0x203a7878
    95f8:	6c696166 	.word	0x6c696166
    95fc:	74206465 	.word	0x74206465
    9600:	7865206f 	.word	0x7865206f
    9604:	74756365 	.word	0x74756365
    9608:	61202c65 	.word	0x61202c65
    960c:	6d657474 	.word	0x6d657474
    9610:	74207470 	.word	0x74207470
    9614:	7277206f 	.word	0x7277206f
    9618:	20657469 	.word	0x20657469
    961c:	6f796562 	.word	0x6f796562
    9620:	7020646e 	.word	0x7020646e
    9624:	20656761 	.word	0x20656761
    9628:	6e756f62 	.word	0x6e756f62
    962c:	79726164 	.word	0x79726164
    9630:	00000a0d 	.word	0x00000a0d
    9634:	434c3532 	.word	0x434c3532
    9638:	203a7878 	.word	0x203a7878
    963c:	65676170 	.word	0x65676170
    9640:	20642520 	.word	0x20642520
    9644:	72617473 	.word	0x72617473
    9648:	64612074 	.word	0x64612074
    964c:	73657264 	.word	0x73657264
    9650:	64253a73 	.word	0x64253a73
    9654:	646e6520 	.word	0x646e6520
    9658:	64646120 	.word	0x64646120
    965c:	73736572 	.word	0x73736572
    9660:	0d64253a 	.word	0x0d64253a
    9664:	0000000a 	.word	0x0000000a
    9668:	434c3532 	.word	0x434c3532
    966c:	78303830 	.word	0x78303830
    9670:	6170203a 	.word	0x6170203a
    9674:	25206567 	.word	0x25206567
    9678:	73692064 	.word	0x73692064
    967c:	65726720 	.word	0x65726720
    9680:	72657461 	.word	0x72657461
    9684:	61687420 	.word	0x61687420
    9688:	616d206e 	.word	0x616d206e
    968c:	61702078 	.word	0x61702078
    9690:	6e206567 	.word	0x6e206567
    9694:	65626d75 	.word	0x65626d75
    9698:	64252072 	.word	0x64252072
    969c:	00000a0d 	.word	0x00000a0d
    96a0:	434c3532 	.word	0x434c3532
    96a4:	78303631 	.word	0x78303631
    96a8:	6170203a 	.word	0x6170203a
    96ac:	25206567 	.word	0x25206567
    96b0:	73692064 	.word	0x73692064
    96b4:	65726720 	.word	0x65726720
    96b8:	72657461 	.word	0x72657461
    96bc:	61687420 	.word	0x61687420
    96c0:	616d206e 	.word	0x616d206e
    96c4:	61702078 	.word	0x61702078
    96c8:	6e206567 	.word	0x6e206567
    96cc:	65626d75 	.word	0x65626d75
    96d0:	64252072 	.word	0x64252072
    96d4:	00000a0d 	.word	0x00000a0d
    96d8:	434c3532 	.word	0x434c3532
    96dc:	78303233 	.word	0x78303233
    96e0:	6170203a 	.word	0x6170203a
    96e4:	25206567 	.word	0x25206567
    96e8:	73692064 	.word	0x73692064
    96ec:	65726720 	.word	0x65726720
    96f0:	72657461 	.word	0x72657461
    96f4:	61687420 	.word	0x61687420
    96f8:	616d206e 	.word	0x616d206e
    96fc:	61702078 	.word	0x61702078
    9700:	6e206567 	.word	0x6e206567
    9704:	65626d75 	.word	0x65626d75
    9708:	64252072 	.word	0x64252072
    970c:	00000a0d 	.word	0x00000a0d
    9710:	434c3532 	.word	0x434c3532
    9714:	78303436 	.word	0x78303436
    9718:	6170203a 	.word	0x6170203a
    971c:	25206567 	.word	0x25206567
    9720:	73692064 	.word	0x73692064
    9724:	65726720 	.word	0x65726720
    9728:	72657461 	.word	0x72657461
    972c:	61687420 	.word	0x61687420
    9730:	616d206e 	.word	0x616d206e
    9734:	61702078 	.word	0x61702078
    9738:	6e206567 	.word	0x6e206567
    973c:	65626d75 	.word	0x65626d75
    9740:	64252072 	.word	0x64252072
    9744:	00000a0d 	.word	0x00000a0d
    9748:	434c3532 	.word	0x434c3532
    974c:	3a383231 	.word	0x3a383231
    9750:	67617020 	.word	0x67617020
    9754:	64252065 	.word	0x64252065
    9758:	20736920 	.word	0x20736920
    975c:	61657267 	.word	0x61657267
    9760:	20726574 	.word	0x20726574
    9764:	6e616874 	.word	0x6e616874
    9768:	78616d20 	.word	0x78616d20
    976c:	67617020 	.word	0x67617020
    9770:	756e2065 	.word	0x756e2065
    9774:	7265626d 	.word	0x7265626d
    9778:	0d642520 	.word	0x0d642520
    977c:	0000000a 	.word	0x0000000a
    9780:	434c3532 	.word	0x434c3532
    9784:	3a363532 	.word	0x3a363532
    9788:	67617020 	.word	0x67617020
    978c:	64252065 	.word	0x64252065
    9790:	20736920 	.word	0x20736920
    9794:	61657267 	.word	0x61657267
    9798:	20726574 	.word	0x20726574
    979c:	6e616874 	.word	0x6e616874
    97a0:	78616d20 	.word	0x78616d20
    97a4:	67617020 	.word	0x67617020
    97a8:	756e2065 	.word	0x756e2065
    97ac:	7265626d 	.word	0x7265626d
    97b0:	0d642520 	.word	0x0d642520
    97b4:	0000000a 	.word	0x0000000a
    97b8:	434c3532 	.word	0x434c3532
    97bc:	3a323135 	.word	0x3a323135
    97c0:	67617020 	.word	0x67617020
    97c4:	64252065 	.word	0x64252065
    97c8:	20736920 	.word	0x20736920
    97cc:	61657267 	.word	0x61657267
    97d0:	20726574 	.word	0x20726574
    97d4:	6e616874 	.word	0x6e616874
    97d8:	78616d20 	.word	0x78616d20
    97dc:	67617020 	.word	0x67617020
    97e0:	756e2065 	.word	0x756e2065
    97e4:	7265626d 	.word	0x7265626d
    97e8:	0d642520 	.word	0x0d642520
    97ec:	0000000a 	.word	0x0000000a
    97f0:	434c3532 	.word	0x434c3532
    97f4:	663a7878 	.word	0x663a7878
    97f8:	656c6961 	.word	0x656c6961
    97fc:	6f742064 	.word	0x6f742064
    9800:	6c617620 	.word	0x6c617620
    9804:	74616469 	.word	0x74616469
    9808:	61702065 	.word	0x61702065
    980c:	64206567 	.word	0x64206567
    9810:	63697665 	.word	0x63697665
    9814:	79742065 	.word	0x79742065
    9818:	75206570 	.word	0x75206570
    981c:	6f6e6b6e 	.word	0x6f6e6b6e
    9820:	0a0d6e77 	.word	0x0a0d6e77
    9824:	00000000 	.word	0x00000000
    9828:	434c3532 	.word	0x434c3532
    982c:	693a7878 	.word	0x693a7878
    9830:	6c61766e 	.word	0x6c61766e
    9834:	64206469 	.word	0x64206469
    9838:	63697665 	.word	0x63697665
    983c:	79742065 	.word	0x79742065
    9840:	0a0d6570 	.word	0x0a0d6570
    9844:	00000000 	.word	0x00000000
    9848:	434c3532 	.word	0x434c3532
    984c:	203a7878 	.word	0x203a7878
    9850:	6c696166 	.word	0x6c696166
    9854:	74206465 	.word	0x74206465
    9858:	7277206f 	.word	0x7277206f
    985c:	20657469 	.word	0x20657469
    9860:	6d6f7266 	.word	0x6d6f7266
    9864:	64646120 	.word	0x64646120
    9868:	73736572 	.word	0x73736572
    986c:	6425203a 	.word	0x6425203a
    9870:	3532202c 	.word	0x3532202c
    9874:	6f202525 	.word	0x6f202525
    9878:	68742066 	.word	0x68742066
    987c:	70752065 	.word	0x70752065
    9880:	20726570 	.word	0x20726570
    9884:	6f6d656d 	.word	0x6f6d656d
    9888:	69207972 	.word	0x69207972
    988c:	72772073 	.word	0x72772073
    9890:	20657469 	.word	0x20657469
    9894:	746f7270 	.word	0x746f7270
    9898:	65746365 	.word	0x65746365
    989c:	000a0d64 	.word	0x000a0d64
    98a0:	434c3532 	.word	0x434c3532
    98a4:	203a7878 	.word	0x203a7878
    98a8:	6c696166 	.word	0x6c696166
    98ac:	74206465 	.word	0x74206465
    98b0:	7277206f 	.word	0x7277206f
    98b4:	20657469 	.word	0x20657469
    98b8:	6d6f7266 	.word	0x6d6f7266
    98bc:	64646120 	.word	0x64646120
    98c0:	73736572 	.word	0x73736572
    98c4:	6425203a 	.word	0x6425203a
    98c8:	6168202c 	.word	0x6168202c
    98cc:	6f20666c 	.word	0x6f20666c
    98d0:	68742066 	.word	0x68742066
    98d4:	656d2065 	.word	0x656d2065
    98d8:	79726f6d 	.word	0x79726f6d
    98dc:	20736920 	.word	0x20736920
    98e0:	74697277 	.word	0x74697277
    98e4:	72702065 	.word	0x72702065
    98e8:	6365746f 	.word	0x6365746f
    98ec:	0d646574 	.word	0x0d646574
    98f0:	0000000a 	.word	0x0000000a
    98f4:	434c3532 	.word	0x434c3532
    98f8:	203a7878 	.word	0x203a7878
    98fc:	74697277 	.word	0x74697277
    9900:	61662065 	.word	0x61662065
    9904:	64656c69 	.word	0x64656c69
    9908:	6565202c 	.word	0x6565202c
    990c:	6d6f7270 	.word	0x6d6f7270
    9910:	6c756620 	.word	0x6c756620
    9914:	656d206c 	.word	0x656d206c
    9918:	79726f6d 	.word	0x79726f6d
    991c:	69727720 	.word	0x69727720
    9920:	70206574 	.word	0x70206574
    9924:	65746f72 	.word	0x65746f72
    9928:	64657463 	.word	0x64657463
    992c:	6863202c 	.word	0x6863202c
    9930:	206b6365 	.word	0x206b6365
    9934:	20656874 	.word	0x20656874
    9938:	73205042 	.word	0x73205042
    993c:	75746174 	.word	0x75746174
    9940:	000a0d73 	.word	0x000a0d73
    9944:	434c3532 	.word	0x434c3532
    9948:	203a7878 	.word	0x203a7878
    994c:	74697277 	.word	0x74697277
    9950:	61662065 	.word	0x61662065
    9954:	64656c69 	.word	0x64656c69
    9958:	6b6e752c 	.word	0x6b6e752c
    995c:	6e776f6e 	.word	0x6e776f6e
    9960:	6f6c6220 	.word	0x6f6c6220
    9964:	70206b63 	.word	0x70206b63
    9968:	65746f72 	.word	0x65746f72
    996c:	73207463 	.word	0x73207463
    9970:	75746174 	.word	0x75746174
    9974:	000a0d73 	.word	0x000a0d73
    9978:	434c3532 	.word	0x434c3532
    997c:	663a7878 	.word	0x663a7878
    9980:	656c6961 	.word	0x656c6961
    9984:	6f742064 	.word	0x6f742064
    9988:	6e657320 	.word	0x6e657320
    998c:	72772064 	.word	0x72772064
    9990:	20657469 	.word	0x20657469
    9994:	6d6d6f63 	.word	0x6d6d6f63
    9998:	0d646e61 	.word	0x0d646e61
    999c:	0000000a 	.word	0x0000000a
    99a0:	434c3532 	.word	0x434c3532
    99a4:	663a7878 	.word	0x663a7878
    99a8:	656c6961 	.word	0x656c6961
    99ac:	6f742064 	.word	0x6f742064
    99b0:	69727720 	.word	0x69727720
    99b4:	64206574 	.word	0x64206574
    99b8:	20617461 	.word	0x20617461
    99bc:	65747962 	.word	0x65747962
    99c0:	00000a0d 	.word	0x00000a0d
    99c4:	434c3532 	.word	0x434c3532
    99c8:	203a7878 	.word	0x203a7878
    99cc:	6c696166 	.word	0x6c696166
    99d0:	74206465 	.word	0x74206465
    99d4:	7570206f 	.word	0x7570206f
    99d8:	79622074 	.word	0x79622074
    99dc:	0d736574 	.word	0x0d736574
    99e0:	0000000a 	.word	0x0000000a
    99e4:	434c3532 	.word	0x434c3532
    99e8:	203a7878 	.word	0x203a7878
    99ec:	6c696166 	.word	0x6c696166
    99f0:	74206465 	.word	0x74206465
    99f4:	6572206f 	.word	0x6572206f
    99f8:	57206461 	.word	0x57206461
    99fc:	73205049 	.word	0x73205049
    9a00:	75746174 	.word	0x75746174
    9a04:	000a0d73 	.word	0x000a0d73
    9a08:	434c3532 	.word	0x434c3532
    9a0c:	663a7878 	.word	0x663a7878
    9a10:	656c6961 	.word	0x656c6961
    9a14:	6f742064 	.word	0x6f742064
    9a18:	61726520 	.word	0x61726520
    9a1c:	70206573 	.word	0x70206573
    9a20:	0d656761 	.word	0x0d656761
    9a24:	0000000a 	.word	0x0000000a
    9a28:	434c3532 	.word	0x434c3532
    9a2c:	00787878 	.word	0x00787878
    9a30:	00495053 	.word	0x00495053
    9a34:	7263694d 	.word	0x7263694d
    9a38:	6968636f 	.word	0x6968636f
    9a3c:	65542070 	.word	0x65542070
    9a40:	6f6e6863 	.word	0x6f6e6863
    9a44:	79676f6c 	.word	0x79676f6c
    9a48:	00000000 	.word	0x00000000
    9a4c:	434c3532 	.word	0x434c3532
    9a50:	203a7878 	.word	0x203a7878
    9a54:	74696e69 	.word	0x74696e69
    9a58:	696c6169 	.word	0x696c6169
    9a5c:	6620657a 	.word	0x6620657a
    9a60:	656c6961 	.word	0x656c6961
    9a64:	000a0d64 	.word	0x000a0d64
    9a68:	434c3532 	.word	0x434c3532
    9a6c:	203a7878 	.word	0x203a7878
    9a70:	6c696166 	.word	0x6c696166
    9a74:	74206465 	.word	0x74206465
    9a78:	6573206f 	.word	0x6573206f
    9a7c:	65642074 	.word	0x65642074
    9a80:	65636976 	.word	0x65636976
    9a84:	70797420 	.word	0x70797420
    9a88:	000a0d65 	.word	0x000a0d65
    9a8c:	434c3532 	.word	0x434c3532
    9a90:	663a7878 	.word	0x663a7878
    9a94:	656c6961 	.word	0x656c6961
    9a98:	6f742064 	.word	0x6f742064
    9a9c:	74657320 	.word	0x74657320
    9aa0:	67617020 	.word	0x67617020
    9aa4:	69732065 	.word	0x69732065
    9aa8:	0a0d657a 	.word	0x0a0d657a
    9aac:	00000000 	.word	0x00000000
    9ab0:	434c3532 	.word	0x434c3532
    9ab4:	663a7878 	.word	0x663a7878
    9ab8:	656c6961 	.word	0x656c6961
    9abc:	6f742064 	.word	0x6f742064
    9ac0:	74657320 	.word	0x74657320
    9ac4:	6f6c6220 	.word	0x6f6c6220
    9ac8:	70206b63 	.word	0x70206b63
    9acc:	65746f72 	.word	0x65746f72
    9ad0:	73207463 	.word	0x73207463
    9ad4:	75746174 	.word	0x75746174
    9ad8:	000a0d73 	.word	0x000a0d73
    9adc:	434c3532 	.word	0x434c3532
    9ae0:	663a7878 	.word	0x663a7878
    9ae4:	656c6961 	.word	0x656c6961
    9ae8:	6f742064 	.word	0x6f742064
    9aec:	74657320 	.word	0x74657320
    9af0:	69727720 	.word	0x69727720
    9af4:	70206574 	.word	0x70206574
    9af8:	65746f72 	.word	0x65746f72
    9afc:	73207463 	.word	0x73207463
    9b00:	75746174 	.word	0x75746174
    9b04:	000a0d73 	.word	0x000a0d73
    9b08:	434c3532 	.word	0x434c3532
    9b0c:	203a7878 	.word	0x203a7878
    9b10:	6c696166 	.word	0x6c696166
    9b14:	74206465 	.word	0x74206465
    9b18:	6567206f 	.word	0x6567206f
    9b1c:	656d2074 	.word	0x656d2074
    9b20:	79726f6d 	.word	0x79726f6d
    9b24:	6e656c20 	.word	0x6e656c20
    9b28:	0d687467 	.word	0x0d687467
    9b2c:	0000000a 	.word	0x0000000a
    9b30:	682f2e2e 	.word	0x682f2e2e
    9b34:	732f6c61 	.word	0x732f6c61
    9b38:	682f6372 	.word	0x682f6372
    9b3c:	695f6c61 	.word	0x695f6c61
    9b40:	00632e6f 	.word	0x00632e6f
    9b44:	682f2e2e 	.word	0x682f2e2e
    9b48:	732f6c61 	.word	0x732f6c61
    9b4c:	682f6372 	.word	0x682f6372
    9b50:	735f6c61 	.word	0x735f6c61
    9b54:	6d5f6970 	.word	0x6d5f6970
    9b58:	6e79735f 	.word	0x6e79735f
    9b5c:	00632e63 	.word	0x00632e63
    9b60:	682f2e2e 	.word	0x682f2e2e
    9b64:	732f6c61 	.word	0x732f6c61
    9b68:	682f6372 	.word	0x682f6372
    9b6c:	755f6c61 	.word	0x755f6c61
    9b70:	74726173 	.word	0x74726173
    9b74:	7973615f 	.word	0x7973615f
    9b78:	632e636e 	.word	0x632e636e
    9b7c:	00000000 	.word	0x00000000
    9b80:	682f2e2e 	.word	0x682f2e2e
    9b84:	752f6c61 	.word	0x752f6c61
    9b88:	736c6974 	.word	0x736c6974
    9b8c:	6372732f 	.word	0x6372732f
    9b90:	6974752f 	.word	0x6974752f
    9b94:	725f736c 	.word	0x725f736c
    9b98:	62676e69 	.word	0x62676e69
    9b9c:	65666675 	.word	0x65666675
    9ba0:	00632e72 	.word	0x00632e72

00009ba4 <_usarts>:
    9ba4:	00000005 40100004 00030000 0000c504     .......@........
    9bb4:	00000000                                ....

00009bb8 <_i2cms>:
	...

00009bd0 <_i2css>:
	...

00009be0 <sercomspi_regs>:
    9be0:	0030000c 00020000 00000000 00000009     ..0.............
    9bf0:	00000000 682f2e2e 732f6c70 6f637265     ....../hpl/serco
    9c00:	70682f6d 65735f6c 6d6f6372 0000632e     m/hpl_sercom.c..

00009c10 <pDataWrite>:
    9c10:	72646563 00006369 00000000 70696843     cedric......Chip
    9c20:	6d614e20 09203a65 0a0d7325 00000000      Name: .%s......
    9c30:	756e614d 74636166 3a657275 73250920     Manufacture: .%s
    9c40:	00000a0d 65746e49 63616672 09203a65     ....Interface: .
    9c50:	0a0d7325 00000000 70707553 5620796c     %s......Supply V
    9c60:	20746c6f 3a78614d 2e250920 0d566631     olt Max: .%.1fV.
    9c70:	0000000a 70707553 5620796c 20746c6f     ....Supply Volt 
    9c80:	3a6e694d 2e250920 0d566631 0000000a     Min: .%.1fV.....
    9c90:	6978614d 206d756d 72727543 3a746e65     Maximum Current:
    9ca0:	2e250920 416d6631 00000a0d 706d6554      .%.1fmA....Temp
    9cb0:	74617265 20657275 3a78614d 2e250920     erature Max: .%.
    9cc0:	0d436631 0000000a 706d6554 74617265     1fC.....Temperat
    9cd0:	20657275 3a6e694d 2e250920 0d436631     ure Min: .%.1fC.
    9ce0:	0000000a 76697244 56207265 69737265     ....Driver Versi
    9cf0:	203a6e6f 2e255609 252e6631 0d64322e     on: .V%.1f.%.2d.
    9d00:	0000000a 636f6c42 7270206b 6365746f     ....Block protec
    9d10:	74732074 73757461 6425203a 0000000a     t status: %d....
    9d20:	72646461 20737365 64616572 6425203a     address read: %d
    9d30:	74614420 65522061 3a206461 000a7825      Data Read :%x..
    9d40:	7465470a 74616420 25203a65 000a756c     .Get date: %lu..
    9d50:	61746f54 6973206c 3a20657a 20642520     Total size : %d 
    9d60:	65747942 72460a73 73206565 65636170     Bytes.Free space
    9d70:	6425203a 74794220 550a7365 20646573     : %d Bytes.Used 
    9d80:	63617073 25203a65 79422064 0a736574     space: %d Bytes.
    9d90:	00000000 00002d30 00002d00 00002d12     ....0-...-...-..
    9da0:	00002c54 00002d12 00002cf6 00002d12     T,...-...,...-..
    9db0:	00002c54 00002d00 00002d00 00002cf6     T,...-...-...,..
    9dc0:	00002c54 00002c5c 00002c5c 00002c5c     T,..\,..\,..\,..
    9dd0:	00002d18 00002d00 00002d00 00002cd4     .-...-...-...,..
    9de0:	00002db8 00002cd4 00002cf6 00002cd4     .-...,...,...,..
    9df0:	00002db8 00002d00 00002d00 00002cf6     .-...-...-...,..
    9e00:	00002db8 00002c5c 00002c5c 00002c5c     .-..\,..\,..\,..
    9e10:	00002dc2 00003af0 00003ad2 00003a8c     .-...:...:...:..
    9e20:	000039aa 00003a8c 00003ac4 00003a8c     .9...:...:...:..
    9e30:	000039aa 00003ad2 00003ad2 00003ac4     .9...:...:...:..
    9e40:	000039aa 000039a2 000039a2 000039a2     .9...9...9...9..
    9e50:	00003d08 00004350 00004210 00004210     .=..PC...B...B..
    9e60:	0000420c 00004328 00004328 0000431a     .B..(C..(C...C..
    9e70:	0000420c 00004328 0000431a 00004328     .B..(C...C..(C..
    9e80:	0000420c 00004330 00004330 00004330     .B..0C..0C..0C..
    9e90:	00004534                                4E..

00009e94 <_global_impure_ptr>:
    9e94:	20000010 69666e49 7974696e 00000000     ... Infinity....
    9ea4:	004e614e 00000030 00000000              NaN.0.......

00009eb0 <__mprec_bigtens>:
    9eb0:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    9ec0:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    9ed0:	7f73bf3c 75154fdd                       <.s..O.u

00009ed8 <__mprec_tens>:
    9ed8:	00000000 3ff00000 00000000 40240000     .......?......$@
    9ee8:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    9ef8:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    9f08:	00000000 412e8480 00000000 416312d0     .......A......cA
    9f18:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    9f28:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    9f38:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    9f48:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    9f58:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    9f68:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    9f78:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    9f88:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    9f98:	79d99db4 44ea7843                       ...yCx.D

00009fa0 <p05.6055>:
    9fa0:	00000005 00000019 0000007d 00007a44     ........}...Dz..
    9fb0:	00007ab8 00007ab8 00007a28 00007ab8     .z...z..(z...z..
    9fc0:	00007ab8 00007ab8 00007ab8 00007ab8     .z...z...z...z..
    9fd0:	00007ab8 00007a30 00007512 00007ab8     .z..0z...u...z..
    9fe0:	000074cc 0000751c 00007ab8 00007568     .t...u...z..hu..
    9ff0:	00007752 00007752 00007752 00007752     Rw..Rw..Rw..Rw..
    a000:	00007752 00007752 00007752 00007752     Rw..Rw..Rw..Rw..
    a010:	00007752 00007ab8 00007ab8 00007ab8     Rw...z...z...z..
    a020:	00007ab8 00007ab8 00007ab8 00007ab8     .z...z...z...z..
    a030:	00007ab8 00007ab8 00007ab8 00007570     .z...z...z..pu..
    a040:	000076b8 00007ab8 000076b8 00007ab8     .v...z...v...z..
    a050:	00007ab8 00007ab8 00007ab8 00007782     .z...z...z...w..
    a060:	00007ab8 00007ab8 0000778a 00007ab8     .z...z...w...z..
    a070:	00007ab8 00007ab8 00007ab8 00007ab8     .z...z...z...z..
    a080:	0000782c 00007ab8 00007ab8 0000785e     ,x...z...z..^x..
    a090:	00007ab8 00007ab8 00007ab8 00007ab8     .z...z...z...z..
    a0a0:	00007ab8 00007ab8 00007ab8 00007ab8     .z...z...z...z..
    a0b0:	00007ab8 00007ab8 00007958 0000798c     .z...z..Xy...y..
    a0c0:	000076b8 000076b8 000076b8 0000799e     .v...v...v...y..
    a0d0:	0000798c 00007ab8 00007ab8 000079a6     .y...z...z...y..
    a0e0:	00007ab8 000078c0 00007a86 000079fc     .z...x...z...y..
    a0f0:	000078f6 00007ab8 000078fe 00007ab8     .x...z...x...z..
    a100:	00007a54 00007ab8 00007ab8 000079b6     Tz...z...z...y..
    a110:	00464e49 00666e69 004e414e 006e616e     INF.inf.NAN.nan.
    a120:	33323130 37363534 42413938 46454443     0123456789ABCDEF
    a130:	00000000 33323130 37363534 62613938     ....0123456789ab
    a140:	66656463 00000000 6c756e28 0000296c     cdef....(null)..

0000a150 <blanks.7223>:
    a150:	20202020 20202020 20202020 20202020                     

0000a160 <zeroes.7224>:
    a160:	30303030 30303030 30303030 30303030     0000000000000000
    a170:	00000043 49534f50 00000058 0000002e     C...POSIX.......

0000a180 <_ctype_>:
    a180:	20202000 20202020 28282020 20282828     .         ((((( 
    a190:	20202020 20202020 20202020 20202020                     
    a1a0:	10108820 10101010 10101010 10101010      ...............
    a1b0:	04040410 04040404 10040404 10101010     ................
    a1c0:	41411010 41414141 01010101 01010101     ..AAAAAA........
    a1d0:	01010101 01010101 01010101 10101010     ................
    a1e0:	42421010 42424242 02020202 02020202     ..BBBBBB........
    a1f0:	02020202 02020202 02020202 10101010     ................
    a200:	00000020 00000000 00000000 00000000      ...............
	...

0000a284 <_init>:
    a284:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a286:	46c0      	nop			; (mov r8, r8)
    a288:	bcf8      	pop	{r3, r4, r5, r6, r7}
    a28a:	bc08      	pop	{r3}
    a28c:	469e      	mov	lr, r3
    a28e:	4770      	bx	lr

0000a290 <__init_array_start>:
    a290:	00005375 	.word	0x00005375

0000a294 <__frame_dummy_init_array_entry>:
    a294:	000000dd                                ....

0000a298 <_fini>:
    a298:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a29a:	46c0      	nop			; (mov r8, r8)
    a29c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    a29e:	bc08      	pop	{r3}
    a2a0:	469e      	mov	lr, r3
    a2a2:	4770      	bx	lr

0000a2a4 <__fini_array_start>:
    a2a4:	000000b5 	.word	0x000000b5
